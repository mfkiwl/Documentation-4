<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Kratos::StokesInitializationProcess&lt; TSparseSpace, TDenseSpace, TLinearSolver &gt; Pages: 1 -->
<svg width="336pt" height="1124pt"
 viewBox="0.00 0.00 335.50 1124.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1120)">
<title>Kratos::StokesInitializationProcess&lt; TSparseSpace, TDenseSpace, TLinearSolver &gt;</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="A process to provide initial values for Navier&#45;Stokes problems.">
<polygon fill="#bfbfbf" stroke="black" points="84,-0.5 84,-431.5 293,-431.5 293,-0.5 84,-0.5"/>
<text text-anchor="start" x="92" y="-419.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::StokesInitialization</text>
<text text-anchor="start" x="92" y="-408.5" font-family="Helvetica,sans-Serif" font-size="10.00">Process&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="188.5" y="-397.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="84,-390.5 293,-390.5 "/>
<text text-anchor="start" x="92" y="-378.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpLinearSolver</text>
<text text-anchor="start" x="92" y="-367.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mDomainSize</text>
<text text-anchor="start" x="92" y="-356.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpSolutionStrategy</text>
<text text-anchor="start" x="92" y="-345.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mIsCleared</text>
<polyline fill="none" stroke="black" points="84,-338.5 293,-338.5 "/>
<text text-anchor="start" x="92" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="92" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="92" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ StokesInitializationProcess()</text>
<text text-anchor="start" x="92" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~StokesInitializationProcess()</text>
<text text-anchor="start" x="92" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Execute()</text>
<text text-anchor="start" x="92" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetConditions()</text>
<text text-anchor="start" x="92" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="92" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="92" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="92" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00"># StokesInitializationProcess()</text>
<text text-anchor="start" x="92" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Solve()</text>
<text text-anchor="start" x="92" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Clear()</text>
<text text-anchor="start" x="92" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpLinearSolver</text>
<text text-anchor="start" x="92" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mDomainSize</text>
<text text-anchor="start" x="92" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpSolutionStrategy</text>
<text text-anchor="start" x="92" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mIsCleared</text>
<text text-anchor="start" x="92" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="92" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="92" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StokesInitializationProcess()</text>
<text text-anchor="start" x="92" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~StokesInitializationProcess()</text>
<text text-anchor="start" x="92" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Execute()</text>
<text text-anchor="start" x="92" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetConditions()</text>
<text text-anchor="start" x="92" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="92" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="92" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="92" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StokesInitializationProcess()</text>
<text text-anchor="start" x="92" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="92" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="92" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="92" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StokesInitializationProcess()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../d2/d8c/class_kratos_1_1_process.html" target="_top" xlink:title="The base class for all processes in Kratos.">
<polygon fill="none" stroke="black" points="0,-479.5 0,-1020.5 173,-1020.5 173,-479.5 0,-479.5"/>
<text text-anchor="middle" x="86.5" y="-1008.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Process</text>
<polyline fill="none" stroke="black" points="0,-1001.5 173,-1001.5 "/>
<text text-anchor="middle" x="86.5" y="-989.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="0,-982.5 173,-982.5 "/>
<text text-anchor="start" x="8" y="-970.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-959.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-948.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Process()</text>
<text text-anchor="start" x="8" y="-937.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Process()</text>
<text text-anchor="start" x="8" y="-926.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~Process()</text>
<text text-anchor="start" x="8" y="-915.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="8" y="-904.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Create()</text>
<text text-anchor="start" x="8" y="-893.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Execute()</text>
<text text-anchor="start" x="8" y="-882.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteInitialize()</text>
<text text-anchor="start" x="8" y="-871.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteBeforeSolutionLoop()</text>
<text text-anchor="start" x="8" y="-860.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteInitializeSolution</text>
<text text-anchor="start" x="8" y="-849.5" font-family="Helvetica,sans-Serif" font-size="10.00">Step()</text>
<text text-anchor="start" x="8" y="-838.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteFinalizeSolutionStep()</text>
<text text-anchor="start" x="8" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteBeforeOutputStep()</text>
<text text-anchor="start" x="8" y="-816.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteAfterOutputStep()</text>
<text text-anchor="start" x="8" y="-805.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteFinalize()</text>
<text text-anchor="start" x="8" y="-794.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="8" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="8" y="-772.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDefaultParameters()</text>
<text text-anchor="start" x="8" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="8" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="8" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="8" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Process()</text>
<text text-anchor="start" x="8" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Process()</text>
<text text-anchor="start" x="8" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Process()</text>
<text text-anchor="start" x="8" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="8" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="8" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Execute()</text>
<text text-anchor="start" x="8" y="-640.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteInitialize()</text>
<text text-anchor="start" x="8" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteBeforeSolutionLoop()</text>
<text text-anchor="start" x="8" y="-618.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteInitializeSolution</text>
<text text-anchor="start" x="8" y="-607.5" font-family="Helvetica,sans-Serif" font-size="10.00">Step()</text>
<text text-anchor="start" x="8" y="-596.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteFinalizeSolutionStep()</text>
<text text-anchor="start" x="8" y="-585.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteBeforeOutputStep()</text>
<text text-anchor="start" x="8" y="-574.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteAfterOutputStep()</text>
<text text-anchor="start" x="8" y="-563.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteFinalize()</text>
<text text-anchor="start" x="8" y="-552.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="8" y="-541.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="8" y="-530.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefaultParameters()</text>
<text text-anchor="start" x="8" y="-519.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="8" y="-508.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="8" y="-497.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="8" y="-486.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M140.12,-469.31C142.56,-456.63 144.98,-443.99 147.37,-431.51"/>
<polygon fill="none" stroke="midnightblue" points="136.62,-469.01 138.17,-479.49 143.49,-470.33 136.62,-469.01"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:title=" ">
<polygon fill="none" stroke="#bfbfbf" points="65,-1058.5 65,-1115.5 108,-1115.5 108,-1058.5 65,-1058.5"/>
<text text-anchor="middle" x="86.5" y="-1103.5" font-family="Helvetica,sans-Serif" font-size="10.00">Flags</text>
<polyline fill="none" stroke="#bfbfbf" points="65,-1096.5 108,-1096.5 "/>
<text text-anchor="middle" x="86.5" y="-1084.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#bfbfbf" points="65,-1077.5 108,-1077.5 "/>
<text text-anchor="middle" x="86.5" y="-1065.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M86.5,-1048.19C86.5,-1040.01 86.5,-1030.77 86.5,-1020.75"/>
<polygon fill="none" stroke="midnightblue" points="83,-1048.3 86.5,-1058.3 90,-1048.3 83,-1048.3"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="../../d4/d5e/class_model_part.html" target="_top" xlink:title="This class aims to manage meshes for multi&#45;physics simulations.">
<polygon fill="none" stroke="black" points="191,-721.5 191,-778.5 256,-778.5 256,-721.5 191,-721.5"/>
<text text-anchor="middle" x="223.5" y="-766.5" font-family="Helvetica,sans-Serif" font-size="10.00">ModelPart</text>
<polyline fill="none" stroke="black" points="191,-759.5 256,-759.5 "/>
<text text-anchor="middle" x="223.5" y="-747.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="191,-740.5 256,-740.5 "/>
<text text-anchor="middle" x="223.5" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node1 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M221.67,-721.15C218.23,-668.96 210.54,-551.94 203.42,-443.77"/>
<polygon fill="none" stroke="#404040" points="203.41,-443.62 199.02,-437.9 202.62,-431.65 207.01,-437.37 203.41,-443.62"/>
<text text-anchor="middle" x="265.5" y="-453" font-family="Helvetica,sans-Serif" font-size="10.00"> #mrReferenceModelPart</text>
</g>
</g>
</svg>
