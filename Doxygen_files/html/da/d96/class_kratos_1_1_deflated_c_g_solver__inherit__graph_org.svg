<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 7.1.0 (0)
 -->
<!-- Title: Kratos::DeflatedCGSolver&lt; TSparseSpaceType, TDenseSpaceType, TPreconditionerType, TReordererType &gt; Pages: 1 -->
<svg width="246pt" height="2355pt"
 viewBox="0.00 0.00 246.00 2355.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 2351)">
<title>Kratos::DeflatedCGSolver&lt; TSparseSpaceType, TDenseSpaceType, TPreconditionerType, TReordererType &gt;</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Short class definition.">
<polygon fill="#999999" stroke="#666666" points="0,-0.5 0,-486.5 238,-486.5 238,-0.5 0,-0.5"/>
<text text-anchor="start" x="8" y="-474.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::DeflatedCGSolver</text>
<text text-anchor="start" x="8" y="-463.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpaceType, TDenseSpace</text>
<text text-anchor="middle" x="119" y="-452.5" font-family="Helvetica,sans-Serif" font-size="10.00">Type, TPreconditionerType, TReordererType &gt;</text>
<polyline fill="none" stroke="#666666" points="0,-445.5 238,-445.5"/>
<text text-anchor="middle" x="119" y="-433.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="0,-426.5 238,-426.5"/>
<text text-anchor="start" x="8" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ DeflatedCGSolver()</text>
<text text-anchor="start" x="8" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ DeflatedCGSolver()</text>
<text text-anchor="start" x="8" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ DeflatedCGSolver()</text>
<text text-anchor="start" x="8" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ DeflatedCGSolver()</text>
<text text-anchor="start" x="8" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ DeflatedCGSolver()</text>
<text text-anchor="start" x="8" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ DeflatedCGSolver()</text>
<text text-anchor="start" x="8" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~DeflatedCGSolver()</text>
<text text-anchor="start" x="8" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="8" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="8" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="8" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="8" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="8" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="8" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="8" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseMatrixType</text>
<text text-anchor="start" x="8" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseVectorType</text>
<text text-anchor="start" x="8" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseMatrixType</text>
<text text-anchor="start" x="8" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseVectorType</text>
<text text-anchor="start" x="8" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mmax_reduced_size</text>
<text text-anchor="start" x="8" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* massume_constant_structure</text>
<text text-anchor="start" x="8" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mw</text>
<text text-anchor="start" x="8" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mAdeflated</text>
<text text-anchor="start" x="8" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DeflatedCGSolver()</text>
<text text-anchor="start" x="8" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DeflatedCGSolver()</text>
<text text-anchor="start" x="8" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DeflatedCGSolver()</text>
<text text-anchor="start" x="8" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DeflatedCGSolver()</text>
<text text-anchor="start" x="8" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DeflatedCGSolver()</text>
<text text-anchor="start" x="8" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DeflatedCGSolver()</text>
<text text-anchor="start" x="8" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~DeflatedCGSolver()</text>
<text text-anchor="start" x="8" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="8" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="8" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="8" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="8" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="8" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="8" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IterativeSolve()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../df/de5/class_kratos_1_1_iterative_solver.html" target="_top" xlink:title="Base class for all the iterative solvers in Kratos.">
<polygon fill="white" stroke="#666666" points="23.5,-523.5 23.5,-1504.5 214.5,-1504.5 214.5,-523.5 23.5,-523.5"/>
<text text-anchor="start" x="31.5" y="-1492.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::IterativeSolver</text>
<text text-anchor="start" x="31.5" y="-1481.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpaceType, TDenseSpace</text>
<text text-anchor="start" x="31.5" y="-1470.5" font-family="Helvetica,sans-Serif" font-size="10.00">Type, TPreconditionerType,</text>
<text text-anchor="middle" x="119" y="-1459.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TReordererType &gt;</text>
<polyline fill="none" stroke="#666666" points="23.5,-1452.5 214.5,-1452.5"/>
<text text-anchor="start" x="31.5" y="-1440.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mResidualNorm</text>
<text text-anchor="start" x="31.5" y="-1429.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mFirstResidualNorm</text>
<text text-anchor="start" x="31.5" y="-1418.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mIterationsNumber</text>
<text text-anchor="start" x="31.5" y="-1407.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mBNorm</text>
<polyline fill="none" stroke="#666666" points="23.5,-1400.5 214.5,-1400.5"/>
<text text-anchor="start" x="31.5" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IterativeSolver()</text>
<text text-anchor="start" x="31.5" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IterativeSolver()</text>
<text text-anchor="start" x="31.5" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IterativeSolver()</text>
<text text-anchor="start" x="31.5" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IterativeSolver()</text>
<text text-anchor="start" x="31.5" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IterativeSolver()</text>
<text text-anchor="start" x="31.5" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IterativeSolver()</text>
<text text-anchor="start" x="31.5" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~IterativeSolver()</text>
<text text-anchor="start" x="31.5" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="31.5" y="-1300.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="31.5" y="-1289.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="31.5" y="-1278.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="31.5" y="-1267.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AdditionalPhysicalDataIs</text>
<text text-anchor="start" x="31.5" y="-1256.5" font-family="Helvetica,sans-Serif" font-size="10.00">Needed()</text>
<text text-anchor="start" x="31.5" y="-1245.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ProvideAdditionalData()</text>
<text text-anchor="start" x="31.5" y="-1234.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetPreconditioner()</text>
<text text-anchor="start" x="31.5" y="-1223.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetPreconditioner()</text>
<text text-anchor="start" x="31.5" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetPreconditioner()</text>
<text text-anchor="start" x="31.5" y="-1201.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetMaxIterationsNumber()</text>
<text text-anchor="start" x="31.5" y="-1190.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetMaxIterationsNumber()</text>
<text text-anchor="start" x="31.5" y="-1179.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetIterationsNumber()</text>
<text text-anchor="start" x="31.5" y="-1168.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetIterationsNumber()</text>
<text text-anchor="start" x="31.5" y="-1157.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetTolerance()</text>
<text text-anchor="start" x="31.5" y="-1146.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetTolerance()</text>
<text text-anchor="start" x="31.5" y="-1135.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetResidualNorm()</text>
<text text-anchor="start" x="31.5" y="-1124.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetResidualNorm()</text>
<text text-anchor="start" x="31.5" y="-1113.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IterationNeeded()</text>
<text text-anchor="start" x="31.5" y="-1102.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsConverged()</text>
<text text-anchor="start" x="31.5" y="-1091.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="31.5" y="-1080.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="31.5" y="-1069.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="31.5" y="-1058.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PreconditionedMult()</text>
<text text-anchor="start" x="31.5" y="-1047.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PreconditionedTransposeMult()</text>
<text text-anchor="start" x="31.5" y="-1036.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="31.5" y="-1025.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseMatrixType</text>
<text text-anchor="start" x="31.5" y="-1014.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VectorType</text>
<text text-anchor="start" x="31.5" y="-1003.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseMatrixType</text>
<text text-anchor="start" x="31.5" y="-992.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PreconditionerType</text>
<text text-anchor="start" x="31.5" y="-981.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="31.5" y="-970.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="31.5" y="-959.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="31.5" y="-948.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mResidualNorm</text>
<text text-anchor="start" x="31.5" y="-937.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFirstResidualNorm</text>
<text text-anchor="start" x="31.5" y="-926.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mIterationsNumber</text>
<text text-anchor="start" x="31.5" y="-915.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mBNorm</text>
<text text-anchor="start" x="31.5" y="-904.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpPreconditioner</text>
<text text-anchor="start" x="31.5" y="-893.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mTolerance</text>
<text text-anchor="start" x="31.5" y="-882.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxIterationsNumber</text>
<text text-anchor="start" x="31.5" y="-871.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IterativeSolver()</text>
<text text-anchor="start" x="31.5" y="-860.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IterativeSolver()</text>
<text text-anchor="start" x="31.5" y="-849.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IterativeSolver()</text>
<text text-anchor="start" x="31.5" y="-838.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IterativeSolver()</text>
<text text-anchor="start" x="31.5" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IterativeSolver()</text>
<text text-anchor="start" x="31.5" y="-816.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IterativeSolver()</text>
<text text-anchor="start" x="31.5" y="-805.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~IterativeSolver()</text>
<text text-anchor="start" x="31.5" y="-794.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="31.5" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="31.5" y="-772.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="31.5" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="31.5" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AdditionalPhysicalDataIs</text>
<text text-anchor="start" x="31.5" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00">Needed()</text>
<text text-anchor="start" x="31.5" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ProvideAdditionalData()</text>
<text text-anchor="start" x="31.5" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetPreconditioner()</text>
<text text-anchor="start" x="31.5" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetPreconditioner()</text>
<text text-anchor="start" x="31.5" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetPreconditioner()</text>
<text text-anchor="start" x="31.5" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetMaxIterationsNumber()</text>
<text text-anchor="start" x="31.5" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetMaxIterationsNumber()</text>
<text text-anchor="start" x="31.5" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetIterationsNumber()</text>
<text text-anchor="start" x="31.5" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetIterationsNumber()</text>
<text text-anchor="start" x="31.5" y="-640.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetTolerance()</text>
<text text-anchor="start" x="31.5" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetTolerance()</text>
<text text-anchor="start" x="31.5" y="-618.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetResidualNorm()</text>
<text text-anchor="start" x="31.5" y="-607.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetResidualNorm()</text>
<text text-anchor="start" x="31.5" y="-596.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IterationNeeded()</text>
<text text-anchor="start" x="31.5" y="-585.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsConverged()</text>
<text text-anchor="start" x="31.5" y="-574.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="31.5" y="-563.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="31.5" y="-552.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="31.5" y="-541.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PreconditionedMult()</text>
<text text-anchor="start" x="31.5" y="-530.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PreconditionedTransposeMult()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="#63b8ff" d="M119,-512.14C119,-503.48 119,-494.91 119,-486.44"/>
<polygon fill="none" stroke="#63b8ff" points="115.5,-512.06 119,-522.06 122.5,-512.06 115.5,-512.06"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../d1/df6/class_kratos_1_1_linear_solver.html" target="_top" xlink:title="Base class for all the linear solvers in Kratos.">
<polygon fill="white" stroke="#666666" points="23.5,-1541.5 23.5,-2346.5 214.5,-2346.5 214.5,-1541.5 23.5,-1541.5"/>
<text text-anchor="start" x="31.5" y="-2334.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::LinearSolver</text>
<text text-anchor="start" x="31.5" y="-2323.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpaceType, TDenseSpace</text>
<text text-anchor="middle" x="119" y="-2312.5" font-family="Helvetica,sans-Serif" font-size="10.00">Type, TReordererType &gt;</text>
<polyline fill="none" stroke="#666666" points="23.5,-2305.5 214.5,-2305.5"/>
<text text-anchor="middle" x="119" y="-2293.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="23.5,-2286.5 214.5,-2286.5"/>
<text text-anchor="start" x="31.5" y="-2274.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LinearSolver()</text>
<text text-anchor="start" x="31.5" y="-2263.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LinearSolver()</text>
<text text-anchor="start" x="31.5" y="-2252.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LinearSolver()</text>
<text text-anchor="start" x="31.5" y="-2241.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~LinearSolver()</text>
<text text-anchor="start" x="31.5" y="-2230.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="31.5" y="-2219.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="31.5" y="-2208.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="31.5" y="-2197.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PerformSolutionStep()</text>
<text text-anchor="start" x="31.5" y="-2186.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="31.5" y="-2175.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="31.5" y="-2164.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="31.5" y="-2153.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="31.5" y="-2142.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="31.5" y="-2131.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AdditionalPhysicalDataIs</text>
<text text-anchor="start" x="31.5" y="-2120.5" font-family="Helvetica,sans-Serif" font-size="10.00">Needed()</text>
<text text-anchor="start" x="31.5" y="-2109.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ProvideAdditionalData()</text>
<text text-anchor="start" x="31.5" y="-2098.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetReorderer()</text>
<text text-anchor="start" x="31.5" y="-2087.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetReorderer()</text>
<text text-anchor="start" x="31.5" y="-2076.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetTolerance()</text>
<text text-anchor="start" x="31.5" y="-2065.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetTolerance()</text>
<text text-anchor="start" x="31.5" y="-2054.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetIterationsNumber()</text>
<text text-anchor="start" x="31.5" y="-2043.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsConsistent()</text>
<text text-anchor="start" x="31.5" y="-2032.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsConsistent()</text>
<text text-anchor="start" x="31.5" y="-2021.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNotConsistent()</text>
<text text-anchor="start" x="31.5" y="-2010.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNotConsistent()</text>
<text text-anchor="start" x="31.5" y="-1999.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="31.5" y="-1988.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="31.5" y="-1977.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="31.5" y="-1966.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseMatrixType</text>
<text text-anchor="start" x="31.5" y="-1955.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseMatrixPointerType</text>
<text text-anchor="start" x="31.5" y="-1944.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VectorType</text>
<text text-anchor="start" x="31.5" y="-1933.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VectorPointerType</text>
<text text-anchor="start" x="31.5" y="-1922.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseMatrixType</text>
<text text-anchor="start" x="31.5" y="-1911.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseVectorType</text>
<text text-anchor="start" x="31.5" y="-1900.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="31.5" y="-1889.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="31.5" y="-1878.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="31.5" y="-1867.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="31.5" y="-1856.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpReorderer</text>
<text text-anchor="start" x="31.5" y="-1845.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearSolver()</text>
<text text-anchor="start" x="31.5" y="-1834.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearSolver()</text>
<text text-anchor="start" x="31.5" y="-1823.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearSolver()</text>
<text text-anchor="start" x="31.5" y="-1812.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~LinearSolver()</text>
<text text-anchor="start" x="31.5" y="-1801.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="31.5" y="-1790.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="31.5" y="-1779.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="31.5" y="-1768.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PerformSolutionStep()</text>
<text text-anchor="start" x="31.5" y="-1757.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="31.5" y="-1746.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="31.5" y="-1735.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="31.5" y="-1724.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="31.5" y="-1713.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="31.5" y="-1702.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AdditionalPhysicalDataIs</text>
<text text-anchor="start" x="31.5" y="-1691.5" font-family="Helvetica,sans-Serif" font-size="10.00">Needed()</text>
<text text-anchor="start" x="31.5" y="-1680.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ProvideAdditionalData()</text>
<text text-anchor="start" x="31.5" y="-1669.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetReorderer()</text>
<text text-anchor="start" x="31.5" y="-1658.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetReorderer()</text>
<text text-anchor="start" x="31.5" y="-1647.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetTolerance()</text>
<text text-anchor="start" x="31.5" y="-1636.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetTolerance()</text>
<text text-anchor="start" x="31.5" y="-1625.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetIterationsNumber()</text>
<text text-anchor="start" x="31.5" y="-1614.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsConsistent()</text>
<text text-anchor="start" x="31.5" y="-1603.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsConsistent()</text>
<text text-anchor="start" x="31.5" y="-1592.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNotConsistent()</text>
<text text-anchor="start" x="31.5" y="-1581.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNotConsistent()</text>
<text text-anchor="start" x="31.5" y="-1570.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="31.5" y="-1559.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="31.5" y="-1548.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="#63b8ff" d="M119,-1530.37C119,-1521.75 119,-1513.1 119,-1504.43"/>
<polygon fill="none" stroke="#63b8ff" points="115.5,-1530.19 119,-1540.19 122.5,-1530.19 115.5,-1530.19"/>
</g>
</g>
</svg>
