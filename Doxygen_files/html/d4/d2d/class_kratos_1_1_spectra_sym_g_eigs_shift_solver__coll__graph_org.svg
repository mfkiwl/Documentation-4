<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 7.1.0 (0)
 -->
<!-- Title: Kratos::SpectraSymGEigsShiftSolver&lt; TSparseSpaceType, TDenseSpaceType, TPreconditionerType, TReordererType &gt; Pages: 1 -->
<svg width="199pt" height="2025pt"
 viewBox="0.00 0.00 199.00 2025.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 2021)">
<title>Kratos::SpectraSymGEigsShiftSolver&lt; TSparseSpaceType, TDenseSpaceType, TPreconditionerType, TReordererType &gt;</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title=" ">
<polygon fill="#999999" stroke="#666666" points="0,-0.5 0,-156.5 191,-156.5 191,-0.5 0,-0.5"/>
<text text-anchor="start" x="8" y="-144.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::SpectraSymGEigsShift</text>
<text text-anchor="start" x="8" y="-133.5" font-family="Helvetica,sans-Serif" font-size="10.00">Solver&lt; TSparseSpaceType,</text>
<text text-anchor="start" x="8" y="-122.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpaceType, TPreconditioner</text>
<text text-anchor="middle" x="95.5" y="-111.5" font-family="Helvetica,sans-Serif" font-size="10.00">Type, TReordererType &gt;</text>
<polyline fill="none" stroke="#666666" points="0,-104.5 191,-104.5"/>
<text text-anchor="middle" x="95.5" y="-92.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="0,-85.5 191,-85.5"/>
<text text-anchor="start" x="8" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SpectraSymGEigsShiftSolver()</text>
<text text-anchor="start" x="8" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~SpectraSymGEigsShiftSolver()</text>
<text text-anchor="start" x="8" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="8" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="8" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../df/de5/class_kratos_1_1_iterative_solver.html" target="_top" xlink:title="Base class for all the iterative solvers in Kratos.">
<polygon fill="white" stroke="#666666" points="0,-193.5 0,-1174.5 191,-1174.5 191,-193.5 0,-193.5"/>
<text text-anchor="start" x="8" y="-1162.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::IterativeSolver</text>
<text text-anchor="start" x="8" y="-1151.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpaceType, TDenseSpace</text>
<text text-anchor="start" x="8" y="-1140.5" font-family="Helvetica,sans-Serif" font-size="10.00">Type, TPreconditionerType,</text>
<text text-anchor="middle" x="95.5" y="-1129.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TReordererType &gt;</text>
<polyline fill="none" stroke="#666666" points="0,-1122.5 191,-1122.5"/>
<text text-anchor="start" x="8" y="-1110.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mResidualNorm</text>
<text text-anchor="start" x="8" y="-1099.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mFirstResidualNorm</text>
<text text-anchor="start" x="8" y="-1088.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mIterationsNumber</text>
<text text-anchor="start" x="8" y="-1077.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mBNorm</text>
<polyline fill="none" stroke="#666666" points="0,-1070.5 191,-1070.5"/>
<text text-anchor="start" x="8" y="-1058.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IterativeSolver()</text>
<text text-anchor="start" x="8" y="-1047.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IterativeSolver()</text>
<text text-anchor="start" x="8" y="-1036.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IterativeSolver()</text>
<text text-anchor="start" x="8" y="-1025.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IterativeSolver()</text>
<text text-anchor="start" x="8" y="-1014.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IterativeSolver()</text>
<text text-anchor="start" x="8" y="-1003.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IterativeSolver()</text>
<text text-anchor="start" x="8" y="-992.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~IterativeSolver()</text>
<text text-anchor="start" x="8" y="-981.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="8" y="-970.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="8" y="-959.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="8" y="-948.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="8" y="-937.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AdditionalPhysicalDataIs</text>
<text text-anchor="start" x="8" y="-926.5" font-family="Helvetica,sans-Serif" font-size="10.00">Needed()</text>
<text text-anchor="start" x="8" y="-915.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ProvideAdditionalData()</text>
<text text-anchor="start" x="8" y="-904.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetPreconditioner()</text>
<text text-anchor="start" x="8" y="-893.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetPreconditioner()</text>
<text text-anchor="start" x="8" y="-882.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetPreconditioner()</text>
<text text-anchor="start" x="8" y="-871.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetMaxIterationsNumber()</text>
<text text-anchor="start" x="8" y="-860.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetMaxIterationsNumber()</text>
<text text-anchor="start" x="8" y="-849.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetIterationsNumber()</text>
<text text-anchor="start" x="8" y="-838.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetIterationsNumber()</text>
<text text-anchor="start" x="8" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetTolerance()</text>
<text text-anchor="start" x="8" y="-816.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetTolerance()</text>
<text text-anchor="start" x="8" y="-805.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetResidualNorm()</text>
<text text-anchor="start" x="8" y="-794.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetResidualNorm()</text>
<text text-anchor="start" x="8" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IterationNeeded()</text>
<text text-anchor="start" x="8" y="-772.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsConverged()</text>
<text text-anchor="start" x="8" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="8" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="8" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="8" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PreconditionedMult()</text>
<text text-anchor="start" x="8" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PreconditionedTransposeMult()</text>
<text text-anchor="start" x="8" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="8" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseMatrixType</text>
<text text-anchor="start" x="8" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VectorType</text>
<text text-anchor="start" x="8" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseMatrixType</text>
<text text-anchor="start" x="8" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PreconditionerType</text>
<text text-anchor="start" x="8" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="8" y="-640.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-618.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mResidualNorm</text>
<text text-anchor="start" x="8" y="-607.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFirstResidualNorm</text>
<text text-anchor="start" x="8" y="-596.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mIterationsNumber</text>
<text text-anchor="start" x="8" y="-585.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mBNorm</text>
<text text-anchor="start" x="8" y="-574.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpPreconditioner</text>
<text text-anchor="start" x="8" y="-563.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mTolerance</text>
<text text-anchor="start" x="8" y="-552.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxIterationsNumber</text>
<text text-anchor="start" x="8" y="-541.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IterativeSolver()</text>
<text text-anchor="start" x="8" y="-530.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IterativeSolver()</text>
<text text-anchor="start" x="8" y="-519.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IterativeSolver()</text>
<text text-anchor="start" x="8" y="-508.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IterativeSolver()</text>
<text text-anchor="start" x="8" y="-497.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IterativeSolver()</text>
<text text-anchor="start" x="8" y="-486.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IterativeSolver()</text>
<text text-anchor="start" x="8" y="-475.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~IterativeSolver()</text>
<text text-anchor="start" x="8" y="-464.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="8" y="-453.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="8" y="-442.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="8" y="-431.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="8" y="-420.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AdditionalPhysicalDataIs</text>
<text text-anchor="start" x="8" y="-409.5" font-family="Helvetica,sans-Serif" font-size="10.00">Needed()</text>
<text text-anchor="start" x="8" y="-398.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ProvideAdditionalData()</text>
<text text-anchor="start" x="8" y="-387.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetPreconditioner()</text>
<text text-anchor="start" x="8" y="-376.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetPreconditioner()</text>
<text text-anchor="start" x="8" y="-365.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetPreconditioner()</text>
<text text-anchor="start" x="8" y="-354.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetMaxIterationsNumber()</text>
<text text-anchor="start" x="8" y="-343.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetMaxIterationsNumber()</text>
<text text-anchor="start" x="8" y="-332.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetIterationsNumber()</text>
<text text-anchor="start" x="8" y="-321.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetIterationsNumber()</text>
<text text-anchor="start" x="8" y="-310.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetTolerance()</text>
<text text-anchor="start" x="8" y="-299.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetTolerance()</text>
<text text-anchor="start" x="8" y="-288.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetResidualNorm()</text>
<text text-anchor="start" x="8" y="-277.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetResidualNorm()</text>
<text text-anchor="start" x="8" y="-266.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IterationNeeded()</text>
<text text-anchor="start" x="8" y="-255.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsConverged()</text>
<text text-anchor="start" x="8" y="-244.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="8" y="-233.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="8" y="-222.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="8" y="-211.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PreconditionedMult()</text>
<text text-anchor="start" x="8" y="-200.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PreconditionedTransposeMult()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="#63b8ff" d="M95.5,-182.39C95.5,-173.27 95.5,-164.59 95.5,-156.41"/>
<polygon fill="none" stroke="#63b8ff" points="92,-182.21 95.5,-192.21 99,-182.21 92,-182.21"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../d1/df6/class_kratos_1_1_linear_solver.html" target="_top" xlink:title="Base class for all the linear solvers in Kratos.">
<polygon fill="white" stroke="#666666" points="0,-1211.5 0,-2016.5 191,-2016.5 191,-1211.5 0,-1211.5"/>
<text text-anchor="start" x="8" y="-2004.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::LinearSolver</text>
<text text-anchor="start" x="8" y="-1993.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpaceType, TDenseSpace</text>
<text text-anchor="middle" x="95.5" y="-1982.5" font-family="Helvetica,sans-Serif" font-size="10.00">Type, TReordererType &gt;</text>
<polyline fill="none" stroke="#666666" points="0,-1975.5 191,-1975.5"/>
<text text-anchor="middle" x="95.5" y="-1963.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="0,-1956.5 191,-1956.5"/>
<text text-anchor="start" x="8" y="-1944.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LinearSolver()</text>
<text text-anchor="start" x="8" y="-1933.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LinearSolver()</text>
<text text-anchor="start" x="8" y="-1922.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LinearSolver()</text>
<text text-anchor="start" x="8" y="-1911.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~LinearSolver()</text>
<text text-anchor="start" x="8" y="-1900.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="8" y="-1889.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="8" y="-1878.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="8" y="-1867.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PerformSolutionStep()</text>
<text text-anchor="start" x="8" y="-1856.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="8" y="-1845.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="8" y="-1834.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="8" y="-1823.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="8" y="-1812.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="8" y="-1801.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AdditionalPhysicalDataIs</text>
<text text-anchor="start" x="8" y="-1790.5" font-family="Helvetica,sans-Serif" font-size="10.00">Needed()</text>
<text text-anchor="start" x="8" y="-1779.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ProvideAdditionalData()</text>
<text text-anchor="start" x="8" y="-1768.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetReorderer()</text>
<text text-anchor="start" x="8" y="-1757.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetReorderer()</text>
<text text-anchor="start" x="8" y="-1746.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetTolerance()</text>
<text text-anchor="start" x="8" y="-1735.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetTolerance()</text>
<text text-anchor="start" x="8" y="-1724.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetIterationsNumber()</text>
<text text-anchor="start" x="8" y="-1713.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsConsistent()</text>
<text text-anchor="start" x="8" y="-1702.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsConsistent()</text>
<text text-anchor="start" x="8" y="-1691.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNotConsistent()</text>
<text text-anchor="start" x="8" y="-1680.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNotConsistent()</text>
<text text-anchor="start" x="8" y="-1669.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="8" y="-1658.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="8" y="-1647.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="8" y="-1636.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseMatrixType</text>
<text text-anchor="start" x="8" y="-1625.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseMatrixPointerType</text>
<text text-anchor="start" x="8" y="-1614.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VectorType</text>
<text text-anchor="start" x="8" y="-1603.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VectorPointerType</text>
<text text-anchor="start" x="8" y="-1592.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseMatrixType</text>
<text text-anchor="start" x="8" y="-1581.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseVectorType</text>
<text text-anchor="start" x="8" y="-1570.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="8" y="-1559.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="8" y="-1548.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-1537.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-1526.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpReorderer</text>
<text text-anchor="start" x="8" y="-1515.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearSolver()</text>
<text text-anchor="start" x="8" y="-1504.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearSolver()</text>
<text text-anchor="start" x="8" y="-1493.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearSolver()</text>
<text text-anchor="start" x="8" y="-1482.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~LinearSolver()</text>
<text text-anchor="start" x="8" y="-1471.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="8" y="-1460.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="8" y="-1449.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="8" y="-1438.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PerformSolutionStep()</text>
<text text-anchor="start" x="8" y="-1427.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="8" y="-1416.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="8" y="-1405.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="8" y="-1394.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="8" y="-1383.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="8" y="-1372.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AdditionalPhysicalDataIs</text>
<text text-anchor="start" x="8" y="-1361.5" font-family="Helvetica,sans-Serif" font-size="10.00">Needed()</text>
<text text-anchor="start" x="8" y="-1350.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ProvideAdditionalData()</text>
<text text-anchor="start" x="8" y="-1339.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetReorderer()</text>
<text text-anchor="start" x="8" y="-1328.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetReorderer()</text>
<text text-anchor="start" x="8" y="-1317.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetTolerance()</text>
<text text-anchor="start" x="8" y="-1306.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetTolerance()</text>
<text text-anchor="start" x="8" y="-1295.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetIterationsNumber()</text>
<text text-anchor="start" x="8" y="-1284.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsConsistent()</text>
<text text-anchor="start" x="8" y="-1273.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsConsistent()</text>
<text text-anchor="start" x="8" y="-1262.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNotConsistent()</text>
<text text-anchor="start" x="8" y="-1251.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNotConsistent()</text>
<text text-anchor="start" x="8" y="-1240.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="8" y="-1229.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="8" y="-1218.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="#63b8ff" d="M95.5,-1200.37C95.5,-1191.75 95.5,-1183.1 95.5,-1174.43"/>
<polygon fill="none" stroke="#63b8ff" points="92,-1200.19 95.5,-1210.19 99,-1200.19 92,-1200.19"/>
</g>
</g>
</svg>
