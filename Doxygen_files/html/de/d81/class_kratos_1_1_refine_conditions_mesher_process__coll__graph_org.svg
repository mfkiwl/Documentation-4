<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Kratos::RefineConditionsMesherProcess Pages: 1 -->
<svg width="297pt" height="1835pt"
 viewBox="0.00 0.00 296.50 1835.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1831)">
<title>Kratos::RefineConditionsMesherProcess</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Refine Mesh Boundary Process.">
<polygon fill="#bfbfbf" stroke="black" points="88.5,-0.5 88.5,-629.5 288.5,-629.5 288.5,-0.5 88.5,-0.5"/>
<text text-anchor="start" x="96.5" y="-617.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::RefineConditions</text>
<text text-anchor="middle" x="188.5" y="-606.5" font-family="Helvetica,sans-Serif" font-size="10.00">MesherProcess</text>
<polyline fill="none" stroke="black" points="88.5,-599.5 288.5,-599.5 "/>
<text text-anchor="start" x="96.5" y="-587.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mrRemesh</text>
<text text-anchor="start" x="96.5" y="-576.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mMesherUtilities</text>
<text text-anchor="start" x="96.5" y="-565.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mEchoLevel</text>
<polyline fill="none" stroke="black" points="88.5,-558.5 288.5,-558.5 "/>
<text text-anchor="start" x="96.5" y="-546.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ RefineConditionsMesherProcess()</text>
<text text-anchor="start" x="96.5" y="-535.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~RefineConditionsMesherProcess()</text>
<text text-anchor="start" x="96.5" y="-524.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="96.5" y="-513.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Execute()</text>
<text text-anchor="start" x="96.5" y="-502.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="96.5" y="-491.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="96.5" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="96.5" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00"># RefineOnThreshold()</text>
<text text-anchor="start" x="96.5" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00"># RefineOnDistance()</text>
<text text-anchor="start" x="96.5" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00"># RefineBoundaryCondition()</text>
<text text-anchor="start" x="96.5" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00"># RefineContactCondition()</text>
<text text-anchor="start" x="96.5" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SetNodalPosition()</text>
<text text-anchor="start" x="96.5" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CircleInterpolation()</text>
<text text-anchor="start" x="96.5" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00"># HermiteInterpolation()</text>
<text text-anchor="start" x="96.5" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00"># HermiteTriangleInterpolation()</text>
<text text-anchor="start" x="96.5" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00"># HermiteInterpolation()</text>
<text text-anchor="start" x="96.5" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SelectBoundaryToRefine()</text>
<text text-anchor="start" x="96.5" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="96.5" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodeType</text>
<text text-anchor="start" x="96.5" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConditionType</text>
<text text-anchor="start" x="96.5" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PropertiesType</text>
<text text-anchor="start" x="96.5" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GeometryType</text>
<text text-anchor="start" x="96.5" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PointsArrayType</text>
<text text-anchor="start" x="96.5" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConditionsContainerType</text>
<text text-anchor="start" x="96.5" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConditionIterator</text>
<text text-anchor="start" x="96.5" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConditionConstantIterator</text>
<text text-anchor="start" x="96.5" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="96.5" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="96.5" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mrRemesh</text>
<text text-anchor="start" x="96.5" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMesherUtilities</text>
<text text-anchor="start" x="96.5" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEchoLevel</text>
<text text-anchor="start" x="96.5" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* RefineConditionsMesherProcess()</text>
<text text-anchor="start" x="96.5" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~RefineConditionsMesherProcess()</text>
<text text-anchor="start" x="96.5" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="96.5" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Execute()</text>
<text text-anchor="start" x="96.5" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="96.5" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="96.5" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="96.5" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* RefineOnThreshold()</text>
<text text-anchor="start" x="96.5" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* RefineOnDistance()</text>
<text text-anchor="start" x="96.5" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* RefineBoundaryCondition()</text>
<text text-anchor="start" x="96.5" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* RefineContactCondition()</text>
<text text-anchor="start" x="96.5" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetNodalPosition()</text>
<text text-anchor="start" x="96.5" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CircleInterpolation()</text>
<text text-anchor="start" x="96.5" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* HermiteInterpolation()</text>
<text text-anchor="start" x="96.5" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* HermiteTriangleInterpolation()</text>
<text text-anchor="start" x="96.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* HermiteInterpolation()</text>
<text text-anchor="start" x="96.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SelectBoundaryToRefine()</text>
<text text-anchor="start" x="96.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="96.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../d0/dc5/class_kratos_1_1_mesher_process.html" target="_top" xlink:title="The base class for processes passed to the solution scheme.">
<polygon fill="none" stroke="black" points="0,-677.5 0,-1152.5 173,-1152.5 173,-677.5 0,-677.5"/>
<text text-anchor="middle" x="86.5" y="-1140.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::MesherProcess</text>
<polyline fill="none" stroke="black" points="0,-1133.5 173,-1133.5 "/>
<text text-anchor="middle" x="86.5" y="-1121.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="0,-1114.5 173,-1114.5 "/>
<text text-anchor="start" x="8" y="-1102.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-1091.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-1080.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ MesherProcess()</text>
<text text-anchor="start" x="8" y="-1069.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ MesherProcess()</text>
<text text-anchor="start" x="8" y="-1058.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~MesherProcess()</text>
<text text-anchor="start" x="8" y="-1047.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="8" y="-1036.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Execute()</text>
<text text-anchor="start" x="8" y="-1025.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteInitialize()</text>
<text text-anchor="start" x="8" y="-1014.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteBeforeSolutionLoop()</text>
<text text-anchor="start" x="8" y="-1003.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteInitializeSolution</text>
<text text-anchor="start" x="8" y="-992.5" font-family="Helvetica,sans-Serif" font-size="10.00">Step()</text>
<text text-anchor="start" x="8" y="-981.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteFinalizeSolutionStep()</text>
<text text-anchor="start" x="8" y="-970.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteBeforeOutputStep()</text>
<text text-anchor="start" x="8" y="-959.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteAfterOutputStep()</text>
<text text-anchor="start" x="8" y="-948.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteFinalize()</text>
<text text-anchor="start" x="8" y="-937.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="8" y="-926.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="8" y="-915.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="8" y="-904.5" font-family="Helvetica,sans-Serif" font-size="10.00"># MesherProcess()</text>
<text text-anchor="start" x="8" y="-893.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-882.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-871.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MesherProcess()</text>
<text text-anchor="start" x="8" y="-860.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MesherProcess()</text>
<text text-anchor="start" x="8" y="-849.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~MesherProcess()</text>
<text text-anchor="start" x="8" y="-838.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="8" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Execute()</text>
<text text-anchor="start" x="8" y="-816.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteInitialize()</text>
<text text-anchor="start" x="8" y="-805.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteBeforeSolutionLoop()</text>
<text text-anchor="start" x="8" y="-794.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteInitializeSolution</text>
<text text-anchor="start" x="8" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10.00">Step()</text>
<text text-anchor="start" x="8" y="-772.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteFinalizeSolutionStep()</text>
<text text-anchor="start" x="8" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteBeforeOutputStep()</text>
<text text-anchor="start" x="8" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteAfterOutputStep()</text>
<text text-anchor="start" x="8" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteFinalize()</text>
<text text-anchor="start" x="8" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="8" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="8" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="8" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MesherProcess()</text>
<text text-anchor="start" x="8" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M128.58,-667.28C130.7,-654.85 132.84,-642.3 134.99,-629.71"/>
<polygon fill="none" stroke="midnightblue" points="125.12,-666.78 126.89,-677.23 132.02,-667.96 125.12,-666.78"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../d2/d8c/class_kratos_1_1_process.html" target="_top" xlink:title="The base class for all processes in Kratos.">
<polygon fill="none" stroke="black" points="0,-1190.5 0,-1731.5 173,-1731.5 173,-1190.5 0,-1190.5"/>
<text text-anchor="middle" x="86.5" y="-1719.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Process</text>
<polyline fill="none" stroke="black" points="0,-1712.5 173,-1712.5 "/>
<text text-anchor="middle" x="86.5" y="-1700.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="0,-1693.5 173,-1693.5 "/>
<text text-anchor="start" x="8" y="-1681.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-1670.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-1659.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Process()</text>
<text text-anchor="start" x="8" y="-1648.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Process()</text>
<text text-anchor="start" x="8" y="-1637.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~Process()</text>
<text text-anchor="start" x="8" y="-1626.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="8" y="-1615.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Create()</text>
<text text-anchor="start" x="8" y="-1604.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Execute()</text>
<text text-anchor="start" x="8" y="-1593.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteInitialize()</text>
<text text-anchor="start" x="8" y="-1582.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteBeforeSolutionLoop()</text>
<text text-anchor="start" x="8" y="-1571.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteInitializeSolution</text>
<text text-anchor="start" x="8" y="-1560.5" font-family="Helvetica,sans-Serif" font-size="10.00">Step()</text>
<text text-anchor="start" x="8" y="-1549.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteFinalizeSolutionStep()</text>
<text text-anchor="start" x="8" y="-1538.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteBeforeOutputStep()</text>
<text text-anchor="start" x="8" y="-1527.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteAfterOutputStep()</text>
<text text-anchor="start" x="8" y="-1516.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteFinalize()</text>
<text text-anchor="start" x="8" y="-1505.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="8" y="-1494.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="8" y="-1483.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDefaultParameters()</text>
<text text-anchor="start" x="8" y="-1472.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="8" y="-1461.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="8" y="-1450.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="8" y="-1439.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-1428.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-1417.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Process()</text>
<text text-anchor="start" x="8" y="-1406.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Process()</text>
<text text-anchor="start" x="8" y="-1395.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Process()</text>
<text text-anchor="start" x="8" y="-1384.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="8" y="-1373.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="8" y="-1362.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Execute()</text>
<text text-anchor="start" x="8" y="-1351.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteInitialize()</text>
<text text-anchor="start" x="8" y="-1340.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteBeforeSolutionLoop()</text>
<text text-anchor="start" x="8" y="-1329.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteInitializeSolution</text>
<text text-anchor="start" x="8" y="-1318.5" font-family="Helvetica,sans-Serif" font-size="10.00">Step()</text>
<text text-anchor="start" x="8" y="-1307.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteFinalizeSolutionStep()</text>
<text text-anchor="start" x="8" y="-1296.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteBeforeOutputStep()</text>
<text text-anchor="start" x="8" y="-1285.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteAfterOutputStep()</text>
<text text-anchor="start" x="8" y="-1274.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteFinalize()</text>
<text text-anchor="start" x="8" y="-1263.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="8" y="-1252.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="8" y="-1241.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefaultParameters()</text>
<text text-anchor="start" x="8" y="-1230.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="8" y="-1219.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="8" y="-1208.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="8" y="-1197.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M86.5,-1180.38C86.5,-1171.17 86.5,-1161.96 86.5,-1152.81"/>
<polygon fill="none" stroke="midnightblue" points="83,-1180.39 86.5,-1190.39 90,-1180.39 83,-1180.39"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:title=" ">
<polygon fill="none" stroke="#bfbfbf" points="65,-1769.5 65,-1826.5 108,-1826.5 108,-1769.5 65,-1769.5"/>
<text text-anchor="middle" x="86.5" y="-1814.5" font-family="Helvetica,sans-Serif" font-size="10.00">Flags</text>
<polyline fill="none" stroke="#bfbfbf" points="65,-1807.5 108,-1807.5 "/>
<text text-anchor="middle" x="86.5" y="-1795.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#bfbfbf" points="65,-1788.5 108,-1788.5 "/>
<text text-anchor="middle" x="86.5" y="-1776.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node3</title>
<path fill="none" stroke="midnightblue" d="M86.5,-1759.19C86.5,-1751.01 86.5,-1741.77 86.5,-1731.75"/>
<polygon fill="none" stroke="midnightblue" points="83,-1759.3 86.5,-1769.3 90,-1759.3 83,-1759.3"/>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="../../d4/d5e/class_model_part.html" target="_top" xlink:title="This class aims to manage meshes for multi&#45;physics simulations.">
<polygon fill="none" stroke="black" points="191,-886.5 191,-943.5 256,-943.5 256,-886.5 191,-886.5"/>
<text text-anchor="middle" x="223.5" y="-931.5" font-family="Helvetica,sans-Serif" font-size="10.00">ModelPart</text>
<polyline fill="none" stroke="black" points="191,-924.5 256,-924.5 "/>
<text text-anchor="middle" x="223.5" y="-912.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="191,-905.5 256,-905.5 "/>
<text text-anchor="middle" x="223.5" y="-893.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node1 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M221.88,-886.36C219.19,-840.34 213.49,-743.03 207.56,-641.6"/>
<polygon fill="none" stroke="#404040" points="207.55,-641.51 203.21,-635.76 206.85,-629.53 211.19,-635.29 207.55,-641.51"/>
<text text-anchor="middle" x="244.5" y="-651" font-family="Helvetica,sans-Serif" font-size="10.00"> #mrModelPart</text>
</g>
</g>
</svg>
