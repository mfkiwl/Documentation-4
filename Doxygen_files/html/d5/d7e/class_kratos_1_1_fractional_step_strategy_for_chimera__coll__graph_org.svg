<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Kratos::FractionalStepStrategyForChimera&lt; TSparseSpace, TDenseSpace, TLinearSolver &gt; Pages: 1 -->
<svg width="359pt" height="3045pt"
 viewBox="0.00 0.00 359.00 3045.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 3041)">
<title>Kratos::FractionalStepStrategyForChimera&lt; TSparseSpace, TDenseSpace, TLinearSolver &gt;</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title=" ">
<polygon fill="#bfbfbf" stroke="black" points="93,-0.5 93,-519.5 269,-519.5 269,-0.5 93,-0.5"/>
<text text-anchor="start" x="101" y="-507.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::FractionalStepStrategy</text>
<text text-anchor="start" x="101" y="-496.5" font-family="Helvetica,sans-Serif" font-size="10.00">ForChimera&lt; TSparseSpace,</text>
<text text-anchor="middle" x="181" y="-485.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="93,-478.5 269,-478.5 "/>
<text text-anchor="middle" x="181" y="-466.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="93,-459.5 269,-459.5 "/>
<text text-anchor="start" x="101" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FractionalStepStrategyFor</text>
<text text-anchor="start" x="101" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">Chimera()</text>
<text text-anchor="start" x="101" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FractionalStepStrategyFor</text>
<text text-anchor="start" x="101" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">Chimera()</text>
<text text-anchor="start" x="101" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~FractionalStepStrategyFor</text>
<text text-anchor="start" x="101" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">Chimera()</text>
<text text-anchor="start" x="101" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="101" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FractionalStepStrategyFor</text>
<text text-anchor="start" x="101" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">Chimera()</text>
<text text-anchor="start" x="101" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="101" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="101" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="101" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SolveStep()</text>
<text text-anchor="start" x="101" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ComputeSplitOssProjections()</text>
<text text-anchor="start" x="101" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateEndOfStepVelocity()</text>
<text text-anchor="start" x="101" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ChimeraProjectionCorrection()</text>
<text text-anchor="start" x="101" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ChimeraVelocityCorrection()</text>
<text text-anchor="start" x="101" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="101" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolverSettingsType</text>
<text text-anchor="start" x="101" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="101" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="101" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mAreaTolerance</text>
<text text-anchor="start" x="101" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FractionalStepStrategyFor</text>
<text text-anchor="start" x="101" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">Chimera()</text>
<text text-anchor="start" x="101" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FractionalStepStrategyFor</text>
<text text-anchor="start" x="101" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">Chimera()</text>
<text text-anchor="start" x="101" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~FractionalStepStrategyFor</text>
<text text-anchor="start" x="101" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">Chimera()</text>
<text text-anchor="start" x="101" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="101" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FractionalStepStrategyFor</text>
<text text-anchor="start" x="101" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">Chimera()</text>
<text text-anchor="start" x="101" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="101" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="101" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="101" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveStep()</text>
<text text-anchor="start" x="101" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeSplitOssProjections()</text>
<text text-anchor="start" x="101" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateEndOfStepVelocity()</text>
<text text-anchor="start" x="101" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ChimeraProjectionCorrection()</text>
<text text-anchor="start" x="101" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ChimeraVelocityCorrection()</text>
<text text-anchor="start" x="101" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InterpolateVelocity()</text>
<text text-anchor="start" x="101" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeStrategy()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../d2/d4a/class_kratos_1_1_fractional_step_strategy.html" target="_top" xlink:title="Fractional&#45;step strategy for incompressible Navier&#45;Stokes formulation This strategy implements a spli...">
<polygon fill="none" stroke="black" points="81.5,-557.5 81.5,-1736.5 280.5,-1736.5 280.5,-557.5 81.5,-557.5"/>
<text text-anchor="start" x="89.5" y="-1724.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::FractionalStepStrategy</text>
<text text-anchor="start" x="89.5" y="-1713.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="181" y="-1702.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="81.5,-1695.5 280.5,-1695.5 "/>
<text text-anchor="start" x="89.5" y="-1683.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mVelocityTolerance</text>
<text text-anchor="start" x="89.5" y="-1672.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mPressureTolerance</text>
<text text-anchor="start" x="89.5" y="-1661.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mPressureGradientRelaxation</text>
<text text-anchor="start" x="89.5" y="-1650.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor</text>
<text text-anchor="start" x="89.5" y="-1639.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mMaxVelocityIter</text>
<text text-anchor="start" x="89.5" y="-1628.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mMaxPressureIter</text>
<text text-anchor="start" x="89.5" y="-1617.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mDomainSize</text>
<text text-anchor="start" x="89.5" y="-1606.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mTimeOrder</text>
<text text-anchor="start" x="89.5" y="-1595.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mPredictorCorrector</text>
<text text-anchor="start" x="89.5" y="-1584.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mUseSlipConditions</text>
<text text-anchor="start" x="89.5" y="-1573.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mReformDofSet</text>
<text text-anchor="start" x="89.5" y="-1562.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mCalculateReactionsFlag</text>
<text text-anchor="start" x="89.5" y="-1551.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpMomentumStrategy</text>
<text text-anchor="start" x="89.5" y="-1540.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpPressureStrategy</text>
<text text-anchor="start" x="89.5" y="-1529.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mExtraIterationSteps</text>
<polyline fill="none" stroke="black" points="81.5,-1522.5 280.5,-1522.5 "/>
<text text-anchor="start" x="89.5" y="-1510.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FractionalStepStrategy()</text>
<text text-anchor="start" x="89.5" y="-1499.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FractionalStepStrategy()</text>
<text text-anchor="start" x="89.5" y="-1488.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FractionalStepStrategy()</text>
<text text-anchor="start" x="89.5" y="-1477.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FractionalStepStrategy()</text>
<text text-anchor="start" x="89.5" y="-1466.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~FractionalStepStrategy()</text>
<text text-anchor="start" x="89.5" y="-1455.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="89.5" y="-1444.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="89.5" y="-1433.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="89.5" y="-1422.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="89.5" y="-1411.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="89.5" y="-1400.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateReactions()</text>
<text text-anchor="start" x="89.5" y="-1389.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AddIterationStep()</text>
<text text-anchor="start" x="89.5" y="-1378.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ClearExtraIterationSteps()</text>
<text text-anchor="start" x="89.5" y="-1367.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="89.5" y="-1356.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="89.5" y="-1345.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetCalculateReactionsFlag()</text>
<text text-anchor="start" x="89.5" y="-1334.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetCalculateReactionsFlag()</text>
<text text-anchor="start" x="89.5" y="-1323.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="89.5" y="-1312.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="89.5" y="-1301.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="89.5" y="-1290.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SetTimeCoefficients()</text>
<text text-anchor="start" x="89.5" y="-1279.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SolveStep()</text>
<text text-anchor="start" x="89.5" y="-1268.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckFractionalStepConvergence()</text>
<text text-anchor="start" x="89.5" y="-1257.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckPressureConvergence()</text>
<text text-anchor="start" x="89.5" y="-1246.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ComputeSplitOssProjections()</text>
<text text-anchor="start" x="89.5" y="-1235.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateEndOfStepVelocity()</text>
<text text-anchor="start" x="89.5" y="-1224.5" font-family="Helvetica,sans-Serif" font-size="10.00"># EnforceSlipCondition()</text>
<text text-anchor="start" x="89.5" y="-1213.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PeriodicConditionProjection</text>
<text text-anchor="start" x="89.5" y="-1202.5" font-family="Helvetica,sans-Serif" font-size="10.00">Correction()</text>
<text text-anchor="start" x="89.5" y="-1191.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PeriodicConditionVelocity</text>
<text text-anchor="start" x="89.5" y="-1180.5" font-family="Helvetica,sans-Serif" font-size="10.00">Correction()</text>
<text text-anchor="start" x="89.5" y="-1169.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="89.5" y="-1158.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="89.5" y="-1147.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="89.5" y="-1136.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StrategyPointerType</text>
<text text-anchor="start" x="89.5" y="-1125.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolverSettingsType</text>
<text text-anchor="start" x="89.5" y="-1114.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="89.5" y="-1103.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="89.5" y="-1092.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mVelocityTolerance</text>
<text text-anchor="start" x="89.5" y="-1081.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mPressureTolerance</text>
<text text-anchor="start" x="89.5" y="-1070.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mPressureGradientRelaxation</text>
<text text-anchor="start" x="89.5" y="-1059.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor</text>
<text text-anchor="start" x="89.5" y="-1048.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxVelocityIter</text>
<text text-anchor="start" x="89.5" y="-1037.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxPressureIter</text>
<text text-anchor="start" x="89.5" y="-1026.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mDomainSize</text>
<text text-anchor="start" x="89.5" y="-1015.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mTimeOrder</text>
<text text-anchor="start" x="89.5" y="-1004.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mPredictorCorrector</text>
<text text-anchor="start" x="89.5" y="-993.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mUseSlipConditions</text>
<text text-anchor="start" x="89.5" y="-982.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mReformDofSet</text>
<text text-anchor="start" x="89.5" y="-971.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mCalculateReactionsFlag</text>
<text text-anchor="start" x="89.5" y="-960.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpMomentumStrategy</text>
<text text-anchor="start" x="89.5" y="-949.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpPressureStrategy</text>
<text text-anchor="start" x="89.5" y="-938.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mExtraIterationSteps</text>
<text text-anchor="start" x="89.5" y="-927.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FractionalStepStrategy()</text>
<text text-anchor="start" x="89.5" y="-916.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FractionalStepStrategy()</text>
<text text-anchor="start" x="89.5" y="-905.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FractionalStepStrategy()</text>
<text text-anchor="start" x="89.5" y="-894.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FractionalStepStrategy()</text>
<text text-anchor="start" x="89.5" y="-883.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~FractionalStepStrategy()</text>
<text text-anchor="start" x="89.5" y="-872.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="89.5" y="-861.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="89.5" y="-850.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="89.5" y="-839.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="89.5" y="-828.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="89.5" y="-817.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateReactions()</text>
<text text-anchor="start" x="89.5" y="-806.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AddIterationStep()</text>
<text text-anchor="start" x="89.5" y="-795.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClearExtraIterationSteps()</text>
<text text-anchor="start" x="89.5" y="-784.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="89.5" y="-773.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="89.5" y="-762.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetCalculateReactionsFlag()</text>
<text text-anchor="start" x="89.5" y="-751.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetCalculateReactionsFlag()</text>
<text text-anchor="start" x="89.5" y="-740.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="89.5" y="-729.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="89.5" y="-718.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="89.5" y="-707.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetTimeCoefficients()</text>
<text text-anchor="start" x="89.5" y="-696.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveStep()</text>
<text text-anchor="start" x="89.5" y="-685.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckFractionalStepConvergence()</text>
<text text-anchor="start" x="89.5" y="-674.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckPressureConvergence()</text>
<text text-anchor="start" x="89.5" y="-663.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeSplitOssProjections()</text>
<text text-anchor="start" x="89.5" y="-652.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateEndOfStepVelocity()</text>
<text text-anchor="start" x="89.5" y="-641.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EnforceSlipCondition()</text>
<text text-anchor="start" x="89.5" y="-630.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PeriodicConditionProjection</text>
<text text-anchor="start" x="89.5" y="-619.5" font-family="Helvetica,sans-Serif" font-size="10.00">Correction()</text>
<text text-anchor="start" x="89.5" y="-608.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PeriodicConditionVelocity</text>
<text text-anchor="start" x="89.5" y="-597.5" font-family="Helvetica,sans-Serif" font-size="10.00">Correction()</text>
<text text-anchor="start" x="89.5" y="-586.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeStrategy()</text>
<text text-anchor="start" x="89.5" y="-575.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="89.5" y="-564.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FractionalStepStrategy()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M181,-547.12C181,-537.84 181,-528.66 181,-519.61"/>
<polygon fill="none" stroke="midnightblue" points="177.5,-547.23 181,-557.23 184.5,-547.23 177.5,-547.23"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../d8/df2/class_kratos_1_1_implicit_solving_strategy.html" target="_top" xlink:title="Implicit solving strategy base class This is the base class from which we will derive all the implici...">
<polygon fill="none" stroke="black" points="5.5,-1850.5 5.5,-2347.5 176.5,-2347.5 176.5,-1850.5 5.5,-1850.5"/>
<text text-anchor="start" x="13.5" y="-2335.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ImplicitSolvingStrategy</text>
<text text-anchor="start" x="13.5" y="-2324.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="91" y="-2313.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="5.5,-2306.5 176.5,-2306.5 "/>
<text text-anchor="start" x="13.5" y="-2294.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mRebuildLevel</text>
<text text-anchor="start" x="13.5" y="-2283.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mStiffnessMatrixIsBuilt</text>
<polyline fill="none" stroke="black" points="5.5,-2276.5 176.5,-2276.5 "/>
<text text-anchor="start" x="13.5" y="-2264.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="13.5" y="-2253.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="13.5" y="-2242.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="13.5" y="-2231.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="13.5" y="-2220.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Create()</text>
<text text-anchor="start" x="13.5" y="-2209.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetRebuildLevel()</text>
<text text-anchor="start" x="13.5" y="-2198.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetRebuildLevel()</text>
<text text-anchor="start" x="13.5" y="-2187.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetStiffnessMatrixIsBuilt()</text>
<text text-anchor="start" x="13.5" y="-2176.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetStiffnessMatrixIsBuilt()</text>
<text text-anchor="start" x="13.5" y="-2165.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="13.5" y="-2154.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSettings()</text>
<text text-anchor="start" x="13.5" y="-2143.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="13.5" y="-2132.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="13.5" y="-2121.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="13.5" y="-2110.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="13.5" y="-2099.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixPointerType</text>
<text text-anchor="start" x="13.5" y="-2088.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorPointerType</text>
<text text-anchor="start" x="13.5" y="-2077.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="13.5" y="-2066.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="13.5" y="-2055.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="13.5" y="-2044.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TBuilderAndSolverType</text>
<text text-anchor="start" x="13.5" y="-2033.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="13.5" y="-2022.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mRebuildLevel</text>
<text text-anchor="start" x="13.5" y="-2011.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mStiffnessMatrixIsBuilt</text>
<text text-anchor="start" x="13.5" y="-2000.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="13.5" y="-1989.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="13.5" y="-1978.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="13.5" y="-1967.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="13.5" y="-1956.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="13.5" y="-1945.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefaultParameters()</text>
<text text-anchor="start" x="13.5" y="-1934.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Name()</text>
<text text-anchor="start" x="13.5" y="-1923.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetRebuildLevel()</text>
<text text-anchor="start" x="13.5" y="-1912.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetRebuildLevel()</text>
<text text-anchor="start" x="13.5" y="-1901.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetStiffnessMatrixIsBuilt()</text>
<text text-anchor="start" x="13.5" y="-1890.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetStiffnessMatrixIsBuilt()</text>
<text text-anchor="start" x="13.5" y="-1879.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="13.5" y="-1868.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="13.5" y="-1857.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ImplicitSolvingStrategy()</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M115.44,-1840.07C118.56,-1807.06 121.86,-1772.27 125.24,-1736.56"/>
<polygon fill="none" stroke="midnightblue" points="111.93,-1839.97 114.47,-1850.26 118.9,-1840.63 111.93,-1839.97"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="../../de/d0a/class_kratos_1_1_solving_strategy.html" target="_top" xlink:title="Solving strategy base class This is the base class from which we will derive all the strategies (impl...">
<polygon fill="none" stroke="black" points="0,-2451.5 0,-3036.5 182,-3036.5 182,-2451.5 0,-2451.5"/>
<text text-anchor="start" x="8" y="-3024.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::SolvingStrategy</text>
<text text-anchor="middle" x="91" y="-3013.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace &gt;</text>
<polyline fill="none" stroke="black" points="0,-3006.5 182,-3006.5 "/>
<text text-anchor="start" x="8" y="-2994.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mEchoLevel</text>
<polyline fill="none" stroke="black" points="0,-2987.5 182,-2987.5 "/>
<text text-anchor="start" x="8" y="-2975.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolvingStrategy()</text>
<text text-anchor="start" x="8" y="-2964.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolvingStrategy()</text>
<text text-anchor="start" x="8" y="-2953.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolvingStrategy()</text>
<text text-anchor="start" x="8" y="-2942.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~SolvingStrategy()</text>
<text text-anchor="start" x="8" y="-2931.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="8" y="-2920.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="8" y="-2909.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="8" y="-2898.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ValidateAndAssignParameters()</text>
<text text-anchor="start" x="8" y="-2887.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSettings()</text>
<text text-anchor="start" x="8" y="-2876.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="8" y="-2865.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="8" y="-2854.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="8" y="-2843.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixPointerType</text>
<text text-anchor="start" x="8" y="-2832.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorPointerType</text>
<text text-anchor="start" x="8" y="-2821.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="8" y="-2810.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="8" y="-2799.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClassType</text>
<text text-anchor="start" x="8" y="-2788.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDofType</text>
<text text-anchor="start" x="8" y="-2777.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="8" y="-2766.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodesArrayType</text>
<text text-anchor="start" x="8" y="-2755.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElementsArrayType</text>
<text text-anchor="start" x="8" y="-2744.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConditionsArrayType</text>
<text text-anchor="start" x="8" y="-2733.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-2722.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-2711.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEchoLevel</text>
<text text-anchor="start" x="8" y="-2700.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpModelPart</text>
<text text-anchor="start" x="8" y="-2689.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMoveMeshFlag</text>
<text text-anchor="start" x="8" y="-2678.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvingStrategy()</text>
<text text-anchor="start" x="8" y="-2667.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvingStrategy()</text>
<text text-anchor="start" x="8" y="-2656.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvingStrategy()</text>
<text text-anchor="start" x="8" y="-2645.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~SolvingStrategy()</text>
<text text-anchor="start" x="8" y="-2634.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="8" y="-2623.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Predict()</text>
<text text-anchor="start" x="8" y="-2612.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="8" y="-2601.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="8" y="-2590.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="8" y="-2579.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsConverged()</text>
<text text-anchor="start" x="8" y="-2568.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateOutputData()</text>
<text text-anchor="start" x="8" y="-2557.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="8" y="-2546.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="8" y="-2535.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="8" y="-2524.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 17 more...</text>
<text text-anchor="start" x="8" y="-2513.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="8" y="-2502.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="8" y="-2491.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="8" y="-2480.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ValidateAndAssignParameters()</text>
<text text-anchor="start" x="8" y="-2469.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="8" y="-2458.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvingStrategy()</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node3</title>
<path fill="none" stroke="midnightblue" d="M91,-2441C91,-2409.78 91,-2378.31 91,-2347.77"/>
<polygon fill="none" stroke="midnightblue" points="87.5,-2441.13 91,-2451.13 94.5,-2441.13 87.5,-2441.13"/>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="../../d1/d66/class_kratos_1_1_variable.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="195,-1784.5 195,-2413.5 351,-2413.5 351,-1784.5 195,-1784.5"/>
<text text-anchor="middle" x="273" y="-2401.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Variable&lt; int &gt;</text>
<polyline fill="none" stroke="black" points="195,-2394.5 351,-2394.5 "/>
<text text-anchor="middle" x="273" y="-2382.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="195,-2375.5 351,-2375.5 "/>
<text text-anchor="start" x="203" y="-2363.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Variable()</text>
<text text-anchor="start" x="203" y="-2352.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Variable()</text>
<text text-anchor="start" x="203" y="-2341.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Variable()</text>
<text text-anchor="start" x="203" y="-2330.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Variable()</text>
<text text-anchor="start" x="203" y="-2319.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~Variable()</text>
<text text-anchor="start" x="203" y="-2308.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="203" y="-2297.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="203" y="-2286.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="203" y="-2275.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="203" y="-2264.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetTimeDerivative()</text>
<text text-anchor="start" x="203" y="-2253.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Zero()</text>
<text text-anchor="start" x="203" y="-2242.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ pZero()</text>
<text text-anchor="start" x="203" y="-2231.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Type</text>
<text text-anchor="start" x="203" y="-2220.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KeyType</text>
<text text-anchor="start" x="203" y="-2209.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VariableType</text>
<text text-anchor="start" x="203" y="-2198.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="203" y="-2187.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="203" y="-2176.5" font-family="Helvetica,sans-Serif" font-size="10.00">* msStaticObject</text>
<text text-anchor="start" x="203" y="-2165.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mZero</text>
<text text-anchor="start" x="203" y="-2154.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpTimeDerivativeVariable</text>
<text text-anchor="start" x="203" y="-2143.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="203" y="-2132.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="203" y="-2121.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="203" y="-2110.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Variable()</text>
<text text-anchor="start" x="203" y="-2099.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Variable()</text>
<text text-anchor="start" x="203" y="-2088.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Variable()</text>
<text text-anchor="start" x="203" y="-2077.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Variable()</text>
<text text-anchor="start" x="203" y="-2066.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Variable()</text>
<text text-anchor="start" x="203" y="-2055.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="203" y="-2044.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="203" y="-2033.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Copy()</text>
<text text-anchor="start" x="203" y="-2022.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Assign()</text>
<text text-anchor="start" x="203" y="-2011.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignZero()</text>
<text text-anchor="start" x="203" y="-2000.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Delete()</text>
<text text-anchor="start" x="203" y="-1989.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Destruct()</text>
<text text-anchor="start" x="203" y="-1978.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Print()</text>
<text text-anchor="start" x="203" y="-1967.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="203" y="-1956.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Save()</text>
<text text-anchor="start" x="203" y="-1945.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Allocate()</text>
<text text-anchor="start" x="203" y="-1934.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Load()</text>
<text text-anchor="start" x="203" y="-1923.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetValue()</text>
<text text-anchor="start" x="203" y="-1912.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetValue()</text>
<text text-anchor="start" x="203" y="-1901.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StaticObject()</text>
<text text-anchor="start" x="203" y="-1890.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="203" y="-1879.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="203" y="-1868.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="203" y="-1857.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetTimeDerivative()</text>
<text text-anchor="start" x="203" y="-1846.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Zero()</text>
<text text-anchor="start" x="203" y="-1835.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pZero()</text>
<text text-anchor="start" x="203" y="-1824.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Variable()</text>
<text text-anchor="start" x="203" y="-1813.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Variable()</text>
<text text-anchor="start" x="203" y="-1802.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetValueByIndex()</text>
<text text-anchor="start" x="203" y="-1791.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetValueByIndex()</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node2 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node2</title>
<path fill="none" stroke="#404040" d="M242.62,-1784.3C241.48,-1772.55 240.33,-1760.64 239.17,-1748.62"/>
<polygon fill="none" stroke="#404040" points="239.15,-1748.51 234.59,-1742.92 238,-1736.56 242.56,-1742.15 239.15,-1748.51"/>
<text text-anchor="middle" x="285.5" y="-1758" font-family="Helvetica,sans-Serif" font-size="10.00"> #mrPeriodicIdVar</text>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:title=" ">
<polygon fill="none" stroke="#bfbfbf" points="233,-2715.5 233,-2772.5 313,-2772.5 313,-2715.5 233,-2715.5"/>
<text text-anchor="middle" x="273" y="-2760.5" font-family="Helvetica,sans-Serif" font-size="10.00">VariableData</text>
<polyline fill="none" stroke="#bfbfbf" points="233,-2753.5 313,-2753.5 "/>
<text text-anchor="middle" x="273" y="-2741.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#bfbfbf" points="233,-2734.5 313,-2734.5 "/>
<text text-anchor="middle" x="273" y="-2722.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node5 -->
<g id="edge5" class="edge">
<title>Node6&#45;&gt;Node5</title>
<path fill="none" stroke="midnightblue" d="M273,-2705.18C273,-2646.85 273,-2529.51 273,-2413.55"/>
<polygon fill="none" stroke="midnightblue" points="269.5,-2705.37 273,-2715.37 276.5,-2705.37 269.5,-2705.37"/>
</g>
</g>
</svg>
