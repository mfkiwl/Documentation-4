<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Kratos::CalculateEmbeddedNodalVariableFromSkinProcess&lt; TVarType, TSparseSpace, TDenseSpace, TLinearSolver &gt; Pages: 1 -->
<svg width="482pt" height="1828pt"
 viewBox="0.00 0.00 481.50 1828.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1824)">
<title>Kratos::CalculateEmbeddedNodalVariableFromSkinProcess&lt; TVarType, TSparseSpace, TDenseSpace, TLinearSolver &gt;</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title=" ">
<polygon fill="#bfbfbf" stroke="black" points="113,-0.5 113,-1014.5 334,-1014.5 334,-0.5 113,-0.5"/>
<text text-anchor="start" x="121" y="-1002.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::CalculateEmbedded</text>
<text text-anchor="start" x="121" y="-991.5" font-family="Helvetica,sans-Serif" font-size="10.00">NodalVariableFromSkinProcess</text>
<text text-anchor="start" x="121" y="-980.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TVarType, TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="223.5" y="-969.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="113,-962.5 334,-962.5 "/>
<text text-anchor="start" x="121" y="-950.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mEchoLevel</text>
<text text-anchor="start" x="121" y="-939.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mBufferPosition</text>
<text text-anchor="start" x="121" y="-928.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mAuxModelPartName</text>
<text text-anchor="start" x="121" y="-917.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mGradientPenaltyCoefficient</text>
<text text-anchor="start" x="121" y="-906.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpLinearSolver</text>
<text text-anchor="start" x="121" y="-895.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpSolvingStrategy</text>
<text text-anchor="start" x="121" y="-884.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpFindIntersectedGeometrical</text>
<text text-anchor="start" x="121" y="-873.5" font-family="Helvetica,sans-Serif" font-size="10.00">ObjectsProcess</text>
<polyline fill="none" stroke="black" points="113,-866.5 334,-866.5 "/>
<text text-anchor="start" x="121" y="-854.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="121" y="-843.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="121" y="-832.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateEmbeddedNodalVariable</text>
<text text-anchor="start" x="121" y="-821.5" font-family="Helvetica,sans-Serif" font-size="10.00">FromSkinProcess()</text>
<text text-anchor="start" x="121" y="-810.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateEmbeddedNodalVariable</text>
<text text-anchor="start" x="121" y="-799.5" font-family="Helvetica,sans-Serif" font-size="10.00">FromSkinProcess()</text>
<text text-anchor="start" x="121" y="-788.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~CalculateEmbeddedNodalVariable</text>
<text text-anchor="start" x="121" y="-777.5" font-family="Helvetica,sans-Serif" font-size="10.00">FromSkinProcess()</text>
<text text-anchor="start" x="121" y="-766.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="121" y="-755.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="121" y="-744.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="121" y="-733.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="121" y="-722.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GenerateIntersectedEdges</text>
<text text-anchor="start" x="121" y="-711.5" font-family="Helvetica,sans-Serif" font-size="10.00">ElementsModelPart()</text>
<text text-anchor="start" x="121" y="-700.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SetObtainedEmbeddedNodal</text>
<text text-anchor="start" x="121" y="-689.5" font-family="Helvetica,sans-Serif" font-size="10.00">Values()</text>
<text text-anchor="start" x="121" y="-678.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AddIntersectedElementsVariables()</text>
<text text-anchor="start" x="121" y="-667.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AddIntersectedElementsModel</text>
<text text-anchor="start" x="121" y="-656.5" font-family="Helvetica,sans-Serif" font-size="10.00">PartDOFs()</text>
<text text-anchor="start" x="121" y="-645.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AddIntersectedElementsModel</text>
<text text-anchor="start" x="121" y="-634.5" font-family="Helvetica,sans-Serif" font-size="10.00">PartElements()</text>
<text text-anchor="start" x="121" y="-623.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SetLinearStrategy()</text>
<text text-anchor="start" x="121" y="-612.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateEmbeddedNodalVariable</text>
<text text-anchor="start" x="121" y="-601.5" font-family="Helvetica,sans-Serif" font-size="10.00">FromSkinProcess()</text>
<text text-anchor="start" x="121" y="-590.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearSolverPointerType</text>
<text text-anchor="start" x="121" y="-579.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemePointerType</text>
<text text-anchor="start" x="121" y="-568.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderSolverPointerType</text>
<text text-anchor="start" x="121" y="-557.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvingStrategyPointerType</text>
<text text-anchor="start" x="121" y="-546.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FindIntersectedGeometrical</text>
<text text-anchor="start" x="121" y="-535.5" font-family="Helvetica,sans-Serif" font-size="10.00">ObjectsProcessPointerType</text>
<text text-anchor="start" x="121" y="-524.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EdgesSetType</text>
<text text-anchor="start" x="121" y="-513.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEchoLevel</text>
<text text-anchor="start" x="121" y="-502.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mBufferPosition</text>
<text text-anchor="start" x="121" y="-491.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mAuxModelPartName</text>
<text text-anchor="start" x="121" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mGradientPenaltyCoefficient</text>
<text text-anchor="start" x="121" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpLinearSolver</text>
<text text-anchor="start" x="121" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpSolvingStrategy</text>
<text text-anchor="start" x="121" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpFindIntersectedGeometrical</text>
<text text-anchor="start" x="121" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">ObjectsProcess</text>
<text text-anchor="start" x="121" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="121" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="121" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateEmbeddedNodalVariable</text>
<text text-anchor="start" x="121" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">FromSkinProcess()</text>
<text text-anchor="start" x="121" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateEmbeddedNodalVariable</text>
<text text-anchor="start" x="121" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">FromSkinProcess()</text>
<text text-anchor="start" x="121" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~CalculateEmbeddedNodalVariable</text>
<text text-anchor="start" x="121" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">FromSkinProcess()</text>
<text text-anchor="start" x="121" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="121" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetIntersectedEdgesModel</text>
<text text-anchor="start" x="121" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">Part()</text>
<text text-anchor="start" x="121" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Execute()</text>
<text text-anchor="start" x="121" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="121" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefaultParameters()</text>
<text text-anchor="start" x="121" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StaticGetDefaultParameters()</text>
<text text-anchor="start" x="121" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="121" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="121" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="121" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GenerateIntersectedEdges</text>
<text text-anchor="start" x="121" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">ElementsModelPart()</text>
<text text-anchor="start" x="121" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetObtainedEmbeddedNodal</text>
<text text-anchor="start" x="121" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">Values()</text>
<text text-anchor="start" x="121" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AddIntersectedElementsVariables()</text>
<text text-anchor="start" x="121" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AddIntersectedElementsModel</text>
<text text-anchor="start" x="121" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">PartDOFs()</text>
<text text-anchor="start" x="121" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AddIntersectedElementsModel</text>
<text text-anchor="start" x="121" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">PartElements()</text>
<text text-anchor="start" x="121" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetLinearStrategy()</text>
<text text-anchor="start" x="121" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateEmbeddedNodalVariable</text>
<text text-anchor="start" x="121" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">FromSkinProcess()</text>
<text text-anchor="start" x="121" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateIntersections()</text>
<text text-anchor="start" x="121" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClearIntersections()</text>
<text text-anchor="start" x="121" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeEdgeIntersection()</text>
<text text-anchor="start" x="121" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AddEdgeNodes()</text>
<text text-anchor="start" x="121" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pSetEdgeElementGeometry()</text>
<text text-anchor="start" x="121" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEdgePair()</text>
<text text-anchor="start" x="121" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="121" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateEmbeddedNodalVariable</text>
<text text-anchor="start" x="121" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">FromSkinProcess()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../d2/d8c/class_kratos_1_1_process.html" target="_top" xlink:title="The base class for all processes in Kratos.">
<polygon fill="none" stroke="black" points="0,-1128.5 0,-1669.5 173,-1669.5 173,-1128.5 0,-1128.5"/>
<text text-anchor="middle" x="86.5" y="-1657.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Process</text>
<polyline fill="none" stroke="black" points="0,-1650.5 173,-1650.5 "/>
<text text-anchor="middle" x="86.5" y="-1638.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="0,-1631.5 173,-1631.5 "/>
<text text-anchor="start" x="8" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Process()</text>
<text text-anchor="start" x="8" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Process()</text>
<text text-anchor="start" x="8" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~Process()</text>
<text text-anchor="start" x="8" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="8" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Create()</text>
<text text-anchor="start" x="8" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Execute()</text>
<text text-anchor="start" x="8" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteInitialize()</text>
<text text-anchor="start" x="8" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteBeforeSolutionLoop()</text>
<text text-anchor="start" x="8" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteInitializeSolution</text>
<text text-anchor="start" x="8" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">Step()</text>
<text text-anchor="start" x="8" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteFinalizeSolutionStep()</text>
<text text-anchor="start" x="8" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteBeforeOutputStep()</text>
<text text-anchor="start" x="8" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteAfterOutputStep()</text>
<text text-anchor="start" x="8" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteFinalize()</text>
<text text-anchor="start" x="8" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="8" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="8" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDefaultParameters()</text>
<text text-anchor="start" x="8" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="8" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="8" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="8" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Process()</text>
<text text-anchor="start" x="8" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Process()</text>
<text text-anchor="start" x="8" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Process()</text>
<text text-anchor="start" x="8" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="8" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="8" y="-1300.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Execute()</text>
<text text-anchor="start" x="8" y="-1289.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteInitialize()</text>
<text text-anchor="start" x="8" y="-1278.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteBeforeSolutionLoop()</text>
<text text-anchor="start" x="8" y="-1267.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteInitializeSolution</text>
<text text-anchor="start" x="8" y="-1256.5" font-family="Helvetica,sans-Serif" font-size="10.00">Step()</text>
<text text-anchor="start" x="8" y="-1245.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteFinalizeSolutionStep()</text>
<text text-anchor="start" x="8" y="-1234.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteBeforeOutputStep()</text>
<text text-anchor="start" x="8" y="-1223.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteAfterOutputStep()</text>
<text text-anchor="start" x="8" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteFinalize()</text>
<text text-anchor="start" x="8" y="-1201.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="8" y="-1190.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="8" y="-1179.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefaultParameters()</text>
<text text-anchor="start" x="8" y="-1168.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="8" y="-1157.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="8" y="-1146.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="8" y="-1135.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M129.61,-1118.11C134.74,-1084.79 140.09,-1050.03 145.53,-1014.75"/>
<polygon fill="none" stroke="midnightblue" points="126.09,-1117.99 128.02,-1128.4 133,-1119.05 126.09,-1117.99"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:title=" ">
<polygon fill="none" stroke="#bfbfbf" points="65,-1762.5 65,-1819.5 108,-1819.5 108,-1762.5 65,-1762.5"/>
<text text-anchor="middle" x="86.5" y="-1807.5" font-family="Helvetica,sans-Serif" font-size="10.00">Flags</text>
<polyline fill="none" stroke="#bfbfbf" points="65,-1800.5 108,-1800.5 "/>
<text text-anchor="middle" x="86.5" y="-1788.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#bfbfbf" points="65,-1781.5 108,-1781.5 "/>
<text text-anchor="middle" x="86.5" y="-1769.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M86.5,-1752.08C86.5,-1730.69 86.5,-1701.86 86.5,-1669.86"/>
<polygon fill="none" stroke="midnightblue" points="83,-1752.26 86.5,-1762.26 90,-1752.26 83,-1752.26"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="../../d4/d5e/class_model_part.html" target="_top" xlink:title="This class aims to manage meshes for multi&#45;physics simulations.">
<polygon fill="none" stroke="black" points="191,-1370.5 191,-1427.5 256,-1427.5 256,-1370.5 191,-1370.5"/>
<text text-anchor="middle" x="223.5" y="-1415.5" font-family="Helvetica,sans-Serif" font-size="10.00">ModelPart</text>
<polyline fill="none" stroke="black" points="191,-1408.5 256,-1408.5 "/>
<text text-anchor="middle" x="223.5" y="-1396.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="191,-1389.5 256,-1389.5 "/>
<text text-anchor="middle" x="223.5" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node1 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M223.5,-1370.4C223.5,-1313.48 223.5,-1175.83 223.5,-1026.84"/>
<polygon fill="none" stroke="#404040" points="223.5,-1026.71 219.5,-1020.71 223.5,-1014.71 227.5,-1020.71 223.5,-1026.71"/>
<text text-anchor="middle" x="272.5" y="-1047" font-family="Helvetica,sans-Serif" font-size="10.00"> #mrBaseModelPart</text>
<text text-anchor="middle" x="272.5" y="-1036" font-family="Helvetica,sans-Serif" font-size="10.00">#mrSkinModelPart</text>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="../../d1/d66/class_kratos_1_1_variable.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="274,-1073.5 274,-1724.5 435,-1724.5 435,-1073.5 274,-1073.5"/>
<text text-anchor="middle" x="354.5" y="-1712.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Variable&lt; TVarType &gt;</text>
<polyline fill="none" stroke="black" points="274,-1705.5 435,-1705.5 "/>
<text text-anchor="middle" x="354.5" y="-1693.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="274,-1686.5 435,-1686.5 "/>
<text text-anchor="start" x="282" y="-1674.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Variable()</text>
<text text-anchor="start" x="282" y="-1663.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Variable()</text>
<text text-anchor="start" x="282" y="-1652.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Variable()</text>
<text text-anchor="start" x="282" y="-1641.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Variable()</text>
<text text-anchor="start" x="282" y="-1630.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Variable()</text>
<text text-anchor="start" x="282" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~Variable()</text>
<text text-anchor="start" x="282" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="282" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="282" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="282" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="282" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetTimeDerivative()</text>
<text text-anchor="start" x="282" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Zero()</text>
<text text-anchor="start" x="282" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ pZero()</text>
<text text-anchor="start" x="282" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Type</text>
<text text-anchor="start" x="282" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KeyType</text>
<text text-anchor="start" x="282" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VariableType</text>
<text text-anchor="start" x="282" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="282" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="282" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* msStaticObject</text>
<text text-anchor="start" x="282" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mZero</text>
<text text-anchor="start" x="282" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpTimeDerivativeVariable</text>
<text text-anchor="start" x="282" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="282" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="282" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="282" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Variable()</text>
<text text-anchor="start" x="282" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Variable()</text>
<text text-anchor="start" x="282" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Variable()</text>
<text text-anchor="start" x="282" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Variable()</text>
<text text-anchor="start" x="282" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Variable()</text>
<text text-anchor="start" x="282" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Variable()</text>
<text text-anchor="start" x="282" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="282" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="282" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Copy()</text>
<text text-anchor="start" x="282" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Assign()</text>
<text text-anchor="start" x="282" y="-1300.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignZero()</text>
<text text-anchor="start" x="282" y="-1289.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Delete()</text>
<text text-anchor="start" x="282" y="-1278.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Destruct()</text>
<text text-anchor="start" x="282" y="-1267.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Print()</text>
<text text-anchor="start" x="282" y="-1256.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="282" y="-1245.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Save()</text>
<text text-anchor="start" x="282" y="-1234.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Allocate()</text>
<text text-anchor="start" x="282" y="-1223.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Load()</text>
<text text-anchor="start" x="282" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetValue()</text>
<text text-anchor="start" x="282" y="-1201.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetValue()</text>
<text text-anchor="start" x="282" y="-1190.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StaticObject()</text>
<text text-anchor="start" x="282" y="-1179.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="282" y="-1168.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="282" y="-1157.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="282" y="-1146.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetTimeDerivative()</text>
<text text-anchor="start" x="282" y="-1135.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Zero()</text>
<text text-anchor="start" x="282" y="-1124.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pZero()</text>
<text text-anchor="start" x="282" y="-1113.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Variable()</text>
<text text-anchor="start" x="282" y="-1102.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetValueByIndex()</text>
<text text-anchor="start" x="282" y="-1091.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetValueByIndex()</text>
<text text-anchor="start" x="282" y="-1080.5" font-family="Helvetica,sans-Serif" font-size="10.00">* RegisterThisVariable()</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node1 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M330.62,-1073.4C329.01,-1059.74 327.31,-1046.23 325.5,-1033 325.21,-1030.91 324.93,-1028.81 324.63,-1026.71"/>
<polygon fill="none" stroke="#404040" points="324.61,-1026.51 319.81,-1021.13 322.93,-1014.63 327.73,-1020.01 324.61,-1026.51"/>
<text text-anchor="middle" x="401" y="-1047" font-family="Helvetica,sans-Serif" font-size="10.00"> #mrEmbeddedNodalVariable</text>
<text text-anchor="middle" x="401" y="-1036" font-family="Helvetica,sans-Serif" font-size="10.00">#mrSkinVariable</text>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:title=" ">
<polygon fill="none" stroke="#bfbfbf" points="314.5,-1762.5 314.5,-1819.5 394.5,-1819.5 394.5,-1762.5 314.5,-1762.5"/>
<text text-anchor="middle" x="354.5" y="-1807.5" font-family="Helvetica,sans-Serif" font-size="10.00">VariableData</text>
<polyline fill="none" stroke="#bfbfbf" points="314.5,-1800.5 394.5,-1800.5 "/>
<text text-anchor="middle" x="354.5" y="-1788.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#bfbfbf" points="314.5,-1781.5 394.5,-1781.5 "/>
<text text-anchor="middle" x="354.5" y="-1769.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node5 -->
<g id="edge5" class="edge">
<title>Node6&#45;&gt;Node5</title>
<path fill="none" stroke="midnightblue" d="M354.5,-1752.22C354.5,-1744.09 354.5,-1734.88 354.5,-1724.83"/>
<polygon fill="none" stroke="midnightblue" points="351,-1752.26 354.5,-1762.26 358,-1752.26 351,-1752.26"/>
</g>
</g>
</svg>
