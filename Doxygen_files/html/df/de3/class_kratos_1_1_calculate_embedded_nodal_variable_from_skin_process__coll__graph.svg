<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 7.1.0 (0)
 -->
<!-- Title: Kratos::CalculateEmbeddedNodalVariableFromSkinProcess&lt; TVarType, TSparseSpace, TDenseSpace, TLinearSolver &gt; Pages: 1 -->
<!--zoomable 1806 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 482;
var viewHeight = 1806;
var sectionId = 'dynsection-1';
</script>
<script xlink:href="../../svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>Kratos::CalculateEmbeddedNodalVariableFromSkinProcess&lt; TVarType, TSparseSpace, TDenseSpace, TLinearSolver &gt;</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title=" ">
<polygon fill="#999999" stroke="#666666" points="113,-0.5 113,-1014.5 334,-1014.5 334,-0.5 113,-0.5"/>
<text text-anchor="start" x="121" y="-1002.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::CalculateEmbedded</text>
<text text-anchor="start" x="121" y="-991.5" font-family="Helvetica,sans-Serif" font-size="10.00">NodalVariableFromSkinProcess</text>
<text text-anchor="start" x="121" y="-980.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TVarType, TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="223.5" y="-969.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="#666666" points="113,-962.5 334,-962.5"/>
<text text-anchor="start" x="121" y="-950.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mEchoLevel</text>
<text text-anchor="start" x="121" y="-939.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mBufferPosition</text>
<text text-anchor="start" x="121" y="-928.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mAuxModelPartName</text>
<text text-anchor="start" x="121" y="-917.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mGradientPenaltyCoefficient</text>
<text text-anchor="start" x="121" y="-906.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpLinearSolver</text>
<text text-anchor="start" x="121" y="-895.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpSolvingStrategy</text>
<text text-anchor="start" x="121" y="-884.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpFindIntersectedGeometrical</text>
<text text-anchor="start" x="121" y="-873.5" font-family="Helvetica,sans-Serif" font-size="10.00">ObjectsProcess</text>
<polyline fill="none" stroke="#666666" points="113,-866.5 334,-866.5"/>
<text text-anchor="start" x="121" y="-854.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="121" y="-843.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="121" y="-832.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateEmbeddedNodalVariable</text>
<text text-anchor="start" x="121" y="-821.5" font-family="Helvetica,sans-Serif" font-size="10.00">FromSkinProcess()</text>
<text text-anchor="start" x="121" y="-810.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateEmbeddedNodalVariable</text>
<text text-anchor="start" x="121" y="-799.5" font-family="Helvetica,sans-Serif" font-size="10.00">FromSkinProcess()</text>
<text text-anchor="start" x="121" y="-788.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~CalculateEmbeddedNodalVariable</text>
<text text-anchor="start" x="121" y="-777.5" font-family="Helvetica,sans-Serif" font-size="10.00">FromSkinProcess()</text>
<text text-anchor="start" x="121" y="-766.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="121" y="-755.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="121" y="-744.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="121" y="-733.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="121" y="-722.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GenerateIntersectedEdges</text>
<text text-anchor="start" x="121" y="-711.5" font-family="Helvetica,sans-Serif" font-size="10.00">ElementsModelPart()</text>
<text text-anchor="start" x="121" y="-700.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SetObtainedEmbeddedNodal</text>
<text text-anchor="start" x="121" y="-689.5" font-family="Helvetica,sans-Serif" font-size="10.00">Values()</text>
<text text-anchor="start" x="121" y="-678.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AddIntersectedElementsVariables()</text>
<text text-anchor="start" x="121" y="-667.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AddIntersectedElementsModel</text>
<text text-anchor="start" x="121" y="-656.5" font-family="Helvetica,sans-Serif" font-size="10.00">PartDOFs()</text>
<text text-anchor="start" x="121" y="-645.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AddIntersectedElementsModel</text>
<text text-anchor="start" x="121" y="-634.5" font-family="Helvetica,sans-Serif" font-size="10.00">PartElements()</text>
<text text-anchor="start" x="121" y="-623.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SetLinearStrategy()</text>
<text text-anchor="start" x="121" y="-612.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateEmbeddedNodalVariable</text>
<text text-anchor="start" x="121" y="-601.5" font-family="Helvetica,sans-Serif" font-size="10.00">FromSkinProcess()</text>
<text text-anchor="start" x="121" y="-590.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearSolverPointerType</text>
<text text-anchor="start" x="121" y="-579.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemePointerType</text>
<text text-anchor="start" x="121" y="-568.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderSolverPointerType</text>
<text text-anchor="start" x="121" y="-557.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvingStrategyPointerType</text>
<text text-anchor="start" x="121" y="-546.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FindIntersectedGeometrical</text>
<text text-anchor="start" x="121" y="-535.5" font-family="Helvetica,sans-Serif" font-size="10.00">ObjectsProcessPointerType</text>
<text text-anchor="start" x="121" y="-524.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EdgesSetType</text>
<text text-anchor="start" x="121" y="-513.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEchoLevel</text>
<text text-anchor="start" x="121" y="-502.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mBufferPosition</text>
<text text-anchor="start" x="121" y="-491.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mAuxModelPartName</text>
<text text-anchor="start" x="121" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mGradientPenaltyCoefficient</text>
<text text-anchor="start" x="121" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpLinearSolver</text>
<text text-anchor="start" x="121" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpSolvingStrategy</text>
<text text-anchor="start" x="121" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpFindIntersectedGeometrical</text>
<text text-anchor="start" x="121" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">ObjectsProcess</text>
<text text-anchor="start" x="121" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="121" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="121" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateEmbeddedNodalVariable</text>
<text text-anchor="start" x="121" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">FromSkinProcess()</text>
<text text-anchor="start" x="121" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateEmbeddedNodalVariable</text>
<text text-anchor="start" x="121" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">FromSkinProcess()</text>
<text text-anchor="start" x="121" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~CalculateEmbeddedNodalVariable</text>
<text text-anchor="start" x="121" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">FromSkinProcess()</text>
<text text-anchor="start" x="121" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="121" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetIntersectedEdgesModel</text>
<text text-anchor="start" x="121" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">Part()</text>
<text text-anchor="start" x="121" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Execute()</text>
<text text-anchor="start" x="121" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="121" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefaultParameters()</text>
<text text-anchor="start" x="121" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StaticGetDefaultParameters()</text>
<text text-anchor="start" x="121" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="121" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="121" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="121" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GenerateIntersectedEdges</text>
<text text-anchor="start" x="121" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">ElementsModelPart()</text>
<text text-anchor="start" x="121" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetObtainedEmbeddedNodal</text>
<text text-anchor="start" x="121" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">Values()</text>
<text text-anchor="start" x="121" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AddIntersectedElementsVariables()</text>
<text text-anchor="start" x="121" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AddIntersectedElementsModel</text>
<text text-anchor="start" x="121" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">PartDOFs()</text>
<text text-anchor="start" x="121" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AddIntersectedElementsModel</text>
<text text-anchor="start" x="121" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">PartElements()</text>
<text text-anchor="start" x="121" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetLinearStrategy()</text>
<text text-anchor="start" x="121" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateEmbeddedNodalVariable</text>
<text text-anchor="start" x="121" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">FromSkinProcess()</text>
<text text-anchor="start" x="121" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateIntersections()</text>
<text text-anchor="start" x="121" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClearIntersections()</text>
<text text-anchor="start" x="121" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeEdgeIntersection()</text>
<text text-anchor="start" x="121" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AddEdgeNodes()</text>
<text text-anchor="start" x="121" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pSetEdgeElementGeometry()</text>
<text text-anchor="start" x="121" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEdgePair()</text>
<text text-anchor="start" x="121" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="121" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateEmbeddedNodalVariable</text>
<text text-anchor="start" x="121" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">FromSkinProcess()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../d2/d8c/class_kratos_1_1_process.html" target="_top" xlink:title="The base class for all processes in Kratos.">
<polygon fill="white" stroke="#666666" points="0,-1117.5 0,-1658.5 173,-1658.5 173,-1117.5 0,-1117.5"/>
<text text-anchor="middle" x="86.5" y="-1646.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Process</text>
<polyline fill="none" stroke="#666666" points="0,-1639.5 173,-1639.5"/>
<text text-anchor="middle" x="86.5" y="-1627.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="0,-1620.5 173,-1620.5"/>
<text text-anchor="start" x="8" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Process()</text>
<text text-anchor="start" x="8" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Process()</text>
<text text-anchor="start" x="8" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~Process()</text>
<text text-anchor="start" x="8" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="8" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Create()</text>
<text text-anchor="start" x="8" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Execute()</text>
<text text-anchor="start" x="8" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteInitialize()</text>
<text text-anchor="start" x="8" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteBeforeSolutionLoop()</text>
<text text-anchor="start" x="8" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteInitializeSolution</text>
<text text-anchor="start" x="8" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">Step()</text>
<text text-anchor="start" x="8" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteFinalizeSolutionStep()</text>
<text text-anchor="start" x="8" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteBeforeOutputStep()</text>
<text text-anchor="start" x="8" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteAfterOutputStep()</text>
<text text-anchor="start" x="8" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteFinalize()</text>
<text text-anchor="start" x="8" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="8" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="8" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDefaultParameters()</text>
<text text-anchor="start" x="8" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="8" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="8" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="8" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Process()</text>
<text text-anchor="start" x="8" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Process()</text>
<text text-anchor="start" x="8" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Process()</text>
<text text-anchor="start" x="8" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="8" y="-1300.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="8" y="-1289.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Execute()</text>
<text text-anchor="start" x="8" y="-1278.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteInitialize()</text>
<text text-anchor="start" x="8" y="-1267.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteBeforeSolutionLoop()</text>
<text text-anchor="start" x="8" y="-1256.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteInitializeSolution</text>
<text text-anchor="start" x="8" y="-1245.5" font-family="Helvetica,sans-Serif" font-size="10.00">Step()</text>
<text text-anchor="start" x="8" y="-1234.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteFinalizeSolutionStep()</text>
<text text-anchor="start" x="8" y="-1223.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteBeforeOutputStep()</text>
<text text-anchor="start" x="8" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteAfterOutputStep()</text>
<text text-anchor="start" x="8" y="-1201.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteFinalize()</text>
<text text-anchor="start" x="8" y="-1190.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="8" y="-1179.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="8" y="-1168.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefaultParameters()</text>
<text text-anchor="start" x="8" y="-1157.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="8" y="-1146.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="8" y="-1135.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="8" y="-1124.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="#63b8ff" d="M130.26,-1106.38C134.91,-1076.56 139.74,-1045.61 144.64,-1014.2"/>
<polygon fill="none" stroke="#63b8ff" points="126.8,-1105.83 128.72,-1116.25 133.72,-1106.91 126.8,-1105.83"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:title=" ">
<polygon fill="white" stroke="#666666" points="65,-1740.5 65,-1797.5 108,-1797.5 108,-1740.5 65,-1740.5"/>
<text text-anchor="middle" x="86.5" y="-1785.5" font-family="Helvetica,sans-Serif" font-size="10.00">Flags</text>
<polyline fill="none" stroke="#666666" points="65,-1778.5 108,-1778.5"/>
<text text-anchor="middle" x="86.5" y="-1766.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="65,-1759.5 108,-1759.5"/>
<text text-anchor="middle" x="86.5" y="-1747.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="#63b8ff" d="M86.5,-1729.39C86.5,-1710.37 86.5,-1685.63 86.5,-1658.15"/>
<polygon fill="none" stroke="#63b8ff" points="83,-1729.23 86.5,-1739.23 90,-1729.23 83,-1729.23"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="../../d4/d5e/class_model_part.html" target="_top" xlink:title="This class aims to manage meshes for multi&#45;physics simulations.">
<polygon fill="white" stroke="#666666" points="191,-1359.5 191,-1416.5 256,-1416.5 256,-1359.5 191,-1359.5"/>
<text text-anchor="middle" x="223.5" y="-1404.5" font-family="Helvetica,sans-Serif" font-size="10.00">ModelPart</text>
<polyline fill="none" stroke="#666666" points="191,-1397.5 256,-1397.5"/>
<text text-anchor="middle" x="223.5" y="-1385.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="191,-1378.5 256,-1378.5"/>
<text text-anchor="middle" x="223.5" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node1 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M223.5,-1359.74C223.5,-1304.38 223.5,-1171.67 223.5,-1027.11"/>
<polygon fill="none" stroke="#404040" points="223.5,-1027.34 219.5,-1021.34 223.5,-1015.34 227.5,-1021.34 223.5,-1027.34"/>
<text text-anchor="middle" x="272.5" y="-1047" font-family="Helvetica,sans-Serif" font-size="10.00"> #mrBaseModelPart</text>
<text text-anchor="middle" x="272.5" y="-1036" font-family="Helvetica,sans-Serif" font-size="10.00">#mrSkinModelPart</text>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="../../d1/d66/class_kratos_1_1_variable.html" target="_top" xlink:title=" ">
<polygon fill="white" stroke="#666666" points="274,-1073.5 274,-1702.5 435,-1702.5 435,-1073.5 274,-1073.5"/>
<text text-anchor="middle" x="354.5" y="-1690.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Variable&lt; TVarType &gt;</text>
<polyline fill="none" stroke="#666666" points="274,-1683.5 435,-1683.5"/>
<text text-anchor="middle" x="354.5" y="-1671.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="274,-1664.5 435,-1664.5"/>
<text text-anchor="start" x="282" y="-1652.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Variable()</text>
<text text-anchor="start" x="282" y="-1641.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Variable()</text>
<text text-anchor="start" x="282" y="-1630.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Variable()</text>
<text text-anchor="start" x="282" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Variable()</text>
<text text-anchor="start" x="282" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~Variable()</text>
<text text-anchor="start" x="282" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="282" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="282" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="282" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="282" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetTimeDerivative()</text>
<text text-anchor="start" x="282" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Zero()</text>
<text text-anchor="start" x="282" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ pZero()</text>
<text text-anchor="start" x="282" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Type</text>
<text text-anchor="start" x="282" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KeyType</text>
<text text-anchor="start" x="282" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VariableType</text>
<text text-anchor="start" x="282" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="282" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="282" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">* msStaticObject</text>
<text text-anchor="start" x="282" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mZero</text>
<text text-anchor="start" x="282" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpTimeDerivativeVariable</text>
<text text-anchor="start" x="282" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="282" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="282" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="282" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Variable()</text>
<text text-anchor="start" x="282" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Variable()</text>
<text text-anchor="start" x="282" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Variable()</text>
<text text-anchor="start" x="282" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Variable()</text>
<text text-anchor="start" x="282" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Variable()</text>
<text text-anchor="start" x="282" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="282" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="282" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Copy()</text>
<text text-anchor="start" x="282" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Assign()</text>
<text text-anchor="start" x="282" y="-1300.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignZero()</text>
<text text-anchor="start" x="282" y="-1289.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Delete()</text>
<text text-anchor="start" x="282" y="-1278.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Destruct()</text>
<text text-anchor="start" x="282" y="-1267.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Print()</text>
<text text-anchor="start" x="282" y="-1256.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="282" y="-1245.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Save()</text>
<text text-anchor="start" x="282" y="-1234.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Allocate()</text>
<text text-anchor="start" x="282" y="-1223.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Load()</text>
<text text-anchor="start" x="282" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetValue()</text>
<text text-anchor="start" x="282" y="-1201.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetValue()</text>
<text text-anchor="start" x="282" y="-1190.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StaticObject()</text>
<text text-anchor="start" x="282" y="-1179.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="282" y="-1168.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="282" y="-1157.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="282" y="-1146.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetTimeDerivative()</text>
<text text-anchor="start" x="282" y="-1135.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Zero()</text>
<text text-anchor="start" x="282" y="-1124.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pZero()</text>
<text text-anchor="start" x="282" y="-1113.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Variable()</text>
<text text-anchor="start" x="282" y="-1102.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Variable()</text>
<text text-anchor="start" x="282" y="-1091.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetValueByIndex()</text>
<text text-anchor="start" x="282" y="-1080.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetValueByIndex()</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node1 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M330.69,-1073.61C329.06,-1059.87 327.33,-1046.29 325.5,-1033 325.23,-1031.06 324.96,-1029.12 324.69,-1027.17"/>
<polygon fill="none" stroke="#404040" points="324.67,-1027.06 319.87,-1021.68 322.99,-1015.18 327.79,-1020.55 324.67,-1027.06"/>
<text text-anchor="middle" x="401" y="-1047" font-family="Helvetica,sans-Serif" font-size="10.00"> #mrEmbeddedNodalVariable</text>
<text text-anchor="middle" x="401" y="-1036" font-family="Helvetica,sans-Serif" font-size="10.00">#mrSkinVariable</text>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:title=" ">
<polygon fill="white" stroke="#666666" points="314.5,-1740.5 314.5,-1797.5 394.5,-1797.5 394.5,-1740.5 314.5,-1740.5"/>
<text text-anchor="middle" x="354.5" y="-1785.5" font-family="Helvetica,sans-Serif" font-size="10.00">VariableData</text>
<polyline fill="none" stroke="#666666" points="314.5,-1778.5 394.5,-1778.5"/>
<text text-anchor="middle" x="354.5" y="-1766.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="314.5,-1759.5 394.5,-1759.5"/>
<text text-anchor="middle" x="354.5" y="-1747.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node5 -->
<g id="edge5" class="edge">
<title>Node6&#45;&gt;Node5</title>
<path fill="none" stroke="#63b8ff" d="M354.5,-1729.38C354.5,-1721.36 354.5,-1712.33 354.5,-1702.49"/>
<polygon fill="none" stroke="#63b8ff" points="351,-1729.23 354.5,-1739.23 358,-1729.23 351,-1729.23"/>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="class_kratos_1_1_calculate_embedded_nodal_variable_from_skin_process__coll__graph_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
