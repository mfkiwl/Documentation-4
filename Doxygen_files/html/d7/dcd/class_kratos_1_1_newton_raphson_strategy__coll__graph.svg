<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 7.1.0 (0)
 -->
<!-- Title: Kratos::NewtonRaphsonStrategy&lt; TSparseSpace, TDenseSpace, TLinearSolver &gt; Pages: 1 -->
<!--zoomable 2163 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 183;
var viewHeight = 2163;
var sectionId = 'dynsection-1';
</script>
<script xlink:href="../../svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>Kratos::NewtonRaphsonStrategy&lt; TSparseSpace, TDenseSpace, TLinearSolver &gt;</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="This is the base Newton Raphson strategy.">
<polygon fill="#999999" stroke="#666666" points="0,-0.5 0,-552.5 175,-552.5 175,-0.5 0,-0.5"/>
<text text-anchor="start" x="8" y="-540.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::NewtonRaphsonStrategy</text>
<text text-anchor="start" x="8" y="-529.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="87.5" y="-518.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="#666666" points="0,-511.5 175,-511.5"/>
<text text-anchor="start" x="8" y="-499.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpConvergenceCriteria</text>
<text text-anchor="start" x="8" y="-488.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mMaxIterationNumber</text>
<polyline fill="none" stroke="#666666" points="0,-481.5 175,-481.5"/>
<text text-anchor="start" x="8" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NewtonRaphsonStrategy()</text>
<text text-anchor="start" x="8" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NewtonRaphsonStrategy()</text>
<text text-anchor="start" x="8" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~NewtonRaphsonStrategy()</text>
<text text-anchor="start" x="8" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="8" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="8" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="8" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveIteration()</text>
<text text-anchor="start" x="8" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="8" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="8" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="8" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetMaxIterationNumber()</text>
<text text-anchor="start" x="8" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetMaxIterationNumber()</text>
<text text-anchor="start" x="8" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Initialize()</text>
<text text-anchor="start" x="8" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="8" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalFlagType</text>
<text text-anchor="start" x="8" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConvergenceCriterionType</text>
<text text-anchor="start" x="8" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolverType</text>
<text text-anchor="start" x="8" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemeType</text>
<text text-anchor="start" x="8" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearSolverType</text>
<text text-anchor="start" x="8" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseSpaceType</text>
<text text-anchor="start" x="8" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="8" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemMatrixType</text>
<text text-anchor="start" x="8" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorType</text>
<text text-anchor="start" x="8" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemMatrixPointerType</text>
<text text-anchor="start" x="8" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorPointerType</text>
<text text-anchor="start" x="8" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpConvergenceCriteria</text>
<text text-anchor="start" x="8" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxIterationNumber</text>
<text text-anchor="start" x="8" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NewtonRaphsonStrategy()</text>
<text text-anchor="start" x="8" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NewtonRaphsonStrategy()</text>
<text text-anchor="start" x="8" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~NewtonRaphsonStrategy()</text>
<text text-anchor="start" x="8" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="8" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="8" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="8" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveIteration()</text>
<text text-anchor="start" x="8" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="8" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="8" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="8" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetMaxIterationNumber()</text>
<text text-anchor="start" x="8" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetMaxIterationNumber()</text>
<text text-anchor="start" x="8" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="8" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NewtonRaphsonStrategy()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../d9/d2f/class_kratos_1_1_linear_strategy.html" target="_top" xlink:title="This is the base linear strategy jacobi / gauss&#45;seidel linear strategies.">
<polygon fill="white" stroke="#666666" points="2,-589.5 2,-1350.5 173,-1350.5 173,-589.5 2,-589.5"/>
<text text-anchor="start" x="10" y="-1338.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::LinearStrategy</text>
<text text-anchor="start" x="10" y="-1327.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="87.5" y="-1316.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="#666666" points="2,-1309.5 173,-1309.5"/>
<text text-anchor="start" x="10" y="-1297.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpScheme</text>
<text text-anchor="start" x="10" y="-1286.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpBuilderAndSolver</text>
<text text-anchor="start" x="10" y="-1275.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpDx</text>
<text text-anchor="start" x="10" y="-1264.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpb</text>
<text text-anchor="start" x="10" y="-1253.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpA</text>
<polyline fill="none" stroke="#666666" points="2,-1246.5 173,-1246.5"/>
<text text-anchor="start" x="10" y="-1234.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LinearStrategy()</text>
<text text-anchor="start" x="10" y="-1223.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LinearStrategy()</text>
<text text-anchor="start" x="10" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~LinearStrategy()</text>
<text text-anchor="start" x="10" y="-1201.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="10" y="-1190.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="10" y="-1179.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="10" y="-1168.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveIteration()</text>
<text text-anchor="start" x="10" y="-1157.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="10" y="-1146.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="10" y="-1135.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="10" y="-1124.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetScheme()</text>
<text text-anchor="start" x="10" y="-1113.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetScheme()</text>
<text text-anchor="start" x="10" y="-1102.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetBuilderAndSolver()</text>
<text text-anchor="start" x="10" y="-1091.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetBuilderAndSolver()</text>
<text text-anchor="start" x="10" y="-1080.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSystemMatrix()</text>
<text text-anchor="start" x="10" y="-1069.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDirectSystemMatrix()</text>
<text text-anchor="start" x="10" y="-1058.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Initialize()</text>
<text text-anchor="start" x="10" y="-1047.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Predict()</text>
<text text-anchor="start" x="10" y="-1036.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Update()</text>
<text text-anchor="start" x="10" y="-1025.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SetSystemDofs()</text>
<text text-anchor="start" x="10" y="-1014.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="10" y="-1003.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalFlagType</text>
<text text-anchor="start" x="10" y="-992.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolverType</text>
<text text-anchor="start" x="10" y="-981.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemeType</text>
<text text-anchor="start" x="10" y="-970.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearSolverType</text>
<text text-anchor="start" x="10" y="-959.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseSpaceType</text>
<text text-anchor="start" x="10" y="-948.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="10" y="-937.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemMatrixType</text>
<text text-anchor="start" x="10" y="-926.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorType</text>
<text text-anchor="start" x="10" y="-915.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemMatrixPointerType</text>
<text text-anchor="start" x="10" y="-904.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorPointerType</text>
<text text-anchor="start" x="10" y="-893.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="10" y="-882.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="10" y="-871.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpScheme</text>
<text text-anchor="start" x="10" y="-860.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpBuilderAndSolver</text>
<text text-anchor="start" x="10" y="-849.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpDx</text>
<text text-anchor="start" x="10" y="-838.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpb</text>
<text text-anchor="start" x="10" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpA</text>
<text text-anchor="start" x="10" y="-816.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearStrategy()</text>
<text text-anchor="start" x="10" y="-805.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearStrategy()</text>
<text text-anchor="start" x="10" y="-794.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~LinearStrategy()</text>
<text text-anchor="start" x="10" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="10" y="-772.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="10" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="10" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveIteration()</text>
<text text-anchor="start" x="10" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="10" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="10" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="10" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetScheme()</text>
<text text-anchor="start" x="10" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetScheme()</text>
<text text-anchor="start" x="10" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetBuilderAndSolver()</text>
<text text-anchor="start" x="10" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetBuilderAndSolver()</text>
<text text-anchor="start" x="10" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSystemMatrix()</text>
<text text-anchor="start" x="10" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDirectSystemMatrix()</text>
<text text-anchor="start" x="10" y="-640.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="10" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Predict()</text>
<text text-anchor="start" x="10" y="-618.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Update()</text>
<text text-anchor="start" x="10" y="-607.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetSystemDofs()</text>
<text text-anchor="start" x="10" y="-596.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LinearStrategy()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="#63b8ff" d="M87.5,-578.14C87.5,-569.43 87.5,-560.75 87.5,-552.14"/>
<polygon fill="none" stroke="#63b8ff" points="84,-578.1 87.5,-588.1 91,-578.1 84,-578.1"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../d1/d43/class_kratos_1_1_solution_strategy.html" target="_top" xlink:title="Solution strategy base class.">
<polygon fill="white" stroke="#666666" points="2,-1387.5 2,-2060.5 173,-2060.5 173,-1387.5 2,-1387.5"/>
<text text-anchor="start" x="10" y="-2048.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::SolutionStrategy</text>
<text text-anchor="start" x="10" y="-2037.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="87.5" y="-2026.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="#666666" points="2,-2019.5 173,-2019.5"/>
<text text-anchor="start" x="10" y="-2007.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mOptions</text>
<text text-anchor="start" x="10" y="-1996.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mEchoLevel</text>
<polyline fill="none" stroke="#666666" points="2,-1989.5 173,-1989.5"/>
<text text-anchor="start" x="10" y="-1977.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolutionStrategy()</text>
<text text-anchor="start" x="10" y="-1966.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolutionStrategy()</text>
<text text-anchor="start" x="10" y="-1955.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~SolutionStrategy()</text>
<text text-anchor="start" x="10" y="-1944.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="10" y="-1933.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="10" y="-1922.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="10" y="-1911.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="10" y="-1900.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveIteration()</text>
<text text-anchor="start" x="10" y="-1889.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="10" y="-1878.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="10" y="-1867.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="10" y="-1856.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetEchoLevel()</text>
<text text-anchor="start" x="10" y="-1845.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetOptions()</text>
<text text-anchor="start" x="10" y="-1834.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetOptions()</text>
<text text-anchor="start" x="10" y="-1823.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetMaxIterationNumber()</text>
<text text-anchor="start" x="10" y="-1812.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetModelPart()</text>
<text text-anchor="start" x="10" y="-1801.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Initialize()</text>
<text text-anchor="start" x="10" y="-1790.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Predict()</text>
<text text-anchor="start" x="10" y="-1779.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Update()</text>
<text text-anchor="start" x="10" y="-1768.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Finalize()</text>
<text text-anchor="start" x="10" y="-1757.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalFlagType</text>
<text text-anchor="start" x="10" y="-1746.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="10" y="-1735.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemMatrixType</text>
<text text-anchor="start" x="10" y="-1724.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorType</text>
<text text-anchor="start" x="10" y="-1713.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemMatrixPointerType</text>
<text text-anchor="start" x="10" y="-1702.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SystemVectorPointerType</text>
<text text-anchor="start" x="10" y="-1691.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemeType</text>
<text text-anchor="start" x="10" y="-1680.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolverType</text>
<text text-anchor="start" x="10" y="-1669.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="10" y="-1658.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="10" y="-1647.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mOptions</text>
<text text-anchor="start" x="10" y="-1636.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEchoLevel</text>
<text text-anchor="start" x="10" y="-1625.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mrModelPart</text>
<text text-anchor="start" x="10" y="-1614.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionStrategy()</text>
<text text-anchor="start" x="10" y="-1603.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionStrategy()</text>
<text text-anchor="start" x="10" y="-1592.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~SolutionStrategy()</text>
<text text-anchor="start" x="10" y="-1581.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="10" y="-1570.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="10" y="-1559.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="10" y="-1548.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="10" y="-1537.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveIteration()</text>
<text text-anchor="start" x="10" y="-1526.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="10" y="-1515.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="10" y="-1504.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="10" y="-1493.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetEchoLevel()</text>
<text text-anchor="start" x="10" y="-1482.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetOptions()</text>
<text text-anchor="start" x="10" y="-1471.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetOptions()</text>
<text text-anchor="start" x="10" y="-1460.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetMaxIterationNumber()</text>
<text text-anchor="start" x="10" y="-1449.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetModelPart()</text>
<text text-anchor="start" x="10" y="-1438.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="10" y="-1427.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Predict()</text>
<text text-anchor="start" x="10" y="-1416.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Update()</text>
<text text-anchor="start" x="10" y="-1405.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Finalize()</text>
<text text-anchor="start" x="10" y="-1394.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolutionStrategy()</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="#63b8ff" d="M87.5,-1376.3C87.5,-1367.64 87.5,-1358.95 87.5,-1350.26"/>
<polygon fill="none" stroke="#63b8ff" points="84,-1376.17 87.5,-1386.17 91,-1376.17 84,-1376.17"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:title=" ">
<polygon fill="white" stroke="#666666" points="66,-2097.5 66,-2154.5 109,-2154.5 109,-2097.5 66,-2097.5"/>
<text text-anchor="middle" x="87.5" y="-2142.5" font-family="Helvetica,sans-Serif" font-size="10.00">Flags</text>
<polyline fill="none" stroke="#666666" points="66,-2135.5 109,-2135.5"/>
<text text-anchor="middle" x="87.5" y="-2123.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="66,-2116.5 109,-2116.5"/>
<text text-anchor="middle" x="87.5" y="-2104.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node3</title>
<path fill="none" stroke="#63b8ff" d="M87.5,-2086.21C87.5,-2078.51 87.5,-2069.87 87.5,-2060.47"/>
<polygon fill="none" stroke="#63b8ff" points="84,-2085.99 87.5,-2095.99 91,-2085.99 84,-2085.99"/>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="class_kratos_1_1_newton_raphson_strategy__coll__graph_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
