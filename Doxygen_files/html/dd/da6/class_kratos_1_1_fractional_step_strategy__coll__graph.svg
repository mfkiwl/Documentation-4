<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Kratos::FractionalStepStrategy&lt; TSparseSpace, TDenseSpace, TLinearSolver &gt; Pages: 1 -->
<!--zoomable 2510 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 359;
var viewHeight = 2510;
var sectionId = 'dynsection-1';
</script>
<script xlink:href="../../svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>Kratos::FractionalStepStrategy&lt; TSparseSpace, TDenseSpace, TLinearSolver &gt;</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Fractional&#45;step strategy for incompressible Navier&#45;Stokes formulation This strategy implements a spli...">
<polygon fill="#bfbfbf" stroke="black" points="81.5,-0.5 81.5,-1179.5 280.5,-1179.5 280.5,-0.5 81.5,-0.5"/>
<text text-anchor="start" x="89.5" y="-1167.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::FractionalStepStrategy</text>
<text text-anchor="start" x="89.5" y="-1156.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="181" y="-1145.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="81.5,-1138.5 280.5,-1138.5 "/>
<text text-anchor="start" x="89.5" y="-1126.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mVelocityTolerance</text>
<text text-anchor="start" x="89.5" y="-1115.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mPressureTolerance</text>
<text text-anchor="start" x="89.5" y="-1104.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mPressureGradientRelaxation</text>
<text text-anchor="start" x="89.5" y="-1093.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor</text>
<text text-anchor="start" x="89.5" y="-1082.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mMaxVelocityIter</text>
<text text-anchor="start" x="89.5" y="-1071.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mMaxPressureIter</text>
<text text-anchor="start" x="89.5" y="-1060.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mDomainSize</text>
<text text-anchor="start" x="89.5" y="-1049.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mTimeOrder</text>
<text text-anchor="start" x="89.5" y="-1038.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mPredictorCorrector</text>
<text text-anchor="start" x="89.5" y="-1027.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mUseSlipConditions</text>
<text text-anchor="start" x="89.5" y="-1016.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mReformDofSet</text>
<text text-anchor="start" x="89.5" y="-1005.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mCalculateReactionsFlag</text>
<text text-anchor="start" x="89.5" y="-994.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpMomentumStrategy</text>
<text text-anchor="start" x="89.5" y="-983.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpPressureStrategy</text>
<text text-anchor="start" x="89.5" y="-972.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mExtraIterationSteps</text>
<polyline fill="none" stroke="black" points="81.5,-965.5 280.5,-965.5 "/>
<text text-anchor="start" x="89.5" y="-953.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FractionalStepStrategy()</text>
<text text-anchor="start" x="89.5" y="-942.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FractionalStepStrategy()</text>
<text text-anchor="start" x="89.5" y="-931.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FractionalStepStrategy()</text>
<text text-anchor="start" x="89.5" y="-920.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FractionalStepStrategy()</text>
<text text-anchor="start" x="89.5" y="-909.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~FractionalStepStrategy()</text>
<text text-anchor="start" x="89.5" y="-898.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="89.5" y="-887.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="89.5" y="-876.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="89.5" y="-865.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="89.5" y="-854.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="89.5" y="-843.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateReactions()</text>
<text text-anchor="start" x="89.5" y="-832.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AddIterationStep()</text>
<text text-anchor="start" x="89.5" y="-821.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ClearExtraIterationSteps()</text>
<text text-anchor="start" x="89.5" y="-810.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="89.5" y="-799.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="89.5" y="-788.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetCalculateReactionsFlag()</text>
<text text-anchor="start" x="89.5" y="-777.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetCalculateReactionsFlag()</text>
<text text-anchor="start" x="89.5" y="-766.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="89.5" y="-755.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="89.5" y="-744.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="89.5" y="-733.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SetTimeCoefficients()</text>
<text text-anchor="start" x="89.5" y="-722.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SolveStep()</text>
<text text-anchor="start" x="89.5" y="-711.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckFractionalStepConvergence()</text>
<text text-anchor="start" x="89.5" y="-700.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckPressureConvergence()</text>
<text text-anchor="start" x="89.5" y="-689.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ComputeSplitOssProjections()</text>
<text text-anchor="start" x="89.5" y="-678.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateEndOfStepVelocity()</text>
<text text-anchor="start" x="89.5" y="-667.5" font-family="Helvetica,sans-Serif" font-size="10.00"># EnforceSlipCondition()</text>
<text text-anchor="start" x="89.5" y="-656.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PeriodicConditionProjection</text>
<text text-anchor="start" x="89.5" y="-645.5" font-family="Helvetica,sans-Serif" font-size="10.00">Correction()</text>
<text text-anchor="start" x="89.5" y="-634.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PeriodicConditionVelocity</text>
<text text-anchor="start" x="89.5" y="-623.5" font-family="Helvetica,sans-Serif" font-size="10.00">Correction()</text>
<text text-anchor="start" x="89.5" y="-612.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="89.5" y="-601.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="89.5" y="-590.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="89.5" y="-579.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StrategyPointerType</text>
<text text-anchor="start" x="89.5" y="-568.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolverSettingsType</text>
<text text-anchor="start" x="89.5" y="-557.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="89.5" y="-546.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="89.5" y="-535.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mVelocityTolerance</text>
<text text-anchor="start" x="89.5" y="-524.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mPressureTolerance</text>
<text text-anchor="start" x="89.5" y="-513.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mPressureGradientRelaxation</text>
<text text-anchor="start" x="89.5" y="-502.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor</text>
<text text-anchor="start" x="89.5" y="-491.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxVelocityIter</text>
<text text-anchor="start" x="89.5" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxPressureIter</text>
<text text-anchor="start" x="89.5" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mDomainSize</text>
<text text-anchor="start" x="89.5" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mTimeOrder</text>
<text text-anchor="start" x="89.5" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mPredictorCorrector</text>
<text text-anchor="start" x="89.5" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mUseSlipConditions</text>
<text text-anchor="start" x="89.5" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mReformDofSet</text>
<text text-anchor="start" x="89.5" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mCalculateReactionsFlag</text>
<text text-anchor="start" x="89.5" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpMomentumStrategy</text>
<text text-anchor="start" x="89.5" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpPressureStrategy</text>
<text text-anchor="start" x="89.5" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mExtraIterationSteps</text>
<text text-anchor="start" x="89.5" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FractionalStepStrategy()</text>
<text text-anchor="start" x="89.5" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FractionalStepStrategy()</text>
<text text-anchor="start" x="89.5" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FractionalStepStrategy()</text>
<text text-anchor="start" x="89.5" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FractionalStepStrategy()</text>
<text text-anchor="start" x="89.5" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~FractionalStepStrategy()</text>
<text text-anchor="start" x="89.5" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="89.5" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="89.5" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="89.5" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="89.5" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="89.5" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateReactions()</text>
<text text-anchor="start" x="89.5" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AddIterationStep()</text>
<text text-anchor="start" x="89.5" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClearExtraIterationSteps()</text>
<text text-anchor="start" x="89.5" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="89.5" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="89.5" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetCalculateReactionsFlag()</text>
<text text-anchor="start" x="89.5" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetCalculateReactionsFlag()</text>
<text text-anchor="start" x="89.5" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="89.5" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="89.5" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="89.5" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetTimeCoefficients()</text>
<text text-anchor="start" x="89.5" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveStep()</text>
<text text-anchor="start" x="89.5" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckFractionalStepConvergence()</text>
<text text-anchor="start" x="89.5" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckPressureConvergence()</text>
<text text-anchor="start" x="89.5" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeSplitOssProjections()</text>
<text text-anchor="start" x="89.5" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateEndOfStepVelocity()</text>
<text text-anchor="start" x="89.5" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EnforceSlipCondition()</text>
<text text-anchor="start" x="89.5" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PeriodicConditionProjection</text>
<text text-anchor="start" x="89.5" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">Correction()</text>
<text text-anchor="start" x="89.5" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PeriodicConditionVelocity</text>
<text text-anchor="start" x="89.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">Correction()</text>
<text text-anchor="start" x="89.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeStrategy()</text>
<text text-anchor="start" x="89.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="89.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FractionalStepStrategy()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../d8/df2/class_kratos_1_1_implicit_solving_strategy.html" target="_top" xlink:title="Implicit solving strategy base class This is the base class from which we will derive all the implici...">
<polygon fill="none" stroke="black" points="5.5,-1304.5 5.5,-1801.5 176.5,-1801.5 176.5,-1304.5 5.5,-1304.5"/>
<text text-anchor="start" x="13.5" y="-1789.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ImplicitSolvingStrategy</text>
<text text-anchor="start" x="13.5" y="-1778.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="91" y="-1767.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="black" points="5.5,-1760.5 176.5,-1760.5 "/>
<text text-anchor="start" x="13.5" y="-1748.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mRebuildLevel</text>
<text text-anchor="start" x="13.5" y="-1737.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mStiffnessMatrixIsBuilt</text>
<polyline fill="none" stroke="black" points="5.5,-1730.5 176.5,-1730.5 "/>
<text text-anchor="start" x="13.5" y="-1718.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="13.5" y="-1707.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="13.5" y="-1696.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="13.5" y="-1685.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="13.5" y="-1674.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Create()</text>
<text text-anchor="start" x="13.5" y="-1663.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetRebuildLevel()</text>
<text text-anchor="start" x="13.5" y="-1652.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetRebuildLevel()</text>
<text text-anchor="start" x="13.5" y="-1641.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetStiffnessMatrixIsBuilt()</text>
<text text-anchor="start" x="13.5" y="-1630.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetStiffnessMatrixIsBuilt()</text>
<text text-anchor="start" x="13.5" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="13.5" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSettings()</text>
<text text-anchor="start" x="13.5" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="13.5" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="13.5" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="13.5" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="13.5" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixPointerType</text>
<text text-anchor="start" x="13.5" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorPointerType</text>
<text text-anchor="start" x="13.5" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="13.5" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="13.5" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="13.5" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TBuilderAndSolverType</text>
<text text-anchor="start" x="13.5" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="13.5" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mRebuildLevel</text>
<text text-anchor="start" x="13.5" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mStiffnessMatrixIsBuilt</text>
<text text-anchor="start" x="13.5" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="13.5" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="13.5" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="13.5" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="13.5" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="13.5" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefaultParameters()</text>
<text text-anchor="start" x="13.5" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Name()</text>
<text text-anchor="start" x="13.5" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetRebuildLevel()</text>
<text text-anchor="start" x="13.5" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetRebuildLevel()</text>
<text text-anchor="start" x="13.5" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetStiffnessMatrixIsBuilt()</text>
<text text-anchor="start" x="13.5" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetStiffnessMatrixIsBuilt()</text>
<text text-anchor="start" x="13.5" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="13.5" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="13.5" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ImplicitSolvingStrategy()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M115.16,-1294.04C118.55,-1257.78 122.15,-1219.36 125.85,-1179.9"/>
<polygon fill="none" stroke="midnightblue" points="111.65,-1293.92 114.21,-1304.21 118.62,-1294.58 111.65,-1293.92"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../de/d0a/class_kratos_1_1_solving_strategy.html" target="_top" xlink:title="Solving strategy base class This is the base class from which we will derive all the strategies (impl...">
<polygon fill="none" stroke="black" points="0,-1916.5 0,-2501.5 182,-2501.5 182,-1916.5 0,-1916.5"/>
<text text-anchor="start" x="8" y="-2489.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::SolvingStrategy</text>
<text text-anchor="middle" x="91" y="-2478.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace &gt;</text>
<polyline fill="none" stroke="black" points="0,-2471.5 182,-2471.5 "/>
<text text-anchor="start" x="8" y="-2459.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mEchoLevel</text>
<polyline fill="none" stroke="black" points="0,-2452.5 182,-2452.5 "/>
<text text-anchor="start" x="8" y="-2440.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolvingStrategy()</text>
<text text-anchor="start" x="8" y="-2429.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolvingStrategy()</text>
<text text-anchor="start" x="8" y="-2418.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolvingStrategy()</text>
<text text-anchor="start" x="8" y="-2407.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~SolvingStrategy()</text>
<text text-anchor="start" x="8" y="-2396.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="8" y="-2385.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="8" y="-2374.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="8" y="-2363.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ValidateAndAssignParameters()</text>
<text text-anchor="start" x="8" y="-2352.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSettings()</text>
<text text-anchor="start" x="8" y="-2341.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="8" y="-2330.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="8" y="-2319.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="8" y="-2308.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixPointerType</text>
<text text-anchor="start" x="8" y="-2297.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorPointerType</text>
<text text-anchor="start" x="8" y="-2286.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="8" y="-2275.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="8" y="-2264.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClassType</text>
<text text-anchor="start" x="8" y="-2253.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDofType</text>
<text text-anchor="start" x="8" y="-2242.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="8" y="-2231.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodesArrayType</text>
<text text-anchor="start" x="8" y="-2220.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElementsArrayType</text>
<text text-anchor="start" x="8" y="-2209.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConditionsArrayType</text>
<text text-anchor="start" x="8" y="-2198.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-2187.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-2176.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEchoLevel</text>
<text text-anchor="start" x="8" y="-2165.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpModelPart</text>
<text text-anchor="start" x="8" y="-2154.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMoveMeshFlag</text>
<text text-anchor="start" x="8" y="-2143.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvingStrategy()</text>
<text text-anchor="start" x="8" y="-2132.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvingStrategy()</text>
<text text-anchor="start" x="8" y="-2121.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvingStrategy()</text>
<text text-anchor="start" x="8" y="-2110.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~SolvingStrategy()</text>
<text text-anchor="start" x="8" y="-2099.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="8" y="-2088.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Predict()</text>
<text text-anchor="start" x="8" y="-2077.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="8" y="-2066.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="8" y="-2055.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="8" y="-2044.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsConverged()</text>
<text text-anchor="start" x="8" y="-2033.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateOutputData()</text>
<text text-anchor="start" x="8" y="-2022.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="8" y="-2011.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="8" y="-2000.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="8" y="-1989.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 17 more...</text>
<text text-anchor="start" x="8" y="-1978.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="8" y="-1967.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="8" y="-1956.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="8" y="-1945.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ValidateAndAssignParameters()</text>
<text text-anchor="start" x="8" y="-1934.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="8" y="-1923.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvingStrategy()</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M91,-1906.04C91,-1871.07 91,-1835.72 91,-1801.59"/>
<polygon fill="none" stroke="midnightblue" points="87.5,-1906.38 91,-1916.38 94.5,-1906.38 87.5,-1906.38"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="../../d1/d66/class_kratos_1_1_variable.html" target="_top" xlink:title=" ">
<polygon fill="none" stroke="black" points="195,-1227.5 195,-1878.5 351,-1878.5 351,-1227.5 195,-1227.5"/>
<text text-anchor="middle" x="273" y="-1866.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Variable&lt; int &gt;</text>
<polyline fill="none" stroke="black" points="195,-1859.5 351,-1859.5 "/>
<text text-anchor="middle" x="273" y="-1847.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="195,-1840.5 351,-1840.5 "/>
<text text-anchor="start" x="203" y="-1828.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Variable()</text>
<text text-anchor="start" x="203" y="-1817.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Variable()</text>
<text text-anchor="start" x="203" y="-1806.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Variable()</text>
<text text-anchor="start" x="203" y="-1795.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Variable()</text>
<text text-anchor="start" x="203" y="-1784.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Variable()</text>
<text text-anchor="start" x="203" y="-1773.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~Variable()</text>
<text text-anchor="start" x="203" y="-1762.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="203" y="-1751.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="203" y="-1740.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="203" y="-1729.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="203" y="-1718.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetTimeDerivative()</text>
<text text-anchor="start" x="203" y="-1707.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Zero()</text>
<text text-anchor="start" x="203" y="-1696.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ pZero()</text>
<text text-anchor="start" x="203" y="-1685.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Type</text>
<text text-anchor="start" x="203" y="-1674.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KeyType</text>
<text text-anchor="start" x="203" y="-1663.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VariableType</text>
<text text-anchor="start" x="203" y="-1652.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="203" y="-1641.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="203" y="-1630.5" font-family="Helvetica,sans-Serif" font-size="10.00">* msStaticObject</text>
<text text-anchor="start" x="203" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mZero</text>
<text text-anchor="start" x="203" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpTimeDerivativeVariable</text>
<text text-anchor="start" x="203" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Serializer</text>
<text text-anchor="start" x="203" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">* save()</text>
<text text-anchor="start" x="203" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">* load()</text>
<text text-anchor="start" x="203" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Variable()</text>
<text text-anchor="start" x="203" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Variable()</text>
<text text-anchor="start" x="203" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Variable()</text>
<text text-anchor="start" x="203" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Variable()</text>
<text text-anchor="start" x="203" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Variable()</text>
<text text-anchor="start" x="203" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Variable()</text>
<text text-anchor="start" x="203" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="203" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clone()</text>
<text text-anchor="start" x="203" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Copy()</text>
<text text-anchor="start" x="203" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Assign()</text>
<text text-anchor="start" x="203" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignZero()</text>
<text text-anchor="start" x="203" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Delete()</text>
<text text-anchor="start" x="203" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Destruct()</text>
<text text-anchor="start" x="203" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Print()</text>
<text text-anchor="start" x="203" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="203" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Save()</text>
<text text-anchor="start" x="203" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Allocate()</text>
<text text-anchor="start" x="203" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Load()</text>
<text text-anchor="start" x="203" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetValue()</text>
<text text-anchor="start" x="203" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetValue()</text>
<text text-anchor="start" x="203" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StaticObject()</text>
<text text-anchor="start" x="203" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="203" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="203" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="203" y="-1300.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetTimeDerivative()</text>
<text text-anchor="start" x="203" y="-1289.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Zero()</text>
<text text-anchor="start" x="203" y="-1278.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pZero()</text>
<text text-anchor="start" x="203" y="-1267.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Variable()</text>
<text text-anchor="start" x="203" y="-1256.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetValueByIndex()</text>
<text text-anchor="start" x="203" y="-1245.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetValueByIndex()</text>
<text text-anchor="start" x="203" y="-1234.5" font-family="Helvetica,sans-Serif" font-size="10.00">* RegisterThisVariable()</text>
</a>
</g>
</g>
<!-- Node4&#45;&gt;Node1 -->
<g id="edge3" class="edge">
<title>Node4&#45;&gt;Node1</title>
<path fill="none" stroke="#404040" d="M241.92,-1227.32C240.79,-1215.57 239.65,-1203.69 238.51,-1191.7"/>
<polygon fill="none" stroke="#404040" points="238.5,-1191.62 233.95,-1186.03 237.36,-1179.67 241.91,-1185.26 238.5,-1191.62"/>
<text text-anchor="middle" x="284.5" y="-1201" font-family="Helvetica,sans-Serif" font-size="10.00"> #mrPeriodicIdVar</text>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:title=" ">
<polygon fill="none" stroke="#bfbfbf" points="233,-2180.5 233,-2237.5 313,-2237.5 313,-2180.5 233,-2180.5"/>
<text text-anchor="middle" x="273" y="-2225.5" font-family="Helvetica,sans-Serif" font-size="10.00">VariableData</text>
<polyline fill="none" stroke="#bfbfbf" points="233,-2218.5 313,-2218.5 "/>
<text text-anchor="middle" x="273" y="-2206.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#bfbfbf" points="233,-2199.5 313,-2199.5 "/>
<text text-anchor="middle" x="273" y="-2187.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node4 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node4</title>
<path fill="none" stroke="midnightblue" d="M273,-2170.16C273,-2112.05 273,-1995.3 273,-1878.91"/>
<polygon fill="none" stroke="midnightblue" points="269.5,-2170.32 273,-2180.32 276.5,-2170.32 269.5,-2170.32"/>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="class_kratos_1_1_fractional_step_strategy__coll__graph_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
