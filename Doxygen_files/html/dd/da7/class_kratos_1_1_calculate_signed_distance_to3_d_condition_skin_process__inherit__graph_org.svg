<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 7.1.0 (0)
 -->
<!-- Title: Kratos::CalculateSignedDistanceTo3DConditionSkinProcess Pages: 1 -->
<svg width="217pt" height="1365pt"
 viewBox="0.00 0.00 217.00 1365.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1361)">
<title>Kratos::CalculateSignedDistanceTo3DConditionSkinProcess</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Short class definition.">
<polygon fill="#999999" stroke="#666666" points="0,-0.5 0,-684.5 209,-684.5 209,-0.5 0,-0.5"/>
<text text-anchor="start" x="8" y="-672.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::CalculateSignedDistance</text>
<text text-anchor="middle" x="104.5" y="-661.5" font-family="Helvetica,sans-Serif" font-size="10.00">To3DConditionSkinProcess</text>
<polyline fill="none" stroke="#666666" points="0,-654.5 209,-654.5"/>
<text text-anchor="middle" x="104.5" y="-642.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="0,-635.5 209,-635.5"/>
<text text-anchor="start" x="8" y="-623.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateSignedDistanceTo3</text>
<text text-anchor="start" x="8" y="-612.5" font-family="Helvetica,sans-Serif" font-size="10.00">DConditionSkinProcess()</text>
<text text-anchor="start" x="8" y="-601.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~CalculateSignedDistance</text>
<text text-anchor="start" x="8" y="-590.5" font-family="Helvetica,sans-Serif" font-size="10.00">To3DConditionSkinProcess()</text>
<text text-anchor="start" x="8" y="-579.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="8" y="-568.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Execute()</text>
<text text-anchor="start" x="8" y="-557.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ DistanceFluidStructure()</text>
<text text-anchor="start" x="8" y="-546.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeDistances()</text>
<text text-anchor="start" x="8" y="-535.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetIndexTable()</text>
<text text-anchor="start" x="8" y="-524.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalcNodalDistancesOfTetNodes()</text>
<text text-anchor="start" x="8" y="-513.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IdentifyIntersectionNodes()</text>
<text text-anchor="start" x="8" y="-502.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ StructuralElementNotYetConsidered()</text>
<text text-anchor="start" x="8" y="-491.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsIntersectionNodeOnTetEdge()</text>
<text text-anchor="start" x="8" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsNewIntersectionNode()</text>
<text text-anchor="start" x="8" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ IsIntersectionOnCorner()</text>
<text text-anchor="start" x="8" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 24 more...</text>
<text text-anchor="start" x="8" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="8" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="8" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="8" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintGiDMesh()</text>
<text text-anchor="start" x="8" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintGiDResults()</text>
<text text-anchor="start" x="8" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConfigurationType</text>
<text text-anchor="start" x="8" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CellType</text>
<text text-anchor="start" x="8" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">* OctreeType</text>
<text text-anchor="start" x="8" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CellNodeDataType</text>
<text text-anchor="start" x="8" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PointType</text>
<text text-anchor="start" x="8" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">* object_container_type</text>
<text text-anchor="start" x="8" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mrSkinModelPart</text>
<text text-anchor="start" x="8" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mrBodyModelPart</text>
<text text-anchor="start" x="8" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mrFluidModelPart</text>
<text text-anchor="start" x="8" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mOctreeNodes</text>
<text text-anchor="start" x="8" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mOctree</text>
<text text-anchor="start" x="8" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* epsilon</text>
<text text-anchor="start" x="8" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateSignedDistanceTo3</text>
<text text-anchor="start" x="8" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">DConditionSkinProcess()</text>
<text text-anchor="start" x="8" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~CalculateSignedDistance</text>
<text text-anchor="start" x="8" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">To3DConditionSkinProcess()</text>
<text text-anchor="start" x="8" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="8" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Execute()</text>
<text text-anchor="start" x="8" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DistanceFluidStructure()</text>
<text text-anchor="start" x="8" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeDistances()</text>
<text text-anchor="start" x="8" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetIndexTable()</text>
<text text-anchor="start" x="8" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalcNodalDistancesOfTetNodes()</text>
<text text-anchor="start" x="8" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IdentifyIntersectionNodes()</text>
<text text-anchor="start" x="8" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StructuralElementNotYetConsidered()</text>
<text text-anchor="start" x="8" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsIntersectionNodeOnTetEdge()</text>
<text text-anchor="start" x="8" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsNewIntersectionNode()</text>
<text text-anchor="start" x="8" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsIntersectionOnCorner()</text>
<text text-anchor="start" x="8" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 24 more...</text>
<text text-anchor="start" x="8" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="8" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="8" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="8" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintGiDMesh()</text>
<text text-anchor="start" x="8" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintGiDResults()</text>
<text text-anchor="start" x="8" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../d2/d8c/class_kratos_1_1_process.html" target="_top" xlink:title="The base class for all processes in Kratos.">
<polygon fill="white" stroke="#666666" points="18,-721.5 18,-1262.5 191,-1262.5 191,-721.5 18,-721.5"/>
<text text-anchor="middle" x="104.5" y="-1250.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Process</text>
<polyline fill="none" stroke="#666666" points="18,-1243.5 191,-1243.5"/>
<text text-anchor="middle" x="104.5" y="-1231.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="18,-1224.5 191,-1224.5"/>
<text text-anchor="start" x="26" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="26" y="-1201.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="26" y="-1190.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Process()</text>
<text text-anchor="start" x="26" y="-1179.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Process()</text>
<text text-anchor="start" x="26" y="-1168.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~Process()</text>
<text text-anchor="start" x="26" y="-1157.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="26" y="-1146.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Create()</text>
<text text-anchor="start" x="26" y="-1135.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Execute()</text>
<text text-anchor="start" x="26" y="-1124.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteInitialize()</text>
<text text-anchor="start" x="26" y="-1113.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteBeforeSolutionLoop()</text>
<text text-anchor="start" x="26" y="-1102.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteInitializeSolution</text>
<text text-anchor="start" x="26" y="-1091.5" font-family="Helvetica,sans-Serif" font-size="10.00">Step()</text>
<text text-anchor="start" x="26" y="-1080.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteFinalizeSolutionStep()</text>
<text text-anchor="start" x="26" y="-1069.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteBeforeOutputStep()</text>
<text text-anchor="start" x="26" y="-1058.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteAfterOutputStep()</text>
<text text-anchor="start" x="26" y="-1047.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteFinalize()</text>
<text text-anchor="start" x="26" y="-1036.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="26" y="-1025.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="26" y="-1014.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDefaultParameters()</text>
<text text-anchor="start" x="26" y="-1003.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="26" y="-992.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="26" y="-981.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="26" y="-970.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="26" y="-959.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="26" y="-948.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Process()</text>
<text text-anchor="start" x="26" y="-937.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Process()</text>
<text text-anchor="start" x="26" y="-926.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Process()</text>
<text text-anchor="start" x="26" y="-915.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="26" y="-904.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="26" y="-893.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Execute()</text>
<text text-anchor="start" x="26" y="-882.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteInitialize()</text>
<text text-anchor="start" x="26" y="-871.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteBeforeSolutionLoop()</text>
<text text-anchor="start" x="26" y="-860.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteInitializeSolution</text>
<text text-anchor="start" x="26" y="-849.5" font-family="Helvetica,sans-Serif" font-size="10.00">Step()</text>
<text text-anchor="start" x="26" y="-838.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteFinalizeSolutionStep()</text>
<text text-anchor="start" x="26" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteBeforeOutputStep()</text>
<text text-anchor="start" x="26" y="-816.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteAfterOutputStep()</text>
<text text-anchor="start" x="26" y="-805.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteFinalize()</text>
<text text-anchor="start" x="26" y="-794.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="26" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="26" y="-772.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefaultParameters()</text>
<text text-anchor="start" x="26" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="26" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="26" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="26" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="#63b8ff" d="M104.5,-710.26C104.5,-701.65 104.5,-693 104.5,-684.33"/>
<polygon fill="none" stroke="#63b8ff" points="101,-710.05 104.5,-720.05 108,-710.05 101,-710.05"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:title=" ">
<polygon fill="white" stroke="#666666" points="83,-1299.5 83,-1356.5 126,-1356.5 126,-1299.5 83,-1299.5"/>
<text text-anchor="middle" x="104.5" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">Flags</text>
<polyline fill="none" stroke="#666666" points="83,-1337.5 126,-1337.5"/>
<text text-anchor="middle" x="104.5" y="-1325.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="83,-1318.5 126,-1318.5"/>
<text text-anchor="middle" x="104.5" y="-1306.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="#63b8ff" d="M104.5,-1288.23C104.5,-1280.44 104.5,-1271.72 104.5,-1262.29"/>
<polygon fill="none" stroke="#63b8ff" points="101,-1288.15 104.5,-1298.15 108,-1288.15 101,-1288.15"/>
</g>
</g>
</svg>
