<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Kratos::SolverProcess Pages: 1 -->
<svg width="181pt" height="1244pt"
 viewBox="0.00 0.00 181.00 1244.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1240)">
<title>Kratos::SolverProcess</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="The base class for processes passed to the solution scheme.">
<polygon fill="#bfbfbf" stroke="black" points="0,-0.5 0,-563.5 173,-563.5 173,-0.5 0,-0.5"/>
<text text-anchor="middle" x="86.5" y="-551.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::SolverProcess</text>
<polyline fill="none" stroke="black" points="0,-544.5 173,-544.5 "/>
<text text-anchor="middle" x="86.5" y="-532.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="0,-525.5 173,-525.5 "/>
<text text-anchor="start" x="8" y="-513.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-502.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-491.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolverProcess()</text>
<text text-anchor="start" x="8" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolverProcess()</text>
<text text-anchor="start" x="8" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~SolverProcess()</text>
<text text-anchor="start" x="8" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="8" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Execute()</text>
<text text-anchor="start" x="8" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteInitialize()</text>
<text text-anchor="start" x="8" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteBeforeSolutionLoop()</text>
<text text-anchor="start" x="8" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteInitializeSolution</text>
<text text-anchor="start" x="8" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">Step()</text>
<text text-anchor="start" x="8" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteInitializeNonLinear</text>
<text text-anchor="start" x="8" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">Iteration()</text>
<text text-anchor="start" x="8" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteFinalizeNonLinear</text>
<text text-anchor="start" x="8" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">Iteration()</text>
<text text-anchor="start" x="8" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteFinalizeSolutionStep()</text>
<text text-anchor="start" x="8" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteBeforeOutputStep()</text>
<text text-anchor="start" x="8" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteAfterOutputStep()</text>
<text text-anchor="start" x="8" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteFinalize()</text>
<text text-anchor="start" x="8" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="8" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="8" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="8" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SolverProcess()</text>
<text text-anchor="start" x="8" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolverProcess()</text>
<text text-anchor="start" x="8" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolverProcess()</text>
<text text-anchor="start" x="8" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~SolverProcess()</text>
<text text-anchor="start" x="8" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="8" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Execute()</text>
<text text-anchor="start" x="8" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteInitialize()</text>
<text text-anchor="start" x="8" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteBeforeSolutionLoop()</text>
<text text-anchor="start" x="8" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteInitializeSolution</text>
<text text-anchor="start" x="8" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">Step()</text>
<text text-anchor="start" x="8" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteInitializeNonLinear</text>
<text text-anchor="start" x="8" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">Iteration()</text>
<text text-anchor="start" x="8" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteFinalizeNonLinear</text>
<text text-anchor="start" x="8" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">Iteration()</text>
<text text-anchor="start" x="8" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteFinalizeSolutionStep()</text>
<text text-anchor="start" x="8" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteBeforeOutputStep()</text>
<text text-anchor="start" x="8" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteAfterOutputStep()</text>
<text text-anchor="start" x="8" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteFinalize()</text>
<text text-anchor="start" x="8" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="8" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="8" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="8" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolverProcess()</text>
<text text-anchor="start" x="8" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../d2/d8c/class_kratos_1_1_process.html" target="_top" xlink:title="The base class for all processes in Kratos.">
<polygon fill="none" stroke="black" points="0,-600.5 0,-1141.5 173,-1141.5 173,-600.5 0,-600.5"/>
<text text-anchor="middle" x="86.5" y="-1129.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Process</text>
<polyline fill="none" stroke="black" points="0,-1122.5 173,-1122.5 "/>
<text text-anchor="middle" x="86.5" y="-1110.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="black" points="0,-1103.5 173,-1103.5 "/>
<text text-anchor="start" x="8" y="-1091.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-1080.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-1069.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Process()</text>
<text text-anchor="start" x="8" y="-1058.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Process()</text>
<text text-anchor="start" x="8" y="-1047.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~Process()</text>
<text text-anchor="start" x="8" y="-1036.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator()()</text>
<text text-anchor="start" x="8" y="-1025.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Create()</text>
<text text-anchor="start" x="8" y="-1014.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Execute()</text>
<text text-anchor="start" x="8" y="-1003.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteInitialize()</text>
<text text-anchor="start" x="8" y="-992.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteBeforeSolutionLoop()</text>
<text text-anchor="start" x="8" y="-981.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteInitializeSolution</text>
<text text-anchor="start" x="8" y="-970.5" font-family="Helvetica,sans-Serif" font-size="10.00">Step()</text>
<text text-anchor="start" x="8" y="-959.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteFinalizeSolutionStep()</text>
<text text-anchor="start" x="8" y="-948.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteBeforeOutputStep()</text>
<text text-anchor="start" x="8" y="-937.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteAfterOutputStep()</text>
<text text-anchor="start" x="8" y="-926.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExecuteFinalize()</text>
<text text-anchor="start" x="8" y="-915.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="8" y="-904.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="8" y="-893.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDefaultParameters()</text>
<text text-anchor="start" x="8" y="-882.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="8" y="-871.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="8" y="-860.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="8" y="-849.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-838.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Process()</text>
<text text-anchor="start" x="8" y="-816.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Process()</text>
<text text-anchor="start" x="8" y="-805.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Process()</text>
<text text-anchor="start" x="8" y="-794.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator()()</text>
<text text-anchor="start" x="8" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="8" y="-772.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Execute()</text>
<text text-anchor="start" x="8" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteInitialize()</text>
<text text-anchor="start" x="8" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteBeforeSolutionLoop()</text>
<text text-anchor="start" x="8" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteInitializeSolution</text>
<text text-anchor="start" x="8" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00">Step()</text>
<text text-anchor="start" x="8" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteFinalizeSolutionStep()</text>
<text text-anchor="start" x="8" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteBeforeOutputStep()</text>
<text text-anchor="start" x="8" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteAfterOutputStep()</text>
<text text-anchor="start" x="8" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExecuteFinalize()</text>
<text text-anchor="start" x="8" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="8" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="8" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefaultParameters()</text>
<text text-anchor="start" x="8" y="-640.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="8" y="-629.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="8" y="-618.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="8" y="-607.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M86.5,-589.95C86.5,-581.27 86.5,-572.58 86.5,-563.91"/>
<polygon fill="none" stroke="midnightblue" points="83,-590.12 86.5,-600.12 90,-590.12 83,-590.12"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:title=" ">
<polygon fill="none" stroke="#bfbfbf" points="65,-1178.5 65,-1235.5 108,-1235.5 108,-1178.5 65,-1178.5"/>
<text text-anchor="middle" x="86.5" y="-1223.5" font-family="Helvetica,sans-Serif" font-size="10.00">Flags</text>
<polyline fill="none" stroke="#bfbfbf" points="65,-1216.5 108,-1216.5 "/>
<text text-anchor="middle" x="86.5" y="-1204.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#bfbfbf" points="65,-1197.5 108,-1197.5 "/>
<text text-anchor="middle" x="86.5" y="-1185.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M86.5,-1168.19C86.5,-1160.24 86.5,-1151.3 86.5,-1141.59"/>
<polygon fill="none" stroke="midnightblue" points="83,-1168.38 86.5,-1178.38 90,-1168.38 83,-1168.38"/>
</g>
</g>
</svg>
