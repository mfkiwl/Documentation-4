<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 7.1.0 (0)
 -->
<!-- Title: Kratos::SolvingStrategy&lt; TSparseSpace, TDenseSpace &gt; Pages: 1 -->
<!--zoomable 3571 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 6715;
var viewHeight = 3571;
var sectionId = 'dynsection-0';
</script>
<script xlink:href="../../svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>Kratos::SolvingStrategy&lt; TSparseSpace, TDenseSpace &gt;</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Solving strategy base class This is the base class from which we will derive all the strategies (impl...">
<polygon fill="#999999" stroke="#666666" points="3274.5,-2977.5 3274.5,-3562.5 3456.5,-3562.5 3456.5,-2977.5 3274.5,-2977.5"/>
<text text-anchor="start" x="3282.5" y="-3550.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::SolvingStrategy</text>
<text text-anchor="middle" x="3365.5" y="-3539.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace &gt;</text>
<polyline fill="none" stroke="#666666" points="3274.5,-3532.5 3456.5,-3532.5"/>
<text text-anchor="start" x="3282.5" y="-3520.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mEchoLevel</text>
<polyline fill="none" stroke="#666666" points="3274.5,-3513.5 3456.5,-3513.5"/>
<text text-anchor="start" x="3282.5" y="-3501.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolvingStrategy()</text>
<text text-anchor="start" x="3282.5" y="-3490.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolvingStrategy()</text>
<text text-anchor="start" x="3282.5" y="-3479.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolvingStrategy()</text>
<text text-anchor="start" x="3282.5" y="-3468.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~SolvingStrategy()</text>
<text text-anchor="start" x="3282.5" y="-3457.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="3282.5" y="-3446.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="3282.5" y="-3435.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="3282.5" y="-3424.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ValidateAndAssignParameters()</text>
<text text-anchor="start" x="3282.5" y="-3413.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSettings()</text>
<text text-anchor="start" x="3282.5" y="-3402.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="3282.5" y="-3391.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="3282.5" y="-3380.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="3282.5" y="-3369.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixPointerType</text>
<text text-anchor="start" x="3282.5" y="-3358.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorPointerType</text>
<text text-anchor="start" x="3282.5" y="-3347.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="3282.5" y="-3336.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="3282.5" y="-3325.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClassType</text>
<text text-anchor="start" x="3282.5" y="-3314.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDofType</text>
<text text-anchor="start" x="3282.5" y="-3303.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="3282.5" y="-3292.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodesArrayType</text>
<text text-anchor="start" x="3282.5" y="-3281.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElementsArrayType</text>
<text text-anchor="start" x="3282.5" y="-3270.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConditionsArrayType</text>
<text text-anchor="start" x="3282.5" y="-3259.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="3282.5" y="-3248.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="3282.5" y="-3237.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEchoLevel</text>
<text text-anchor="start" x="3282.5" y="-3226.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpModelPart</text>
<text text-anchor="start" x="3282.5" y="-3215.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMoveMeshFlag</text>
<text text-anchor="start" x="3282.5" y="-3204.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvingStrategy()</text>
<text text-anchor="start" x="3282.5" y="-3193.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvingStrategy()</text>
<text text-anchor="start" x="3282.5" y="-3182.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvingStrategy()</text>
<text text-anchor="start" x="3282.5" y="-3171.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~SolvingStrategy()</text>
<text text-anchor="start" x="3282.5" y="-3160.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="3282.5" y="-3149.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Predict()</text>
<text text-anchor="start" x="3282.5" y="-3138.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="3282.5" y="-3127.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="3282.5" y="-3116.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="3282.5" y="-3105.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IsConverged()</text>
<text text-anchor="start" x="3282.5" y="-3094.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateOutputData()</text>
<text text-anchor="start" x="3282.5" y="-3083.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="3282.5" y="-3072.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="3282.5" y="-3061.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="3282.5" y="-3050.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 17 more...</text>
<text text-anchor="start" x="3282.5" y="-3039.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="3282.5" y="-3028.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="3282.5" y="-3017.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="3282.5" y="-3006.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ValidateAndAssignParameters()</text>
<text text-anchor="start" x="3282.5" y="-2995.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="3282.5" y="-2984.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvingStrategy()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../d3/d58/class_kratos_1_1_explicit_solving_strategy.html" target="_top" xlink:title="Explicit solving strategy base class.">
<polygon fill="white" stroke="#666666" points="266,-2278.5 266,-2830.5 447,-2830.5 447,-2278.5 266,-2278.5"/>
<text text-anchor="start" x="274" y="-2818.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ExplicitSolvingStrategy</text>
<text text-anchor="middle" x="356.5" y="-2807.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace &gt;</text>
<polyline fill="none" stroke="#666666" points="266,-2800.5 447,-2800.5"/>
<text text-anchor="start" x="274" y="-2788.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mRebuildLevel</text>
<polyline fill="none" stroke="#666666" points="266,-2781.5 447,-2781.5"/>
<text text-anchor="start" x="274" y="-2769.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="274" y="-2758.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="274" y="-2747.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="274" y="-2736.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="274" y="-2725.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="274" y="-2714.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="274" y="-2703.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Create()</text>
<text text-anchor="start" x="274" y="-2692.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="274" y="-2681.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SolveWithLumpedMassMatrix()</text>
<text text-anchor="start" x="274" y="-2670.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetDeltaTime()</text>
<text text-anchor="start" x="274" y="-2659.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSettings()</text>
<text text-anchor="start" x="274" y="-2648.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitBuilderType</text>
<text text-anchor="start" x="274" y="-2637.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitBuilderPointerType</text>
<text text-anchor="start" x="274" y="-2626.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofType</text>
<text text-anchor="start" x="274" y="-2615.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="274" y="-2604.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClassType</text>
<text text-anchor="start" x="274" y="-2593.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="274" y="-2582.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="274" y="-2571.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mRebuildLevel</text>
<text text-anchor="start" x="274" y="-2560.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpExplicitBuilder</text>
<text text-anchor="start" x="274" y="-2549.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="274" y="-2538.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="274" y="-2527.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="274" y="-2516.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="274" y="-2505.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="274" y="-2494.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="274" y="-2483.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="274" y="-2472.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="274" y="-2461.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="274" y="-2450.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="274" y="-2439.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="274" y="-2428.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="274" y="-2417.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetRebuildLevel()</text>
<text text-anchor="start" x="274" y="-2406.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetRebuildLevel()</text>
<text text-anchor="start" x="274" y="-2395.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetExplicitBuilder()</text>
<text text-anchor="start" x="274" y="-2384.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetExplicitBuilder()</text>
<text text-anchor="start" x="274" y="-2373.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetExplicitBuilder()</text>
<text text-anchor="start" x="274" y="-2362.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetResidualNorm()</text>
<text text-anchor="start" x="274" y="-2351.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefaultParameters()</text>
<text text-anchor="start" x="274" y="-2340.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Name()</text>
<text text-anchor="start" x="274" y="-2329.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="274" y="-2318.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveWithLumpedMassMatrix()</text>
<text text-anchor="start" x="274" y="-2307.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDeltaTime()</text>
<text text-anchor="start" x="274" y="-2296.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="274" y="-2285.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeDofSetValues()</text>
</a>
</g>
</g>
<!-- Node1&#45;&gt;Node2 -->
<g id="edge1" class="edge">
<title>Node1&#45;&gt;Node2</title>
<path fill="none" stroke="#63b8ff" d="M3263.6,-3244.84C2799.13,-3134.7 886.4,-2681.15 446.84,-2576.92"/>
<polygon fill="none" stroke="#63b8ff" points="3262.62,-3248.2 3273.15,-3247.1 3264.23,-3241.39 3262.62,-3248.2"/>
</g>
<!-- Node10 -->
<g id="node8" class="node">
<title>Node10</title>
<g id="a_node8"><a xlink:href="../../d8/df2/class_kratos_1_1_implicit_solving_strategy.html" target="_top" xlink:title="Implicit solving strategy base class This is the base class from which we will derive all the implici...">
<polygon fill="white" stroke="#666666" points="3175,-2306 3175,-2803 3346,-2803 3346,-2306 3175,-2306"/>
<text text-anchor="start" x="3183" y="-2791" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ImplicitSolvingStrategy</text>
<text text-anchor="start" x="3183" y="-2780" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="3260.5" y="-2769" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="#666666" points="3175,-2762 3346,-2762"/>
<text text-anchor="start" x="3183" y="-2750" font-family="Helvetica,sans-Serif" font-size="10.00"># mRebuildLevel</text>
<text text-anchor="start" x="3183" y="-2739" font-family="Helvetica,sans-Serif" font-size="10.00"># mStiffnessMatrixIsBuilt</text>
<polyline fill="none" stroke="#666666" points="3175,-2732 3346,-2732"/>
<text text-anchor="start" x="3183" y="-2720" font-family="Helvetica,sans-Serif" font-size="10.00">+ ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="3183" y="-2709" font-family="Helvetica,sans-Serif" font-size="10.00">+ ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="3183" y="-2698" font-family="Helvetica,sans-Serif" font-size="10.00">+ ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="3183" y="-2687" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="3183" y="-2676" font-family="Helvetica,sans-Serif" font-size="10.00">+ Create()</text>
<text text-anchor="start" x="3183" y="-2665" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetRebuildLevel()</text>
<text text-anchor="start" x="3183" y="-2654" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetRebuildLevel()</text>
<text text-anchor="start" x="3183" y="-2643" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetStiffnessMatrixIsBuilt()</text>
<text text-anchor="start" x="3183" y="-2632" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetStiffnessMatrixIsBuilt()</text>
<text text-anchor="start" x="3183" y="-2621" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="3183" y="-2610" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSettings()</text>
<text text-anchor="start" x="3183" y="-2599" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="3183" y="-2588" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="3183" y="-2577" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="3183" y="-2566" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="3183" y="-2555" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixPointerType</text>
<text text-anchor="start" x="3183" y="-2544" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorPointerType</text>
<text text-anchor="start" x="3183" y="-2533" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="3183" y="-2522" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="3183" y="-2511" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="3183" y="-2500" font-family="Helvetica,sans-Serif" font-size="10.00">* TBuilderAndSolverType</text>
<text text-anchor="start" x="3183" y="-2489" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="3183" y="-2478" font-family="Helvetica,sans-Serif" font-size="10.00">* mRebuildLevel</text>
<text text-anchor="start" x="3183" y="-2467" font-family="Helvetica,sans-Serif" font-size="10.00">* mStiffnessMatrixIsBuilt</text>
<text text-anchor="start" x="3183" y="-2456" font-family="Helvetica,sans-Serif" font-size="10.00">* ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="3183" y="-2445" font-family="Helvetica,sans-Serif" font-size="10.00">* ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="3183" y="-2434" font-family="Helvetica,sans-Serif" font-size="10.00">* ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="3183" y="-2423" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ImplicitSolvingStrategy()</text>
<text text-anchor="start" x="3183" y="-2412" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="3183" y="-2401" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefaultParameters()</text>
<text text-anchor="start" x="3183" y="-2390" font-family="Helvetica,sans-Serif" font-size="10.00">* Name()</text>
<text text-anchor="start" x="3183" y="-2379" font-family="Helvetica,sans-Serif" font-size="10.00">* SetRebuildLevel()</text>
<text text-anchor="start" x="3183" y="-2368" font-family="Helvetica,sans-Serif" font-size="10.00">* GetRebuildLevel()</text>
<text text-anchor="start" x="3183" y="-2357" font-family="Helvetica,sans-Serif" font-size="10.00">* SetStiffnessMatrixIsBuilt()</text>
<text text-anchor="start" x="3183" y="-2346" font-family="Helvetica,sans-Serif" font-size="10.00">* GetStiffnessMatrixIsBuilt()</text>
<text text-anchor="start" x="3183" y="-2335" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="3183" y="-2324" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="3183" y="-2313" font-family="Helvetica,sans-Serif" font-size="10.00">* ImplicitSolvingStrategy()</text>
</a>
</g>
</g>
<!-- Node1&#45;&gt;Node10 -->
<g id="edge7" class="edge">
<title>Node1&#45;&gt;Node10</title>
<path fill="none" stroke="#63b8ff" d="M3320.95,-2966.27C3312.93,-2911.77 3304.66,-2855.55 3296.9,-2802.85"/>
<polygon fill="none" stroke="#63b8ff" points="3317.46,-2966.62 3322.38,-2976.01 3324.39,-2965.61 3317.46,-2966.62"/>
</g>
<!-- Node61 -->
<g id="node46" class="node">
<title>Node61</title>
<g id="a_node46"><a xlink:href="../../da/dbb/class_kratos_1_1_structure_adjoint_sensitivity_strategy.html" target="_top" xlink:title=" ">
<polygon fill="white" stroke="#666666" points="3364,-2405 3364,-2704 3579,-2704 3579,-2405 3364,-2405"/>
<text text-anchor="start" x="3372" y="-2692" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::StructureAdjoint</text>
<text text-anchor="start" x="3372" y="-2681" font-family="Helvetica,sans-Serif" font-size="10.00">SensitivityStrategy&lt; TSparse</text>
<text text-anchor="middle" x="3471.5" y="-2670" font-family="Helvetica,sans-Serif" font-size="10.00">Space, TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="#666666" points="3364,-2663 3579,-2663"/>
<text text-anchor="middle" x="3471.5" y="-2651" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="3364,-2644 3579,-2644"/>
<text text-anchor="start" x="3372" y="-2632" font-family="Helvetica,sans-Serif" font-size="10.00">+ StructureAdjointSensitivity</text>
<text text-anchor="start" x="3372" y="-2621" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="3372" y="-2610" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~StructureAdjointSensitivity</text>
<text text-anchor="start" x="3372" y="-2599" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="3372" y="-2588" font-family="Helvetica,sans-Serif" font-size="10.00">+ ComputeStrainEnergySensitivities()</text>
<text text-anchor="start" x="3372" y="-2577" font-family="Helvetica,sans-Serif" font-size="10.00">+ ComputeVolumeFractionSensitivities()</text>
<text text-anchor="start" x="3372" y="-2566" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="3372" y="-2555" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemePointerType</text>
<text text-anchor="start" x="3372" y="-2544" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolverPointerType</text>
<text text-anchor="start" x="3372" y="-2533" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="3372" y="-2522" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="3372" y="-2511" font-family="Helvetica,sans-Serif" font-size="10.00">* mr_structure_model_part</text>
<text text-anchor="start" x="3372" y="-2500" font-family="Helvetica,sans-Serif" font-size="10.00">* mpAdjointModelPart</text>
<text text-anchor="start" x="3372" y="-2489" font-family="Helvetica,sans-Serif" font-size="10.00">* mpStrategy</text>
<text text-anchor="start" x="3372" y="-2478" font-family="Helvetica,sans-Serif" font-size="10.00">* m_dimension</text>
<text text-anchor="start" x="3372" y="-2467" font-family="Helvetica,sans-Serif" font-size="10.00">* StructureAdjointSensitivity</text>
<text text-anchor="start" x="3372" y="-2456" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="3372" y="-2445" font-family="Helvetica,sans-Serif" font-size="10.00">* ~StructureAdjointSensitivity</text>
<text text-anchor="start" x="3372" y="-2434" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="3372" y="-2423" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeStrainEnergySensitivities()</text>
<text text-anchor="start" x="3372" y="-2412" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeVolumeFractionSensitivities()</text>
</a>
</g>
</g>
<!-- Node1&#45;&gt;Node61 -->
<g id="edge45" class="edge">
<title>Node1&#45;&gt;Node61</title>
<path fill="none" stroke="#63b8ff" d="M3410.49,-2966.16C3423.99,-2875.31 3438.19,-2779.68 3449.5,-2703.58"/>
<polygon fill="none" stroke="#63b8ff" points="3407.04,-2965.6 3409.03,-2976.01 3413.96,-2966.63 3407.04,-2965.6"/>
</g>
<!-- Node62 -->
<g id="node47" class="node">
<title>Node62</title>
<g id="a_node47"><a xlink:href="../../db/db7/class_kratos_1_1_v_p_strategy.html" target="_top" xlink:title=" ">
<polygon fill="white" stroke="#666666" points="6287.5,-2168.5 6287.5,-2940.5 6499.5,-2940.5 6499.5,-2168.5 6287.5,-2168.5"/>
<text text-anchor="start" x="6295.5" y="-2928.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::VPStrategy</text>
<text text-anchor="start" x="6295.5" y="-2917.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="6393.5" y="-2906.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="#666666" points="6287.5,-2899.5 6499.5,-2899.5"/>
<text text-anchor="middle" x="6393.5" y="-2887.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="6287.5,-2880.5 6499.5,-2880.5"/>
<text text-anchor="start" x="6295.5" y="-2868.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ VPStrategy()</text>
<text text-anchor="start" x="6295.5" y="-2857.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ VPStrategy()</text>
<text text-anchor="start" x="6295.5" y="-2846.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~VPStrategy()</text>
<text text-anchor="start" x="6295.5" y="-2835.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="6295.5" y="-2824.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="6295.5" y="-2813.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="6295.5" y="-2802.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="6295.5" y="-2791.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ UpdateTopology()</text>
<text text-anchor="start" x="6295.5" y="-2780.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetBlockedAndIsolatedFlags()</text>
<text text-anchor="start" x="6295.5" y="-2769.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculatePressureVelocity()</text>
<text text-anchor="start" x="6295.5" y="-2758.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="6295.5" y="-2747.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="6295.5" y="-2736.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="6295.5" y="-2725.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="6295.5" y="-2714.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="6295.5" y="-2703.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SolveMomentumIteration()</text>
<text text-anchor="start" x="6295.5" y="-2692.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SolveContinuityIteration()</text>
<text text-anchor="start" x="6295.5" y="-2681.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ComputeErrorL2Norm()</text>
<text text-anchor="start" x="6295.5" y="-2670.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ComputeErrorL2NormCasePoiseuille()</text>
<text text-anchor="start" x="6295.5" y="-2659.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ComputeVelocityNorm()</text>
<text text-anchor="start" x="6295.5" y="-2648.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ComputePressureNorm()</text>
<text text-anchor="start" x="6295.5" y="-2637.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckVelocityConvergence()</text>
<text text-anchor="start" x="6295.5" y="-2626.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckPressureConvergence()</text>
<text text-anchor="start" x="6295.5" y="-2615.5" font-family="Helvetica,sans-Serif" font-size="10.00"># FixTimeStepMomentum()</text>
<text text-anchor="start" x="6295.5" y="-2604.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckMomentumConvergence()</text>
<text text-anchor="start" x="6295.5" y="-2593.5" font-family="Helvetica,sans-Serif" font-size="10.00"># FixTimeStepContinuity()</text>
<text text-anchor="start" x="6295.5" y="-2582.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckContinuityConvergence()</text>
<text text-anchor="start" x="6295.5" y="-2571.5" font-family="Helvetica,sans-Serif" font-size="10.00"># InitializeStrategy()</text>
<text text-anchor="start" x="6295.5" y="-2560.5" font-family="Helvetica,sans-Serif" font-size="10.00"># operator=()</text>
<text text-anchor="start" x="6295.5" y="-2549.5" font-family="Helvetica,sans-Serif" font-size="10.00"># VPStrategy()</text>
<text text-anchor="start" x="6295.5" y="-2538.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="6295.5" y="-2527.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolverSettingsType</text>
<text text-anchor="start" x="6295.5" y="-2516.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="6295.5" y="-2505.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="6295.5" y="-2494.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VPStrategy()</text>
<text text-anchor="start" x="6295.5" y="-2483.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VPStrategy()</text>
<text text-anchor="start" x="6295.5" y="-2472.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~VPStrategy()</text>
<text text-anchor="start" x="6295.5" y="-2461.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="6295.5" y="-2450.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="6295.5" y="-2439.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="6295.5" y="-2428.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="6295.5" y="-2417.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateTopology()</text>
<text text-anchor="start" x="6295.5" y="-2406.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetBlockedAndIsolatedFlags()</text>
<text text-anchor="start" x="6295.5" y="-2395.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculatePressureVelocity()</text>
<text text-anchor="start" x="6295.5" y="-2384.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="6295.5" y="-2373.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="6295.5" y="-2362.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="6295.5" y="-2351.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="6295.5" y="-2340.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="6295.5" y="-2329.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveMomentumIteration()</text>
<text text-anchor="start" x="6295.5" y="-2318.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveContinuityIteration()</text>
<text text-anchor="start" x="6295.5" y="-2307.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeErrorL2Norm()</text>
<text text-anchor="start" x="6295.5" y="-2296.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeErrorL2NormCasePoiseuille()</text>
<text text-anchor="start" x="6295.5" y="-2285.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeVelocityNorm()</text>
<text text-anchor="start" x="6295.5" y="-2274.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputePressureNorm()</text>
<text text-anchor="start" x="6295.5" y="-2263.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckVelocityConvergence()</text>
<text text-anchor="start" x="6295.5" y="-2252.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckPressureConvergence()</text>
<text text-anchor="start" x="6295.5" y="-2241.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FixTimeStepMomentum()</text>
<text text-anchor="start" x="6295.5" y="-2230.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckMomentumConvergence()</text>
<text text-anchor="start" x="6295.5" y="-2219.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FixTimeStepContinuity()</text>
<text text-anchor="start" x="6295.5" y="-2208.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckContinuityConvergence()</text>
<text text-anchor="start" x="6295.5" y="-2197.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeStrategy()</text>
<text text-anchor="start" x="6295.5" y="-2186.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="6295.5" y="-2175.5" font-family="Helvetica,sans-Serif" font-size="10.00">* VPStrategy()</text>
</a>
</g>
</g>
<!-- Node1&#45;&gt;Node62 -->
<g id="edge46" class="edge">
<title>Node1&#45;&gt;Node62</title>
<path fill="none" stroke="#63b8ff" d="M3467.06,-3245.07C3927.64,-3136.54 5818.01,-2691.11 6287.55,-2580.46"/>
<polygon fill="none" stroke="#63b8ff" points="3466.53,-3241.6 3457.6,-3247.3 3468.13,-3248.41 3466.53,-3241.6"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../df/df8/class_kratos_1_1_explicit_solving_strategy_b_f_e_c_c.html" target="_top" xlink:title="Explicit Back&#45;and&#45;Forth Error Compensation Correction time&#45;integration scheme.">
<polygon fill="white" stroke="#666666" points="12.5,-1194.5 12.5,-1867.5 224.5,-1867.5 224.5,-1194.5 12.5,-1194.5"/>
<text text-anchor="start" x="20.5" y="-1855.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ExplicitSolvingStrategy</text>
<text text-anchor="middle" x="118.5" y="-1844.5" font-family="Helvetica,sans-Serif" font-size="10.00">BFECC&lt; TSparseSpace, TDenseSpace &gt;</text>
<polyline fill="none" stroke="#666666" points="12.5,-1837.5 224.5,-1837.5"/>
<text text-anchor="middle" x="118.5" y="-1825.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="12.5,-1818.5 224.5,-1818.5"/>
<text text-anchor="start" x="20.5" y="-1806.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="20.5" y="-1795.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="20.5" y="-1784.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="20.5" y="-1773.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="20.5" y="-1762.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SolveWithLumpedMassMatrix()</text>
<text text-anchor="start" x="20.5" y="-1751.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CopySolutionStepData()</text>
<text text-anchor="start" x="20.5" y="-1740.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ExtractSolutionStepData()</text>
<text text-anchor="start" x="20.5" y="-1729.5" font-family="Helvetica,sans-Serif" font-size="10.00"># InitializeBFECCForwardSubstep()</text>
<text text-anchor="start" x="20.5" y="-1718.5" font-family="Helvetica,sans-Serif" font-size="10.00"># FinalizeBFECCForwardSubstep()</text>
<text text-anchor="start" x="20.5" y="-1707.5" font-family="Helvetica,sans-Serif" font-size="10.00"># InitializeBFECCBackwardSubstep()</text>
<text text-anchor="start" x="20.5" y="-1696.5" font-family="Helvetica,sans-Serif" font-size="10.00"># FinalizeBFECCBackwardSubstep()</text>
<text text-anchor="start" x="20.5" y="-1685.5" font-family="Helvetica,sans-Serif" font-size="10.00"># InitializeBFECCFinalSubstep()</text>
<text text-anchor="start" x="20.5" y="-1674.5" font-family="Helvetica,sans-Serif" font-size="10.00"># FinalizeBFECCFinalSubstep()</text>
<text text-anchor="start" x="20.5" y="-1663.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PerformSubstep()</text>
<text text-anchor="start" x="20.5" y="-1652.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CorrectErrorAfterForwards</text>
<text text-anchor="start" x="20.5" y="-1641.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndBackwards()</text>
<text text-anchor="start" x="20.5" y="-1630.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Substep</text>
<text text-anchor="start" x="20.5" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="20.5" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvingStrategyType</text>
<text text-anchor="start" x="20.5" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="20.5" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClassType</text>
<text text-anchor="start" x="20.5" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitBuilderType</text>
<text text-anchor="start" x="20.5" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofType</text>
<text text-anchor="start" x="20.5" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="20.5" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="20.5" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="20.5" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="20.5" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitSolvingStrategyBFECC()</text>
<text text-anchor="start" x="20.5" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitSolvingStrategyBFECC()</text>
<text text-anchor="start" x="20.5" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitSolvingStrategyBFECC()</text>
<text text-anchor="start" x="20.5" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitSolvingStrategyBFECC()</text>
<text text-anchor="start" x="20.5" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="20.5" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitSolvingStrategyBFECC()</text>
<text text-anchor="start" x="20.5" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ExplicitSolvingStrategy</text>
<text text-anchor="start" x="20.5" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">BFECC()</text>
<text text-anchor="start" x="20.5" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefaultParameters()</text>
<text text-anchor="start" x="20.5" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="20.5" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Name()</text>
<text text-anchor="start" x="20.5" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="20.5" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="20.5" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="20.5" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="20.5" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveWithLumpedMassMatrix()</text>
<text text-anchor="start" x="20.5" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CopySolutionStepData()</text>
<text text-anchor="start" x="20.5" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExtractSolutionStepData()</text>
<text text-anchor="start" x="20.5" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeBFECCForwardSubstep()</text>
<text text-anchor="start" x="20.5" y="-1300.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeBFECCForwardSubstep()</text>
<text text-anchor="start" x="20.5" y="-1289.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeBFECCBackwardSubstep()</text>
<text text-anchor="start" x="20.5" y="-1278.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeBFECCBackwardSubstep()</text>
<text text-anchor="start" x="20.5" y="-1267.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeBFECCFinalSubstep()</text>
<text text-anchor="start" x="20.5" y="-1256.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeBFECCFinalSubstep()</text>
<text text-anchor="start" x="20.5" y="-1245.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PerformSubstep()</text>
<text text-anchor="start" x="20.5" y="-1234.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CorrectErrorAfterForwards</text>
<text text-anchor="start" x="20.5" y="-1223.5" font-family="Helvetica,sans-Serif" font-size="10.00">AndBackwards()</text>
<text text-anchor="start" x="20.5" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSubstep()</text>
<text text-anchor="start" x="20.5" y="-1201.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSubstep()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node3 -->
<g id="edge2" class="edge">
<title>Node2&#45;&gt;Node3</title>
<path fill="none" stroke="#63b8ff" d="M284.99,-2267.35C273.94,-2222.1 262.79,-2175.81 252.5,-2132 232.39,-2046.41 211.34,-1953.78 192.05,-1867.5"/>
<polygon fill="none" stroke="#63b8ff" points="281.59,-2268.16 287.36,-2277.05 288.39,-2266.5 281.59,-2268.16"/>
</g>
<!-- Node6 -->
<g id="node5" class="node">
<title>Node6</title>
<g id="a_node5"><a xlink:href="../../de/d18/class_kratos_1_1_explicit_solving_strategy_runge_kutta.html" target="_top" xlink:title="Family of explicit Runge&#45;Kutta schemes.">
<polygon fill="white" stroke="#666666" points="262,-1112 262,-1950 451,-1950 451,-1112 262,-1112"/>
<text text-anchor="start" x="270" y="-1938" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ExplicitSolvingStrategy</text>
<text text-anchor="start" x="270" y="-1927" font-family="Helvetica,sans-Serif" font-size="10.00">RungeKutta&lt; TSparseSpace,</text>
<text text-anchor="middle" x="356.5" y="-1916" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TButcherTableau &gt;</text>
<polyline fill="none" stroke="#666666" points="262,-1909 451,-1909"/>
<text text-anchor="start" x="270" y="-1897" font-family="Helvetica,sans-Serif" font-size="10.00"># mButcherTableau</text>
<polyline fill="none" stroke="#666666" points="262,-1890 451,-1890"/>
<text text-anchor="start" x="270" y="-1878" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExplicitSolvingStrategyRunge</text>
<text text-anchor="start" x="270" y="-1867" font-family="Helvetica,sans-Serif" font-size="10.00">Kutta()</text>
<text text-anchor="start" x="270" y="-1856" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExplicitSolvingStrategyRunge</text>
<text text-anchor="start" x="270" y="-1845" font-family="Helvetica,sans-Serif" font-size="10.00">Kutta()</text>
<text text-anchor="start" x="270" y="-1834" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExplicitSolvingStrategyRunge</text>
<text text-anchor="start" x="270" y="-1823" font-family="Helvetica,sans-Serif" font-size="10.00">Kutta()</text>
<text text-anchor="start" x="270" y="-1812" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExplicitSolvingStrategyRunge</text>
<text text-anchor="start" x="270" y="-1801" font-family="Helvetica,sans-Serif" font-size="10.00">Kutta()</text>
<text text-anchor="start" x="270" y="-1790" font-family="Helvetica,sans-Serif" font-size="10.00">+ Create()</text>
<text text-anchor="start" x="270" y="-1779" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExplicitSolvingStrategyRunge</text>
<text text-anchor="start" x="270" y="-1768" font-family="Helvetica,sans-Serif" font-size="10.00">Kutta()</text>
<text text-anchor="start" x="270" y="-1757" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~ExplicitSolvingStrategy</text>
<text text-anchor="start" x="270" y="-1746" font-family="Helvetica,sans-Serif" font-size="10.00">RungeKutta()</text>
<text text-anchor="start" x="270" y="-1735" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDefaultParameters()</text>
<text text-anchor="start" x="270" y="-1724" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="270" y="-1713" font-family="Helvetica,sans-Serif" font-size="10.00"># SolveWithLumpedMassMatrix()</text>
<text text-anchor="start" x="270" y="-1702" font-family="Helvetica,sans-Serif" font-size="10.00"># InitializeRungeKuttaIntermediate</text>
<text text-anchor="start" x="270" y="-1691" font-family="Helvetica,sans-Serif" font-size="10.00">SubStep()</text>
<text text-anchor="start" x="270" y="-1680" font-family="Helvetica,sans-Serif" font-size="10.00"># FinalizeRungeKuttaIntermediate</text>
<text text-anchor="start" x="270" y="-1669" font-family="Helvetica,sans-Serif" font-size="10.00">SubStep()</text>
<text text-anchor="start" x="270" y="-1658" font-family="Helvetica,sans-Serif" font-size="10.00"># InitializeRungeKuttaLast</text>
<text text-anchor="start" x="270" y="-1647" font-family="Helvetica,sans-Serif" font-size="10.00">SubStep()</text>
<text text-anchor="start" x="270" y="-1636" font-family="Helvetica,sans-Serif" font-size="10.00"># FinalizeRungeKuttaLastSub</text>
<text text-anchor="start" x="270" y="-1625" font-family="Helvetica,sans-Serif" font-size="10.00">Step()</text>
<text text-anchor="start" x="270" y="-1614" font-family="Helvetica,sans-Serif" font-size="10.00"># PerformRungeKuttaIntermediate</text>
<text text-anchor="start" x="270" y="-1603" font-family="Helvetica,sans-Serif" font-size="10.00">SubStep()</text>
<text text-anchor="start" x="270" y="-1592" font-family="Helvetica,sans-Serif" font-size="10.00"># PerformRungeKuttaLastSub</text>
<text text-anchor="start" x="270" y="-1581" font-family="Helvetica,sans-Serif" font-size="10.00">Step()</text>
<text text-anchor="start" x="270" y="-1570" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvingStrategyType</text>
<text text-anchor="start" x="270" y="-1559" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="270" y="-1548" font-family="Helvetica,sans-Serif" font-size="10.00">* ClassType</text>
<text text-anchor="start" x="270" y="-1537" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitBuilderType</text>
<text text-anchor="start" x="270" y="-1526" font-family="Helvetica,sans-Serif" font-size="10.00">* DofType</text>
<text text-anchor="start" x="270" y="-1515" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="270" y="-1504" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="270" y="-1493" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="270" y="-1482" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="270" y="-1471" font-family="Helvetica,sans-Serif" font-size="10.00">* mButcherTableau</text>
<text text-anchor="start" x="270" y="-1460" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitSolvingStrategyRunge</text>
<text text-anchor="start" x="270" y="-1449" font-family="Helvetica,sans-Serif" font-size="10.00">Kutta()</text>
<text text-anchor="start" x="270" y="-1438" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitSolvingStrategyRunge</text>
<text text-anchor="start" x="270" y="-1427" font-family="Helvetica,sans-Serif" font-size="10.00">Kutta()</text>
<text text-anchor="start" x="270" y="-1416" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitSolvingStrategyRunge</text>
<text text-anchor="start" x="270" y="-1405" font-family="Helvetica,sans-Serif" font-size="10.00">Kutta()</text>
<text text-anchor="start" x="270" y="-1394" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitSolvingStrategyRunge</text>
<text text-anchor="start" x="270" y="-1383" font-family="Helvetica,sans-Serif" font-size="10.00">Kutta()</text>
<text text-anchor="start" x="270" y="-1372" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="270" y="-1361" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitSolvingStrategyRunge</text>
<text text-anchor="start" x="270" y="-1350" font-family="Helvetica,sans-Serif" font-size="10.00">Kutta()</text>
<text text-anchor="start" x="270" y="-1339" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ExplicitSolvingStrategy</text>
<text text-anchor="start" x="270" y="-1328" font-family="Helvetica,sans-Serif" font-size="10.00">RungeKutta()</text>
<text text-anchor="start" x="270" y="-1317" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefaultParameters()</text>
<text text-anchor="start" x="270" y="-1306" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="270" y="-1295" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="270" y="-1284" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="270" y="-1273" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="270" y="-1262" font-family="Helvetica,sans-Serif" font-size="10.00">* Name()</text>
<text text-anchor="start" x="270" y="-1251" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveWithLumpedMassMatrix()</text>
<text text-anchor="start" x="270" y="-1240" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeRungeKuttaIntermediate</text>
<text text-anchor="start" x="270" y="-1229" font-family="Helvetica,sans-Serif" font-size="10.00">SubStep()</text>
<text text-anchor="start" x="270" y="-1218" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeRungeKuttaIntermediate</text>
<text text-anchor="start" x="270" y="-1207" font-family="Helvetica,sans-Serif" font-size="10.00">SubStep()</text>
<text text-anchor="start" x="270" y="-1196" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeRungeKuttaLast</text>
<text text-anchor="start" x="270" y="-1185" font-family="Helvetica,sans-Serif" font-size="10.00">SubStep()</text>
<text text-anchor="start" x="270" y="-1174" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeRungeKuttaLastSub</text>
<text text-anchor="start" x="270" y="-1163" font-family="Helvetica,sans-Serif" font-size="10.00">Step()</text>
<text text-anchor="start" x="270" y="-1152" font-family="Helvetica,sans-Serif" font-size="10.00">* PerformRungeKuttaIntermediate</text>
<text text-anchor="start" x="270" y="-1141" font-family="Helvetica,sans-Serif" font-size="10.00">SubStep()</text>
<text text-anchor="start" x="270" y="-1130" font-family="Helvetica,sans-Serif" font-size="10.00">* PerformRungeKuttaLastSub</text>
<text text-anchor="start" x="270" y="-1119" font-family="Helvetica,sans-Serif" font-size="10.00">Step()</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node6 -->
<g id="edge4" class="edge">
<title>Node2&#45;&gt;Node6</title>
<path fill="none" stroke="#63b8ff" d="M356.5,-2267.42C356.5,-2168.87 356.5,-2056.39 356.5,-1949.54"/>
<polygon fill="none" stroke="#63b8ff" points="353,-2267.24 356.5,-2277.24 360,-2267.24 353,-2267.24"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="../../dd/d7c/class_kratos_1_1_compressible_navier_stokes_explicit_solving_strategy.html" target="_top" xlink:title=" ">
<polygon fill="#fff0f0" stroke="red" points="0,-0.5 0,-893.5 199,-893.5 199,-0.5 0,-0.5"/>
<text text-anchor="start" x="8" y="-881.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::CompressibleNavier</text>
<text text-anchor="start" x="8" y="-870.5" font-family="Helvetica,sans-Serif" font-size="10.00">StokesExplicitSolvingStrategy</text>
<text text-anchor="start" x="8" y="-859.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; ExplicitSolvingStrategyBFECC</text>
<text text-anchor="middle" x="99.5" y="-848.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace &gt; &gt;</text>
<polyline fill="none" stroke="red" points="0,-841.5 199,-841.5"/>
<text text-anchor="middle" x="99.5" y="-829.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="red" points="0,-822.5 199,-822.5"/>
<text text-anchor="start" x="8" y="-810.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CompressibleNavierStokes</text>
<text text-anchor="start" x="8" y="-799.5" font-family="Helvetica,sans-Serif" font-size="10.00">ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="8" y="-788.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CompressibleNavierStokes</text>
<text text-anchor="start" x="8" y="-777.5" font-family="Helvetica,sans-Serif" font-size="10.00">ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="8" y="-766.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CompressibleNavierStokes</text>
<text text-anchor="start" x="8" y="-755.5" font-family="Helvetica,sans-Serif" font-size="10.00">ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="8" y="-744.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CompressibleNavierStokes</text>
<text text-anchor="start" x="8" y="-733.5" font-family="Helvetica,sans-Serif" font-size="10.00">ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="8" y="-722.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~CompressibleNavierStokes</text>
<text text-anchor="start" x="8" y="-711.5" font-family="Helvetica,sans-Serif" font-size="10.00">ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="8" y="-700.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="8" y="-689.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDefaultParameters()</text>
<text text-anchor="start" x="8" y="-678.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AssignSettings()</text>
<text text-anchor="start" x="8" y="-667.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="8" y="-656.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="8" y="-645.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="8" y="-634.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="8" y="-623.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="8" y="-612.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="8" y="-601.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SetUpShockCapturing()</text>
<text text-anchor="start" x="8" y="-590.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateOrthogonalSubScales</text>
<text text-anchor="start" x="8" y="-579.5" font-family="Helvetica,sans-Serif" font-size="10.00">Projection()</text>
<text text-anchor="start" x="8" y="-568.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateNonConservative</text>
<text text-anchor="start" x="8" y="-557.5" font-family="Helvetica,sans-Serif" font-size="10.00">Magnitudes()</text>
<text text-anchor="start" x="8" y="-546.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ApplySlipCondition()</text>
<text text-anchor="start" x="8" y="-535.5" font-family="Helvetica,sans-Serif" font-size="10.00"># InitializeEverySubstep()</text>
<text text-anchor="start" x="8" y="-524.5" font-family="Helvetica,sans-Serif" font-size="10.00"># FinalizeEverySubstep()</text>
<text text-anchor="start" x="8" y="-513.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ShockCapturingEnabled()</text>
<text text-anchor="start" x="8" y="-502.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ConservativeMagnitudeCalculation</text>
<text text-anchor="start" x="8" y="-491.5" font-family="Helvetica,sans-Serif" font-size="10.00">Enabled()</text>
<text text-anchor="start" x="8" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SlipConditionEnabled()</text>
<text text-anchor="start" x="8" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetShockCapturingProcess()</text>
<text text-anchor="start" x="8" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="8" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitBuilderType</text>
<text text-anchor="start" x="8" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="8" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFirstStep</text>
<text text-anchor="start" x="8" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mApplySlipCondition</text>
<text text-anchor="start" x="8" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mCalculateNonConservative</text>
<text text-anchor="start" x="8" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">Magnitudes</text>
<text text-anchor="start" x="8" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpShockCapturingProcess</text>
<text text-anchor="start" x="8" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CompressibleNavierStokes</text>
<text text-anchor="start" x="8" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="8" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CompressibleNavierStokes</text>
<text text-anchor="start" x="8" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="8" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CompressibleNavierStokes</text>
<text text-anchor="start" x="8" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="8" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CompressibleNavierStokes</text>
<text text-anchor="start" x="8" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="8" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~CompressibleNavierStokes</text>
<text text-anchor="start" x="8" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="8" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="8" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefaultParameters()</text>
<text text-anchor="start" x="8" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="8" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="8" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="8" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="8" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="8" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="8" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="8" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetUpShockCapturing()</text>
<text text-anchor="start" x="8" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateOrthogonalSubScales</text>
<text text-anchor="start" x="8" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">Projection()</text>
<text text-anchor="start" x="8" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateNonConservative</text>
<text text-anchor="start" x="8" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">Magnitudes()</text>
<text text-anchor="start" x="8" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ApplySlipCondition()</text>
<text text-anchor="start" x="8" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeEverySubstep()</text>
<text text-anchor="start" x="8" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeEverySubstep()</text>
<text text-anchor="start" x="8" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ShockCapturingEnabled()</text>
<text text-anchor="start" x="8" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConservativeMagnitudeCalculation</text>
<text text-anchor="start" x="8" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">Enabled()</text>
<text text-anchor="start" x="8" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SlipConditionEnabled()</text>
<text text-anchor="start" x="8" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetShockCapturingProcess()</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node4 -->
<g id="edge3" class="edge">
<title>Node3&#45;&gt;Node4</title>
<path fill="none" stroke="#63b8ff" d="M112.41,-1183.2C110.79,-1091.01 109.02,-990.14 107.32,-893.48"/>
<polygon fill="none" stroke="#63b8ff" points="108.91,-1183.24 112.59,-1193.18 115.91,-1183.12 108.91,-1183.24"/>
</g>
<!-- Node7 -->
<g id="node6" class="node">
<title>Node7</title>
<g id="a_node6"><a xlink:href="../../dd/d7c/class_kratos_1_1_compressible_navier_stokes_explicit_solving_strategy.html" target="_top" xlink:title=" ">
<polygon fill="#fff0f0" stroke="red" points="217.5,-0.5 217.5,-893.5 495.5,-893.5 495.5,-0.5 217.5,-0.5"/>
<text text-anchor="start" x="225.5" y="-881.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::CompressibleNavier</text>
<text text-anchor="start" x="225.5" y="-870.5" font-family="Helvetica,sans-Serif" font-size="10.00">StokesExplicitSolvingStrategy</text>
<text text-anchor="start" x="225.5" y="-859.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; ExplicitSolvingStrategyRungeKutta</text>
<text text-anchor="middle" x="356.5" y="-848.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace, TButcherTableau &gt; &gt;</text>
<polyline fill="none" stroke="red" points="217.5,-841.5 495.5,-841.5"/>
<text text-anchor="middle" x="356.5" y="-829.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="red" points="217.5,-822.5 495.5,-822.5"/>
<text text-anchor="start" x="225.5" y="-810.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CompressibleNavierStokes</text>
<text text-anchor="start" x="225.5" y="-799.5" font-family="Helvetica,sans-Serif" font-size="10.00">ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="225.5" y="-788.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CompressibleNavierStokes</text>
<text text-anchor="start" x="225.5" y="-777.5" font-family="Helvetica,sans-Serif" font-size="10.00">ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="225.5" y="-766.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CompressibleNavierStokes</text>
<text text-anchor="start" x="225.5" y="-755.5" font-family="Helvetica,sans-Serif" font-size="10.00">ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="225.5" y="-744.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CompressibleNavierStokes</text>
<text text-anchor="start" x="225.5" y="-733.5" font-family="Helvetica,sans-Serif" font-size="10.00">ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="225.5" y="-722.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~CompressibleNavierStokes</text>
<text text-anchor="start" x="225.5" y="-711.5" font-family="Helvetica,sans-Serif" font-size="10.00">ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="225.5" y="-700.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="225.5" y="-689.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDefaultParameters()</text>
<text text-anchor="start" x="225.5" y="-678.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AssignSettings()</text>
<text text-anchor="start" x="225.5" y="-667.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="225.5" y="-656.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="225.5" y="-645.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="225.5" y="-634.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="225.5" y="-623.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="225.5" y="-612.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="225.5" y="-601.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SetUpShockCapturing()</text>
<text text-anchor="start" x="225.5" y="-590.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateOrthogonalSubScales</text>
<text text-anchor="start" x="225.5" y="-579.5" font-family="Helvetica,sans-Serif" font-size="10.00">Projection()</text>
<text text-anchor="start" x="225.5" y="-568.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateNonConservative</text>
<text text-anchor="start" x="225.5" y="-557.5" font-family="Helvetica,sans-Serif" font-size="10.00">Magnitudes()</text>
<text text-anchor="start" x="225.5" y="-546.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ApplySlipCondition()</text>
<text text-anchor="start" x="225.5" y="-535.5" font-family="Helvetica,sans-Serif" font-size="10.00"># InitializeEverySubstep()</text>
<text text-anchor="start" x="225.5" y="-524.5" font-family="Helvetica,sans-Serif" font-size="10.00"># FinalizeEverySubstep()</text>
<text text-anchor="start" x="225.5" y="-513.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ShockCapturingEnabled()</text>
<text text-anchor="start" x="225.5" y="-502.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ConservativeMagnitudeCalculation</text>
<text text-anchor="start" x="225.5" y="-491.5" font-family="Helvetica,sans-Serif" font-size="10.00">Enabled()</text>
<text text-anchor="start" x="225.5" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SlipConditionEnabled()</text>
<text text-anchor="start" x="225.5" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GetShockCapturingProcess()</text>
<text text-anchor="start" x="225.5" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="225.5" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitBuilderType</text>
<text text-anchor="start" x="225.5" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="225.5" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="225.5" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="225.5" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFirstStep</text>
<text text-anchor="start" x="225.5" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mApplySlipCondition</text>
<text text-anchor="start" x="225.5" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mCalculateNonConservative</text>
<text text-anchor="start" x="225.5" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">Magnitudes</text>
<text text-anchor="start" x="225.5" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpShockCapturingProcess</text>
<text text-anchor="start" x="225.5" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CompressibleNavierStokes</text>
<text text-anchor="start" x="225.5" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="225.5" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CompressibleNavierStokes</text>
<text text-anchor="start" x="225.5" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="225.5" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CompressibleNavierStokes</text>
<text text-anchor="start" x="225.5" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="225.5" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CompressibleNavierStokes</text>
<text text-anchor="start" x="225.5" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="225.5" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~CompressibleNavierStokes</text>
<text text-anchor="start" x="225.5" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">ExplicitSolvingStrategy()</text>
<text text-anchor="start" x="225.5" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="225.5" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefaultParameters()</text>
<text text-anchor="start" x="225.5" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="225.5" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="225.5" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="225.5" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="225.5" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="225.5" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="225.5" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="225.5" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetUpShockCapturing()</text>
<text text-anchor="start" x="225.5" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateOrthogonalSubScales</text>
<text text-anchor="start" x="225.5" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">Projection()</text>
<text text-anchor="start" x="225.5" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateNonConservative</text>
<text text-anchor="start" x="225.5" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">Magnitudes()</text>
<text text-anchor="start" x="225.5" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ApplySlipCondition()</text>
<text text-anchor="start" x="225.5" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeEverySubstep()</text>
<text text-anchor="start" x="225.5" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeEverySubstep()</text>
<text text-anchor="start" x="225.5" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ShockCapturingEnabled()</text>
<text text-anchor="start" x="225.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConservativeMagnitudeCalculation</text>
<text text-anchor="start" x="225.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">Enabled()</text>
<text text-anchor="start" x="225.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SlipConditionEnabled()</text>
<text text-anchor="start" x="225.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetShockCapturingProcess()</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node7 -->
<g id="edge5" class="edge">
<title>Node6&#45;&gt;Node7</title>
<path fill="none" stroke="#63b8ff" d="M356.5,-1100.69C356.5,-1032.51 356.5,-961.84 356.5,-893.3"/>
<polygon fill="none" stroke="#63b8ff" points="353,-1100.54 356.5,-1110.54 360,-1100.54 353,-1100.54"/>
</g>
<!-- Node9 -->
<g id="node7" class="node">
<title>Node9</title>
<g id="a_node7"><a xlink:href="../../d6/d33/class_kratos_1_1_explicit_solving_strategy_runge_kutta4_convection_diffusion.html" target="_top" xlink:title="This strategy adds the orthogonal subgrid projections computation to the base explicit runge kutta 4 ...">
<polygon fill="white" stroke="#666666" points="514,-171 514,-723 703,-723 703,-171 514,-171"/>
<text text-anchor="start" x="522" y="-711" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ExplicitSolvingStrategy</text>
<text text-anchor="start" x="522" y="-700" font-family="Helvetica,sans-Serif" font-size="10.00">RungeKutta4ConvectionDiffusion</text>
<text text-anchor="middle" x="608.5" y="-689" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace &gt;</text>
<polyline fill="none" stroke="#666666" points="514,-682 703,-682"/>
<text text-anchor="middle" x="608.5" y="-670" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="514,-663 703,-663"/>
<text text-anchor="start" x="522" y="-651" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExplicitSolvingStrategyRunge</text>
<text text-anchor="start" x="522" y="-640" font-family="Helvetica,sans-Serif" font-size="10.00">Kutta4ConvectionDiffusion()</text>
<text text-anchor="start" x="522" y="-629" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExplicitSolvingStrategyRunge</text>
<text text-anchor="start" x="522" y="-618" font-family="Helvetica,sans-Serif" font-size="10.00">Kutta4ConvectionDiffusion()</text>
<text text-anchor="start" x="522" y="-607" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExplicitSolvingStrategyRunge</text>
<text text-anchor="start" x="522" y="-596" font-family="Helvetica,sans-Serif" font-size="10.00">Kutta4ConvectionDiffusion()</text>
<text text-anchor="start" x="522" y="-585" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExplicitSolvingStrategyRunge</text>
<text text-anchor="start" x="522" y="-574" font-family="Helvetica,sans-Serif" font-size="10.00">Kutta4ConvectionDiffusion()</text>
<text text-anchor="start" x="522" y="-563" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~ExplicitSolvingStrategy</text>
<text text-anchor="start" x="522" y="-552" font-family="Helvetica,sans-Serif" font-size="10.00">RungeKutta4ConvectionDiffusion()</text>
<text text-anchor="start" x="522" y="-541" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="522" y="-530" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="522" y="-519" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="522" y="-508" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="522" y="-497" font-family="Helvetica,sans-Serif" font-size="10.00"># InitializeRungeKuttaIntermediate</text>
<text text-anchor="start" x="522" y="-486" font-family="Helvetica,sans-Serif" font-size="10.00">SubStep()</text>
<text text-anchor="start" x="522" y="-475" font-family="Helvetica,sans-Serif" font-size="10.00"># InitializeRungeKuttaLast</text>
<text text-anchor="start" x="522" y="-464" font-family="Helvetica,sans-Serif" font-size="10.00">SubStep()</text>
<text text-anchor="start" x="522" y="-453" font-family="Helvetica,sans-Serif" font-size="10.00"># SolveSolutionStep()</text>
<text text-anchor="start" x="522" y="-442" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="522" y="-431" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitBuilderType</text>
<text text-anchor="start" x="522" y="-420" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="522" y="-409" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="522" y="-398" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="522" y="-387" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitSolvingStrategyRunge</text>
<text text-anchor="start" x="522" y="-376" font-family="Helvetica,sans-Serif" font-size="10.00">Kutta4ConvectionDiffusion()</text>
<text text-anchor="start" x="522" y="-365" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitSolvingStrategyRunge</text>
<text text-anchor="start" x="522" y="-354" font-family="Helvetica,sans-Serif" font-size="10.00">Kutta4ConvectionDiffusion()</text>
<text text-anchor="start" x="522" y="-343" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitSolvingStrategyRunge</text>
<text text-anchor="start" x="522" y="-332" font-family="Helvetica,sans-Serif" font-size="10.00">Kutta4ConvectionDiffusion()</text>
<text text-anchor="start" x="522" y="-321" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitSolvingStrategyRunge</text>
<text text-anchor="start" x="522" y="-310" font-family="Helvetica,sans-Serif" font-size="10.00">Kutta4ConvectionDiffusion()</text>
<text text-anchor="start" x="522" y="-299" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ExplicitSolvingStrategy</text>
<text text-anchor="start" x="522" y="-288" font-family="Helvetica,sans-Serif" font-size="10.00">RungeKutta4ConvectionDiffusion()</text>
<text text-anchor="start" x="522" y="-277" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="522" y="-266" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="522" y="-255" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="522" y="-244" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="522" y="-233" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeRungeKuttaIntermediate</text>
<text text-anchor="start" x="522" y="-222" font-family="Helvetica,sans-Serif" font-size="10.00">SubStep()</text>
<text text-anchor="start" x="522" y="-211" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeRungeKuttaLast</text>
<text text-anchor="start" x="522" y="-200" font-family="Helvetica,sans-Serif" font-size="10.00">SubStep()</text>
<text text-anchor="start" x="522" y="-189" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="522" y="-178" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateOSSNodalProjections()</text>
</a>
</g>
</g>
<!-- Node6&#45;&gt;Node9 -->
<g id="edge6" class="edge">
<title>Node6&#45;&gt;Node9</title>
<path fill="none" stroke="#63b8ff" d="M392,-1101.3C407.88,-1041.29 429.96,-982.33 460.5,-930 473.24,-908.18 491.14,-915.45 504.5,-894 536.55,-842.54 558.74,-782.17 574.09,-722.76"/>
<polygon fill="none" stroke="#63b8ff" points="388.7,-1100.1 389.59,-1110.66 395.48,-1101.85 388.7,-1100.1"/>
</g>
<!-- Node11 -->
<g id="node9" class="node">
<title>Node11</title>
<g id="a_node9"><a xlink:href="../../dc/de4/class_kratos_1_1_adaptive_residual_based_newton_raphson_strategy.html" target="_top" xlink:title="Short class definition.">
<polygon fill="white" stroke="#666666" points="469.5,-1095.5 469.5,-1966.5 655.5,-1966.5 655.5,-1095.5 469.5,-1095.5"/>
<text text-anchor="start" x="477.5" y="-1954.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::AdaptiveResidual</text>
<text text-anchor="start" x="477.5" y="-1943.5" font-family="Helvetica,sans-Serif" font-size="10.00">BasedNewtonRaphsonStrategy</text>
<text text-anchor="start" x="477.5" y="-1932.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="562.5" y="-1921.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="#666666" points="469.5,-1914.5 655.5,-1914.5"/>
<text text-anchor="start" x="477.5" y="-1902.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpScheme</text>
<text text-anchor="start" x="477.5" y="-1891.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpLinearSolver</text>
<text text-anchor="start" x="477.5" y="-1880.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpBuilderAndSolver</text>
<text text-anchor="start" x="477.5" y="-1869.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpConvergenceCriteria</text>
<text text-anchor="start" x="477.5" y="-1858.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpDx</text>
<text text-anchor="start" x="477.5" y="-1847.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpb</text>
<text text-anchor="start" x="477.5" y="-1836.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpA</text>
<text text-anchor="start" x="477.5" y="-1825.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mReformDofSetAtEachStep</text>
<text text-anchor="start" x="477.5" y="-1814.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mCalculateReactionsFlag</text>
<text text-anchor="start" x="477.5" y="-1803.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mSolutionStepIsInitialized</text>
<text text-anchor="start" x="477.5" y="-1792.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 6 more...</text>
<polyline fill="none" stroke="#666666" points="469.5,-1785.5 655.5,-1785.5"/>
<text text-anchor="start" x="477.5" y="-1773.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSystemMatrix()</text>
<text text-anchor="start" x="477.5" y="-1762.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="477.5" y="-1751.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="477.5" y="-1740.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="477.5" y="-1729.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Initialize()</text>
<text text-anchor="start" x="477.5" y="-1718.5" font-family="Helvetica,sans-Serif" font-size="10.00"># InitializeSolutionStep()</text>
<text text-anchor="start" x="477.5" y="-1707.5" font-family="Helvetica,sans-Serif" font-size="10.00"># MaxIterationsExceeded()</text>
<text text-anchor="start" x="477.5" y="-1696.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PrintIncreaseOfDeltaTime()</text>
<text text-anchor="start" x="477.5" y="-1685.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ReductionStrategy()</text>
<text text-anchor="start" x="477.5" y="-1674.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSettings()</text>
<text text-anchor="start" x="477.5" y="-1663.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AdaptiveResidualBasedNewton</text>
<text text-anchor="start" x="477.5" y="-1652.5" font-family="Helvetica,sans-Serif" font-size="10.00">RaphsonStrategy()</text>
<text text-anchor="start" x="477.5" y="-1641.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TConvergenceCriteriaType</text>
<text text-anchor="start" x="477.5" y="-1630.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvingStrategyType</text>
<text text-anchor="start" x="477.5" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="477.5" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClassType</text>
<text text-anchor="start" x="477.5" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TBuilderAndSolverType</text>
<text text-anchor="start" x="477.5" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="477.5" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseSpaceType</text>
<text text-anchor="start" x="477.5" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="477.5" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="477.5" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="477.5" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 6 more...</text>
<text text-anchor="start" x="477.5" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpScheme</text>
<text text-anchor="start" x="477.5" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpLinearSolver</text>
<text text-anchor="start" x="477.5" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpBuilderAndSolver</text>
<text text-anchor="start" x="477.5" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpConvergenceCriteria</text>
<text text-anchor="start" x="477.5" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpDx</text>
<text text-anchor="start" x="477.5" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpb</text>
<text text-anchor="start" x="477.5" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpA</text>
<text text-anchor="start" x="477.5" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mReformDofSetAtEachStep</text>
<text text-anchor="start" x="477.5" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mCalculateReactionsFlag</text>
<text text-anchor="start" x="477.5" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mSolutionStepIsInitialized</text>
<text text-anchor="start" x="477.5" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 6 more...</text>
<text text-anchor="start" x="477.5" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AdaptiveResidualBasedNewton</text>
<text text-anchor="start" x="477.5" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">RaphsonStrategy()</text>
<text text-anchor="start" x="477.5" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AdaptiveResidualBasedNewton</text>
<text text-anchor="start" x="477.5" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">RaphsonStrategy()</text>
<text text-anchor="start" x="477.5" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AdaptiveResidualBasedNewton</text>
<text text-anchor="start" x="477.5" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">RaphsonStrategy()</text>
<text text-anchor="start" x="477.5" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AdaptiveResidualBasedNewton</text>
<text text-anchor="start" x="477.5" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">RaphsonStrategy()</text>
<text text-anchor="start" x="477.5" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~AdaptiveResidualBasedNewton</text>
<text text-anchor="start" x="477.5" y="-1300.5" font-family="Helvetica,sans-Serif" font-size="10.00">RaphsonStrategy()</text>
<text text-anchor="start" x="477.5" y="-1289.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetScheme()</text>
<text text-anchor="start" x="477.5" y="-1278.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetScheme()</text>
<text text-anchor="start" x="477.5" y="-1267.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetBuilderAndSolver()</text>
<text text-anchor="start" x="477.5" y="-1256.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetBuilderAndSolver()</text>
<text text-anchor="start" x="477.5" y="-1245.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetCalculateReactionsFlag()</text>
<text text-anchor="start" x="477.5" y="-1234.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 15 more...</text>
<text text-anchor="start" x="477.5" y="-1223.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSystemMatrix()</text>
<text text-anchor="start" x="477.5" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="477.5" y="-1201.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="477.5" y="-1190.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="477.5" y="-1179.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="477.5" y="-1168.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="477.5" y="-1157.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MaxIterationsExceeded()</text>
<text text-anchor="start" x="477.5" y="-1146.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintIncreaseOfDeltaTime()</text>
<text text-anchor="start" x="477.5" y="-1135.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ReductionStrategy()</text>
<text text-anchor="start" x="477.5" y="-1124.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="477.5" y="-1113.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AdaptiveResidualBasedNewton</text>
<text text-anchor="start" x="477.5" y="-1102.5" font-family="Helvetica,sans-Serif" font-size="10.00">RaphsonStrategy()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node11 -->
<g id="edge8" class="edge">
<title>Node10&#45;&gt;Node11</title>
<path fill="none" stroke="#63b8ff" d="M3163.97,-2552.24C2737.42,-2544.61 1026.88,-2491.7 664.5,-2132 618.57,-2086.41 588.78,-2028.29 570.03,-1966.24"/>
<polygon fill="none" stroke="#63b8ff" points="3163.74,-2555.74 3173.8,-2552.41 3163.86,-2548.74 3163.74,-2555.74"/>
</g>
<!-- Node12 -->
<g id="node10" class="node">
<title>Node12</title>
<g id="a_node10"><a xlink:href="../../d4/d3d/class_kratos_1_1_eigensolver_nitsche_stabilization_strategy.html" target="_top" xlink:title="Strategy for solving generalized eigenvalue problems to obtain Nitsche stabilization factor.">
<polygon fill="white" stroke="#666666" points="674,-1211 674,-1851 865,-1851 865,-1211 674,-1211"/>
<text text-anchor="start" x="682" y="-1839" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::EigensolverNitsche</text>
<text text-anchor="start" x="682" y="-1828" font-family="Helvetica,sans-Serif" font-size="10.00">StabilizationStrategy&lt;</text>
<text text-anchor="start" x="682" y="-1817" font-family="Helvetica,sans-Serif" font-size="10.00"> TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="769.5" y="-1806" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="#666666" points="674,-1799 865,-1799"/>
<text text-anchor="middle" x="769.5" y="-1787" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="674,-1780 865,-1780"/>
<text text-anchor="start" x="682" y="-1768" font-family="Helvetica,sans-Serif" font-size="10.00">+ EigensolverNitscheStabilization</text>
<text text-anchor="start" x="682" y="-1757" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="682" y="-1746" font-family="Helvetica,sans-Serif" font-size="10.00">+ EigensolverNitscheStabilization</text>
<text text-anchor="start" x="682" y="-1735" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="682" y="-1724" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~EigensolverNitscheStabilization</text>
<text text-anchor="start" x="682" y="-1713" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="682" y="-1702" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetIsInitialized()</text>
<text text-anchor="start" x="682" y="-1691" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetIsInitialized()</text>
<text text-anchor="start" x="682" y="-1680" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetScheme()</text>
<text text-anchor="start" x="682" y="-1669" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetScheme()</text>
<text text-anchor="start" x="682" y="-1658" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetBuilderAndSolver()</text>
<text text-anchor="start" x="682" y="-1647" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetBuilderAndSolver()</text>
<text text-anchor="start" x="682" y="-1636" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetStiffnessMatrix()</text>
<text text-anchor="start" x="682" y="-1625" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetStabilizationMatrix()</text>
<text text-anchor="start" x="682" y="-1614" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetStiffnessMatrix()</text>
<text text-anchor="start" x="682" y="-1603" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetStabilizationMatrix()</text>
<text text-anchor="start" x="682" y="-1592" font-family="Helvetica,sans-Serif" font-size="10.00">and 9 more...</text>
<text text-anchor="start" x="682" y="-1581" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="682" y="-1570" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemePointerType</text>
<text text-anchor="start" x="682" y="-1559" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolverPointerType</text>
<text text-anchor="start" x="682" y="-1548" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseVectorType</text>
<text text-anchor="start" x="682" y="-1537" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseMatrixType</text>
<text text-anchor="start" x="682" y="-1526" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseSpaceType</text>
<text text-anchor="start" x="682" y="-1515" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseVectorPointerType</text>
<text text-anchor="start" x="682" y="-1504" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseMatrixPointerType</text>
<text text-anchor="start" x="682" y="-1493" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseMatrixType</text>
<text text-anchor="start" x="682" y="-1482" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseVectorType</text>
<text text-anchor="start" x="682" y="-1471" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="682" y="-1460" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="682" y="-1449" font-family="Helvetica,sans-Serif" font-size="10.00">* mpScheme</text>
<text text-anchor="start" x="682" y="-1438" font-family="Helvetica,sans-Serif" font-size="10.00">* mpBuilderAndSolver</text>
<text text-anchor="start" x="682" y="-1427" font-family="Helvetica,sans-Serif" font-size="10.00">* mpStiffnessMatrix</text>
<text text-anchor="start" x="682" y="-1416" font-family="Helvetica,sans-Serif" font-size="10.00">* mpStabilizationMatrix</text>
<text text-anchor="start" x="682" y="-1405" font-family="Helvetica,sans-Serif" font-size="10.00">* mInitializeWasPerformed</text>
<text text-anchor="start" x="682" y="-1394" font-family="Helvetica,sans-Serif" font-size="10.00">* EigensolverNitscheStabilization</text>
<text text-anchor="start" x="682" y="-1383" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="682" y="-1372" font-family="Helvetica,sans-Serif" font-size="10.00">* EigensolverNitscheStabilization</text>
<text text-anchor="start" x="682" y="-1361" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="682" y="-1350" font-family="Helvetica,sans-Serif" font-size="10.00">* ~EigensolverNitscheStabilization</text>
<text text-anchor="start" x="682" y="-1339" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="682" y="-1328" font-family="Helvetica,sans-Serif" font-size="10.00">* SetIsInitialized()</text>
<text text-anchor="start" x="682" y="-1317" font-family="Helvetica,sans-Serif" font-size="10.00">* GetIsInitialized()</text>
<text text-anchor="start" x="682" y="-1306" font-family="Helvetica,sans-Serif" font-size="10.00">* SetScheme()</text>
<text text-anchor="start" x="682" y="-1295" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetScheme()</text>
<text text-anchor="start" x="682" y="-1284" font-family="Helvetica,sans-Serif" font-size="10.00">* SetBuilderAndSolver()</text>
<text text-anchor="start" x="682" y="-1273" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetBuilderAndSolver()</text>
<text text-anchor="start" x="682" y="-1262" font-family="Helvetica,sans-Serif" font-size="10.00">* GetStiffnessMatrix()</text>
<text text-anchor="start" x="682" y="-1251" font-family="Helvetica,sans-Serif" font-size="10.00">* GetStabilizationMatrix()</text>
<text text-anchor="start" x="682" y="-1240" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetStiffnessMatrix()</text>
<text text-anchor="start" x="682" y="-1229" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetStabilizationMatrix()</text>
<text text-anchor="start" x="682" y="-1218" font-family="Helvetica,sans-Serif" font-size="10.00">and 9 more...</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node12 -->
<g id="edge9" class="edge">
<title>Node10&#45;&gt;Node12</title>
<path fill="none" stroke="#63b8ff" d="M3163.84,-2550.69C2758.91,-2536.86 1204.66,-2462.69 874.5,-2132 801.09,-2058.47 768.56,-1953.01 756.35,-1850.95"/>
<polygon fill="none" stroke="#63b8ff" points="3163.58,-2554.18 3173.69,-2551.02 3163.81,-2547.19 3163.58,-2554.18"/>
</g>
<!-- Node13 -->
<g id="node11" class="node">
<title>Node13</title>
<g id="a_node11"><a xlink:href="../../d1/d90/class_kratos_1_1_eigensolver_strategy.html" target="_top" xlink:title="Strategy for solving generalized eigenvalue problems.">
<polygon fill="white" stroke="#666666" points="883.5,-1024 883.5,-2038 1063.5,-2038 1063.5,-1024 883.5,-1024"/>
<text text-anchor="start" x="891.5" y="-2026" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::EigensolverStrategy</text>
<text text-anchor="start" x="891.5" y="-2015" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="973.5" y="-2004" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="#666666" points="883.5,-1997 1063.5,-1997"/>
<text text-anchor="middle" x="973.5" y="-1985" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="883.5,-1978 1063.5,-1978"/>
<text text-anchor="start" x="891.5" y="-1966" font-family="Helvetica,sans-Serif" font-size="10.00">+ EigensolverStrategy()</text>
<text text-anchor="start" x="891.5" y="-1955" font-family="Helvetica,sans-Serif" font-size="10.00">+ EigensolverStrategy()</text>
<text text-anchor="start" x="891.5" y="-1944" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~EigensolverStrategy()</text>
<text text-anchor="start" x="891.5" y="-1933" font-family="Helvetica,sans-Serif" font-size="10.00">+ EigensolverStrategy()</text>
<text text-anchor="start" x="891.5" y="-1922" font-family="Helvetica,sans-Serif" font-size="10.00">+ EigensolverStrategy()</text>
<text text-anchor="start" x="891.5" y="-1911" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~EigensolverStrategy()</text>
<text text-anchor="start" x="891.5" y="-1900" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="891.5" y="-1889" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="891.5" y="-1878" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="891.5" y="-1867" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="891.5" y="-1856" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetIsInitialized()</text>
<text text-anchor="start" x="891.5" y="-1845" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetIsInitialized()</text>
<text text-anchor="start" x="891.5" y="-1834" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetScheme()</text>
<text text-anchor="start" x="891.5" y="-1823" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetScheme()</text>
<text text-anchor="start" x="891.5" y="-1812" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetBuilderAndSolver()</text>
<text text-anchor="start" x="891.5" y="-1801" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetBuilderAndSolver()</text>
<text text-anchor="start" x="891.5" y="-1790" font-family="Helvetica,sans-Serif" font-size="10.00">and 13 more...</text>
<text text-anchor="start" x="891.5" y="-1779" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="891.5" y="-1768" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetScheme()</text>
<text text-anchor="start" x="891.5" y="-1757" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetScheme()</text>
<text text-anchor="start" x="891.5" y="-1746" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetBuilderAndSolver()</text>
<text text-anchor="start" x="891.5" y="-1735" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetBuilderAndSolver()</text>
<text text-anchor="start" x="891.5" y="-1724" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetMassMatrix()</text>
<text text-anchor="start" x="891.5" y="-1713" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetStiffnessMatrix()</text>
<text text-anchor="start" x="891.5" y="-1702" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetMassMatrix()</text>
<text text-anchor="start" x="891.5" y="-1691" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetStiffnessMatrix()</text>
<text text-anchor="start" x="891.5" y="-1680" font-family="Helvetica,sans-Serif" font-size="10.00"># Initialize()</text>
<text text-anchor="start" x="891.5" y="-1669" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="891.5" y="-1658" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalFlagType</text>
<text text-anchor="start" x="891.5" y="-1647" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolverType</text>
<text text-anchor="start" x="891.5" y="-1636" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemeType</text>
<text text-anchor="start" x="891.5" y="-1625" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseVectorType</text>
<text text-anchor="start" x="891.5" y="-1614" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseMatrixType</text>
<text text-anchor="start" x="891.5" y="-1603" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseSpaceType</text>
<text text-anchor="start" x="891.5" y="-1592" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseVectorPointerType</text>
<text text-anchor="start" x="891.5" y="-1581" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseMatrixPointerType</text>
<text text-anchor="start" x="891.5" y="-1570" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseMatrixType</text>
<text text-anchor="start" x="891.5" y="-1559" font-family="Helvetica,sans-Serif" font-size="10.00">and 13 more...</text>
<text text-anchor="start" x="891.5" y="-1548" font-family="Helvetica,sans-Serif" font-size="10.00">* mpScheme</text>
<text text-anchor="start" x="891.5" y="-1537" font-family="Helvetica,sans-Serif" font-size="10.00">* mpBuilderAndSolver</text>
<text text-anchor="start" x="891.5" y="-1526" font-family="Helvetica,sans-Serif" font-size="10.00">* mpMassMatrix</text>
<text text-anchor="start" x="891.5" y="-1515" font-family="Helvetica,sans-Serif" font-size="10.00">* mpStiffnessMatrix</text>
<text text-anchor="start" x="891.5" y="-1504" font-family="Helvetica,sans-Serif" font-size="10.00">* mComputeModalContribution</text>
<text text-anchor="start" x="891.5" y="-1493" font-family="Helvetica,sans-Serif" font-size="10.00">* mpScheme</text>
<text text-anchor="start" x="891.5" y="-1482" font-family="Helvetica,sans-Serif" font-size="10.00">* mpBuilderAndSolver</text>
<text text-anchor="start" x="891.5" y="-1471" font-family="Helvetica,sans-Serif" font-size="10.00">* mInitializeWasPerformed</text>
<text text-anchor="start" x="891.5" y="-1460" font-family="Helvetica,sans-Serif" font-size="10.00">* mMassMatrixDiagonalValue</text>
<text text-anchor="start" x="891.5" y="-1449" font-family="Helvetica,sans-Serif" font-size="10.00">* mStiffnessMatrixDiagonal</text>
<text text-anchor="start" x="891.5" y="-1438" font-family="Helvetica,sans-Serif" font-size="10.00">Value</text>
<text text-anchor="start" x="891.5" y="-1427" font-family="Helvetica,sans-Serif" font-size="10.00">* mComputeModalDecompostion</text>
<text text-anchor="start" x="891.5" y="-1416" font-family="Helvetica,sans-Serif" font-size="10.00">* EigensolverStrategy()</text>
<text text-anchor="start" x="891.5" y="-1405" font-family="Helvetica,sans-Serif" font-size="10.00">* EigensolverStrategy()</text>
<text text-anchor="start" x="891.5" y="-1394" font-family="Helvetica,sans-Serif" font-size="10.00">* ~EigensolverStrategy()</text>
<text text-anchor="start" x="891.5" y="-1383" font-family="Helvetica,sans-Serif" font-size="10.00">* EigensolverStrategy()</text>
<text text-anchor="start" x="891.5" y="-1372" font-family="Helvetica,sans-Serif" font-size="10.00">* EigensolverStrategy()</text>
<text text-anchor="start" x="891.5" y="-1361" font-family="Helvetica,sans-Serif" font-size="10.00">* ~EigensolverStrategy()</text>
<text text-anchor="start" x="891.5" y="-1350" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="891.5" y="-1339" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="891.5" y="-1328" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="891.5" y="-1317" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="891.5" y="-1306" font-family="Helvetica,sans-Serif" font-size="10.00">* SetIsInitialized()</text>
<text text-anchor="start" x="891.5" y="-1295" font-family="Helvetica,sans-Serif" font-size="10.00">* GetIsInitialized()</text>
<text text-anchor="start" x="891.5" y="-1284" font-family="Helvetica,sans-Serif" font-size="10.00">* SetScheme()</text>
<text text-anchor="start" x="891.5" y="-1273" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetScheme()</text>
<text text-anchor="start" x="891.5" y="-1262" font-family="Helvetica,sans-Serif" font-size="10.00">* SetBuilderAndSolver()</text>
<text text-anchor="start" x="891.5" y="-1251" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetBuilderAndSolver()</text>
<text text-anchor="start" x="891.5" y="-1240" font-family="Helvetica,sans-Serif" font-size="10.00">and 13 more...</text>
<text text-anchor="start" x="891.5" y="-1229" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="891.5" y="-1218" font-family="Helvetica,sans-Serif" font-size="10.00">* SetScheme()</text>
<text text-anchor="start" x="891.5" y="-1207" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetScheme()</text>
<text text-anchor="start" x="891.5" y="-1196" font-family="Helvetica,sans-Serif" font-size="10.00">* SetBuilderAndSolver()</text>
<text text-anchor="start" x="891.5" y="-1185" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetBuilderAndSolver()</text>
<text text-anchor="start" x="891.5" y="-1174" font-family="Helvetica,sans-Serif" font-size="10.00">* GetMassMatrix()</text>
<text text-anchor="start" x="891.5" y="-1163" font-family="Helvetica,sans-Serif" font-size="10.00">* GetStiffnessMatrix()</text>
<text text-anchor="start" x="891.5" y="-1152" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetMassMatrix()</text>
<text text-anchor="start" x="891.5" y="-1141" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetStiffnessMatrix()</text>
<text text-anchor="start" x="891.5" y="-1130" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="891.5" y="-1119" font-family="Helvetica,sans-Serif" font-size="10.00">* SetSystemMatrices()</text>
<text text-anchor="start" x="891.5" y="-1108" font-family="Helvetica,sans-Serif" font-size="10.00">* SetSystemDofs()</text>
<text text-anchor="start" x="891.5" y="-1097" font-family="Helvetica,sans-Serif" font-size="10.00">* ApplyDirichletConditions()</text>
<text text-anchor="start" x="891.5" y="-1086" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignVariables()</text>
<text text-anchor="start" x="891.5" y="-1075" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeModalContribution()</text>
<text text-anchor="start" x="891.5" y="-1064" font-family="Helvetica,sans-Serif" font-size="10.00">* ReconstructSlaveSolution()</text>
<text text-anchor="start" x="891.5" y="-1053" font-family="Helvetica,sans-Serif" font-size="10.00">* ApplyDirichletConditions()</text>
<text text-anchor="start" x="891.5" y="-1042" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignVariables()</text>
<text text-anchor="start" x="891.5" y="-1031" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeModalDecomposition()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node13 -->
<g id="edge10" class="edge">
<title>Node10&#45;&gt;Node13</title>
<path fill="none" stroke="#63b8ff" d="M3163.86,-2549.1C2780.1,-2529.58 1370.21,-2437.79 1072.5,-2132 1045.62,-2104.39 1024.39,-2072.45 1007.75,-2037.99"/>
<polygon fill="none" stroke="#63b8ff" points="3163.51,-2552.59 3173.67,-2549.59 3163.86,-2545.6 3163.51,-2552.59"/>
</g>
<!-- Node14 -->
<g id="node12" class="node">
<title>Node14</title>
<g id="a_node12"><a xlink:href="../../d6/d79/class_kratos_1_1_explicit_hamilton_strategy.html" target="_top" xlink:title=" ">
<polygon fill="white" stroke="#666666" points="1081.5,-1282.5 1081.5,-1779.5 1251.5,-1779.5 1251.5,-1282.5 1081.5,-1282.5"/>
<text text-anchor="start" x="1089.5" y="-1767.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ExplicitHamilton</text>
<text text-anchor="start" x="1089.5" y="-1756.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy&lt; TSparseSpace,</text>
<text text-anchor="middle" x="1166.5" y="-1745.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="#666666" points="1081.5,-1738.5 1251.5,-1738.5"/>
<text text-anchor="start" x="1089.5" y="-1726.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpScheme</text>
<text text-anchor="start" x="1089.5" y="-1715.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpLinearSolver</text>
<text text-anchor="start" x="1089.5" y="-1704.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpBuilderAndSolver</text>
<text text-anchor="start" x="1089.5" y="-1693.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpDx</text>
<text text-anchor="start" x="1089.5" y="-1682.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpb</text>
<text text-anchor="start" x="1089.5" y="-1671.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpA</text>
<text text-anchor="start" x="1089.5" y="-1660.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mReformDofSetAtEachStep</text>
<text text-anchor="start" x="1089.5" y="-1649.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mCalculateReactionsFlag</text>
<text text-anchor="start" x="1089.5" y="-1638.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mSolutionStepIsInitialized</text>
<text text-anchor="start" x="1089.5" y="-1627.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mInitializeWasPerformed</text>
<text text-anchor="start" x="1089.5" y="-1616.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mComputeTime</text>
<polyline fill="none" stroke="#666666" points="1081.5,-1609.5 1251.5,-1609.5"/>
<text text-anchor="start" x="1089.5" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="1089.5" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="1089.5" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExplicitHamiltonStrategy()</text>
<text text-anchor="start" x="1089.5" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExplicitHamiltonStrategy()</text>
<text text-anchor="start" x="1089.5" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~ExplicitHamiltonStrategy()</text>
<text text-anchor="start" x="1089.5" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetScheme()</text>
<text text-anchor="start" x="1089.5" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetScheme()</text>
<text text-anchor="start" x="1089.5" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetBuilderAndSolver()</text>
<text text-anchor="start" x="1089.5" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetBuilderAndSolver()</text>
<text text-anchor="start" x="1089.5" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetInitializePerformedFlag()</text>
<text text-anchor="start" x="1089.5" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetInitializePerformedFlag()</text>
<text text-anchor="start" x="1089.5" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 9 more...</text>
<text text-anchor="start" x="1089.5" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateReactions()</text>
<text text-anchor="start" x="1089.5" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Check()</text>
<text text-anchor="start" x="1089.5" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ExplicitHamiltonStrategy()</text>
<text text-anchor="start" x="1089.5" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpScheme</text>
<text text-anchor="start" x="1089.5" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpLinearSolver</text>
<text text-anchor="start" x="1089.5" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpBuilderAndSolver</text>
<text text-anchor="start" x="1089.5" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpDx</text>
<text text-anchor="start" x="1089.5" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpb</text>
<text text-anchor="start" x="1089.5" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpA</text>
<text text-anchor="start" x="1089.5" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mReformDofSetAtEachStep</text>
<text text-anchor="start" x="1089.5" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mCalculateReactionsFlag</text>
<text text-anchor="start" x="1089.5" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mSolutionStepIsInitialized</text>
<text text-anchor="start" x="1089.5" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mInitializeWasPerformed</text>
<text text-anchor="start" x="1089.5" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mComputeTime</text>
<text text-anchor="start" x="1089.5" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateReactions()</text>
<text text-anchor="start" x="1089.5" y="-1300.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="1089.5" y="-1289.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExplicitHamiltonStrategy()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node14 -->
<g id="edge11" class="edge">
<title>Node10&#45;&gt;Node14</title>
<path fill="none" stroke="#63b8ff" d="M3163.95,-2547.29C2801.34,-2521.92 1527.96,-2413.83 1260.5,-2132 1172.68,-2039.46 1146.88,-1900.36 1144.08,-1779.38"/>
<polygon fill="none" stroke="#63b8ff" points="3163.45,-2550.76 3173.67,-2547.96 3163.94,-2543.78 3163.45,-2550.76"/>
</g>
<!-- Node15 -->
<g id="node13" class="node">
<title>Node15</title>
<g id="a_node13"><a xlink:href="../../d8/d66/class_kratos_1_1_fluid___phase___p_f_e_m2___explicit___strategy.html" target="_top" xlink:title=" ">
<polygon fill="white" stroke="#666666" points="1269.5,-1392.5 1269.5,-1669.5 1459.5,-1669.5 1459.5,-1392.5 1269.5,-1392.5"/>
<text text-anchor="start" x="1277.5" y="-1657.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Fluid_Phase</text>
<text text-anchor="start" x="1277.5" y="-1646.5" font-family="Helvetica,sans-Serif" font-size="10.00">_PFEM2_Explicit_Strategy</text>
<text text-anchor="start" x="1277.5" y="-1635.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="1364.5" y="-1624.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="#666666" points="1269.5,-1617.5 1459.5,-1617.5"/>
<text text-anchor="middle" x="1364.5" y="-1605.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="1269.5,-1598.5 1459.5,-1598.5"/>
<text text-anchor="start" x="1277.5" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="1277.5" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="1277.5" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Fluid_Phase_PFEM2_Explicit</text>
<text text-anchor="start" x="1277.5" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">_Strategy()</text>
<text text-anchor="start" x="1277.5" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~Fluid_Phase_PFEM2</text>
<text text-anchor="start" x="1277.5" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">_Explicit_Strategy()</text>
<text text-anchor="start" x="1277.5" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CreatePartition()</text>
<text text-anchor="start" x="1277.5" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AssembleLoop()</text>
<text text-anchor="start" x="1277.5" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="1277.5" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="1277.5" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetToZeroVariablesInViscous</text>
<text text-anchor="start" x="1277.5" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">Iterations()</text>
<text text-anchor="start" x="1277.5" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ UpdateLoopForViscousIterations</text>
<text text-anchor="start" x="1277.5" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">WithNormalization()</text>
<text text-anchor="start" x="1277.5" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetToZeroVariablesInPresure</text>
<text text-anchor="start" x="1277.5" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">Iterations()</text>
<text text-anchor="start" x="1277.5" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ UpdateLoopForPressureIterations</text>
<text text-anchor="start" x="1277.5" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">WithNormalization()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node15 -->
<g id="edge12" class="edge">
<title>Node10&#45;&gt;Node15</title>
<path fill="none" stroke="#63b8ff" d="M3163.97,-2544.61C2826.35,-2511.5 1706.08,-2384.13 1468.5,-2132 1352.31,-2008.7 1340.84,-1804.66 1348.5,-1669.27"/>
<polygon fill="none" stroke="#63b8ff" points="3163.37,-2548.07 3173.66,-2545.55 3164.05,-2541.1 3163.37,-2548.07"/>
</g>
<!-- Node16 -->
<g id="node14" class="node">
<title>Node16</title>
<g id="a_node14"><a xlink:href="../../df/dd4/class_kratos_1_1_frac_step_strategy.html" target="_top" xlink:title="Short class definition.">
<polygon fill="white" stroke="#666666" points="1478,-1156 1478,-1906 1649,-1906 1649,-1156 1478,-1156"/>
<text text-anchor="start" x="1486" y="-1894" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::FracStepStrategy</text>
<text text-anchor="start" x="1486" y="-1883" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="1563.5" y="-1872" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="#666666" points="1478,-1865 1649,-1865"/>
<text text-anchor="start" x="1486" y="-1853" font-family="Helvetica,sans-Serif" font-size="10.00"># mpfracvel_strategy</text>
<text text-anchor="start" x="1486" y="-1842" font-family="Helvetica,sans-Serif" font-size="10.00"># mppressurestep</text>
<text text-anchor="start" x="1486" y="-1831" font-family="Helvetica,sans-Serif" font-size="10.00"># mvelocity_toll</text>
<text text-anchor="start" x="1486" y="-1820" font-family="Helvetica,sans-Serif" font-size="10.00"># mpressure_toll</text>
<text text-anchor="start" x="1486" y="-1809" font-family="Helvetica,sans-Serif" font-size="10.00"># mMaxVelIterations</text>
<text text-anchor="start" x="1486" y="-1798" font-family="Helvetica,sans-Serif" font-size="10.00"># mMaxPressIterations</text>
<text text-anchor="start" x="1486" y="-1787" font-family="Helvetica,sans-Serif" font-size="10.00"># mtime_order</text>
<text text-anchor="start" x="1486" y="-1776" font-family="Helvetica,sans-Serif" font-size="10.00"># mprediction_order</text>
<text text-anchor="start" x="1486" y="-1765" font-family="Helvetica,sans-Serif" font-size="10.00"># mpredictor_corrector</text>
<text text-anchor="start" x="1486" y="-1754" font-family="Helvetica,sans-Serif" font-size="10.00"># mReformDofAtEachIteration</text>
<text text-anchor="start" x="1486" y="-1743" font-family="Helvetica,sans-Serif" font-size="10.00"># mecho_level</text>
<text text-anchor="start" x="1486" y="-1732" font-family="Helvetica,sans-Serif" font-size="10.00"># muse_dt_in_stabilization</text>
<polyline fill="none" stroke="#666666" points="1478,-1725 1649,-1725"/>
<text text-anchor="start" x="1486" y="-1713" font-family="Helvetica,sans-Serif" font-size="10.00">+ FracStepStrategy()</text>
<text text-anchor="start" x="1486" y="-1702" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~FracStepStrategy()</text>
<text text-anchor="start" x="1486" y="-1691" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="1486" y="-1680" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolvePressure()</text>
<text text-anchor="start" x="1486" y="-1669" font-family="Helvetica,sans-Serif" font-size="10.00">+ IterativeSolve()</text>
<text text-anchor="start" x="1486" y="-1658" font-family="Helvetica,sans-Serif" font-size="10.00">+ SavePressureIteration()</text>
<text text-anchor="start" x="1486" y="-1647" font-family="Helvetica,sans-Serif" font-size="10.00">+ AssignInitialStepValues()</text>
<text text-anchor="start" x="1486" y="-1636" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveStep1()</text>
<text text-anchor="start" x="1486" y="-1625" font-family="Helvetica,sans-Serif" font-size="10.00">+ FractionalVelocityIteration()</text>
<text text-anchor="start" x="1486" y="-1614" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveStep4()</text>
<text text-anchor="start" x="1486" y="-1603" font-family="Helvetica,sans-Serif" font-size="10.00">and 9 more...</text>
<text text-anchor="start" x="1486" y="-1592" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="1486" y="-1581" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="1486" y="-1570" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="1486" y="-1559" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="1486" y="-1548" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="1486" y="-1537" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="1486" y="-1526" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="1486" y="-1515" font-family="Helvetica,sans-Serif" font-size="10.00">* PartitionVector</text>
<text text-anchor="start" x="1486" y="-1504" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="1486" y="-1493" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="1486" y="-1482" font-family="Helvetica,sans-Serif" font-size="10.00">* mpfracvel_strategy</text>
<text text-anchor="start" x="1486" y="-1471" font-family="Helvetica,sans-Serif" font-size="10.00">* mppressurestep</text>
<text text-anchor="start" x="1486" y="-1460" font-family="Helvetica,sans-Serif" font-size="10.00">* mvelocity_toll</text>
<text text-anchor="start" x="1486" y="-1449" font-family="Helvetica,sans-Serif" font-size="10.00">* mpressure_toll</text>
<text text-anchor="start" x="1486" y="-1438" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxVelIterations</text>
<text text-anchor="start" x="1486" y="-1427" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxPressIterations</text>
<text text-anchor="start" x="1486" y="-1416" font-family="Helvetica,sans-Serif" font-size="10.00">* mtime_order</text>
<text text-anchor="start" x="1486" y="-1405" font-family="Helvetica,sans-Serif" font-size="10.00">* mprediction_order</text>
<text text-anchor="start" x="1486" y="-1394" font-family="Helvetica,sans-Serif" font-size="10.00">* mpredictor_corrector</text>
<text text-anchor="start" x="1486" y="-1383" font-family="Helvetica,sans-Serif" font-size="10.00">* mReformDofAtEachIteration</text>
<text text-anchor="start" x="1486" y="-1372" font-family="Helvetica,sans-Serif" font-size="10.00">* mecho_level</text>
<text text-anchor="start" x="1486" y="-1361" font-family="Helvetica,sans-Serif" font-size="10.00">* muse_dt_in_stabilization</text>
<text text-anchor="start" x="1486" y="-1350" font-family="Helvetica,sans-Serif" font-size="10.00">* m_step</text>
<text text-anchor="start" x="1486" y="-1339" font-family="Helvetica,sans-Serif" font-size="10.00">* mdomain_size</text>
<text text-anchor="start" x="1486" y="-1328" font-family="Helvetica,sans-Serif" font-size="10.00">* proj_is_initialized</text>
<text text-anchor="start" x="1486" y="-1317" font-family="Helvetica,sans-Serif" font-size="10.00">* mHasSlipProcess</text>
<text text-anchor="start" x="1486" y="-1306" font-family="Helvetica,sans-Serif" font-size="10.00">* mInitializeIterationProcesses</text>
<text text-anchor="start" x="1486" y="-1295" font-family="Helvetica,sans-Serif" font-size="10.00">* CreatePartition()</text>
<text text-anchor="start" x="1486" y="-1284" font-family="Helvetica,sans-Serif" font-size="10.00">* FracStepStrategy()</text>
<text text-anchor="start" x="1486" y="-1273" font-family="Helvetica,sans-Serif" font-size="10.00">* ~FracStepStrategy()</text>
<text text-anchor="start" x="1486" y="-1262" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="1486" y="-1251" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvePressure()</text>
<text text-anchor="start" x="1486" y="-1240" font-family="Helvetica,sans-Serif" font-size="10.00">* IterativeSolve()</text>
<text text-anchor="start" x="1486" y="-1229" font-family="Helvetica,sans-Serif" font-size="10.00">* SavePressureIteration()</text>
<text text-anchor="start" x="1486" y="-1218" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignInitialStepValues()</text>
<text text-anchor="start" x="1486" y="-1207" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveStep1()</text>
<text text-anchor="start" x="1486" y="-1196" font-family="Helvetica,sans-Serif" font-size="10.00">* FractionalVelocityIteration()</text>
<text text-anchor="start" x="1486" y="-1185" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveStep4()</text>
<text text-anchor="start" x="1486" y="-1174" font-family="Helvetica,sans-Serif" font-size="10.00">and 9 more...</text>
<text text-anchor="start" x="1486" y="-1163" font-family="Helvetica,sans-Serif" font-size="10.00">* FracStepStrategy()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node16 -->
<g id="edge13" class="edge">
<title>Node10&#45;&gt;Node16</title>
<path fill="none" stroke="#63b8ff" d="M3163.7,-2541.87C2849.17,-2502.06 1864.27,-2360.95 1657.5,-2132 1601.32,-2069.79 1570.97,-1988.36 1555.82,-1905.64"/>
<polygon fill="none" stroke="#63b8ff" points="3163.2,-2545.33 3173.55,-2543.11 3164.07,-2538.39 3163.2,-2545.33"/>
</g>
<!-- Node17 -->
<g id="node15" class="node">
<title>Node17</title>
<g id="a_node15"><a xlink:href="../../d2/d4a/class_kratos_1_1_fractional_step_strategy.html" target="_top" xlink:title="Fractional&#45;step strategy for incompressible Navier&#45;Stokes formulation This strategy implements a spli...">
<polygon fill="white" stroke="#666666" points="1667,-930.5 1667,-2131.5 1866,-2131.5 1866,-930.5 1667,-930.5"/>
<text text-anchor="start" x="1675" y="-2119.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::FractionalStepStrategy</text>
<text text-anchor="start" x="1675" y="-2108.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="1766.5" y="-2097.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="#666666" points="1667,-2090.5 1866,-2090.5"/>
<text text-anchor="start" x="1675" y="-2078.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mVelocityTolerance</text>
<text text-anchor="start" x="1675" y="-2067.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mPressureTolerance</text>
<text text-anchor="start" x="1675" y="-2056.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mPressureGradientRelaxation</text>
<text text-anchor="start" x="1675" y="-2045.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor</text>
<text text-anchor="start" x="1675" y="-2034.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mMaxVelocityIter</text>
<text text-anchor="start" x="1675" y="-2023.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mMaxPressureIter</text>
<text text-anchor="start" x="1675" y="-2012.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mDomainSize</text>
<text text-anchor="start" x="1675" y="-2001.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mTimeOrder</text>
<text text-anchor="start" x="1675" y="-1990.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mPredictorCorrector</text>
<text text-anchor="start" x="1675" y="-1979.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mUseSlipConditions</text>
<text text-anchor="start" x="1675" y="-1968.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mReformDofSet</text>
<text text-anchor="start" x="1675" y="-1957.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mCalculateReactionsFlag</text>
<text text-anchor="start" x="1675" y="-1946.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpMomentumStrategy</text>
<text text-anchor="start" x="1675" y="-1935.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpPressureStrategy</text>
<text text-anchor="start" x="1675" y="-1924.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mExtraIterationSteps</text>
<text text-anchor="start" x="1675" y="-1913.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mrPeriodicIdVar</text>
<polyline fill="none" stroke="#666666" points="1667,-1906.5 1866,-1906.5"/>
<text text-anchor="start" x="1675" y="-1894.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FractionalStepStrategy()</text>
<text text-anchor="start" x="1675" y="-1883.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FractionalStepStrategy()</text>
<text text-anchor="start" x="1675" y="-1872.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FractionalStepStrategy()</text>
<text text-anchor="start" x="1675" y="-1861.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FractionalStepStrategy()</text>
<text text-anchor="start" x="1675" y="-1850.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~FractionalStepStrategy()</text>
<text text-anchor="start" x="1675" y="-1839.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="1675" y="-1828.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="1675" y="-1817.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="1675" y="-1806.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="1675" y="-1795.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="1675" y="-1784.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateReactions()</text>
<text text-anchor="start" x="1675" y="-1773.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AddIterationStep()</text>
<text text-anchor="start" x="1675" y="-1762.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ClearExtraIterationSteps()</text>
<text text-anchor="start" x="1675" y="-1751.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="1675" y="-1740.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="1675" y="-1729.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetCalculateReactionsFlag()</text>
<text text-anchor="start" x="1675" y="-1718.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetCalculateReactionsFlag()</text>
<text text-anchor="start" x="1675" y="-1707.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="1675" y="-1696.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="1675" y="-1685.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="1675" y="-1674.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SetTimeCoefficients()</text>
<text text-anchor="start" x="1675" y="-1663.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SolveStep()</text>
<text text-anchor="start" x="1675" y="-1652.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckFractionalStepConvergence()</text>
<text text-anchor="start" x="1675" y="-1641.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckPressureConvergence()</text>
<text text-anchor="start" x="1675" y="-1630.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ComputeSplitOssProjections()</text>
<text text-anchor="start" x="1675" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateEndOfStepVelocity()</text>
<text text-anchor="start" x="1675" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00"># EnforceSlipCondition()</text>
<text text-anchor="start" x="1675" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PeriodicConditionProjection</text>
<text text-anchor="start" x="1675" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">Correction()</text>
<text text-anchor="start" x="1675" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00"># PeriodicConditionVelocity</text>
<text text-anchor="start" x="1675" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">Correction()</text>
<text text-anchor="start" x="1675" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="1675" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="1675" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="1675" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StrategyPointerType</text>
<text text-anchor="start" x="1675" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolverSettingsType</text>
<text text-anchor="start" x="1675" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="1675" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="1675" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mVelocityTolerance</text>
<text text-anchor="start" x="1675" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mPressureTolerance</text>
<text text-anchor="start" x="1675" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mPressureGradientRelaxation</text>
<text text-anchor="start" x="1675" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">Factor</text>
<text text-anchor="start" x="1675" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxVelocityIter</text>
<text text-anchor="start" x="1675" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxPressureIter</text>
<text text-anchor="start" x="1675" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mDomainSize</text>
<text text-anchor="start" x="1675" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mTimeOrder</text>
<text text-anchor="start" x="1675" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mPredictorCorrector</text>
<text text-anchor="start" x="1675" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mUseSlipConditions</text>
<text text-anchor="start" x="1675" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mReformDofSet</text>
<text text-anchor="start" x="1675" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mCalculateReactionsFlag</text>
<text text-anchor="start" x="1675" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpMomentumStrategy</text>
<text text-anchor="start" x="1675" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpPressureStrategy</text>
<text text-anchor="start" x="1675" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mExtraIterationSteps</text>
<text text-anchor="start" x="1675" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mrPeriodicIdVar</text>
<text text-anchor="start" x="1675" y="-1300.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FractionalStepStrategy()</text>
<text text-anchor="start" x="1675" y="-1289.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FractionalStepStrategy()</text>
<text text-anchor="start" x="1675" y="-1278.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FractionalStepStrategy()</text>
<text text-anchor="start" x="1675" y="-1267.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FractionalStepStrategy()</text>
<text text-anchor="start" x="1675" y="-1256.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~FractionalStepStrategy()</text>
<text text-anchor="start" x="1675" y="-1245.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="1675" y="-1234.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="1675" y="-1223.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="1675" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="1675" y="-1201.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="1675" y="-1190.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateReactions()</text>
<text text-anchor="start" x="1675" y="-1179.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AddIterationStep()</text>
<text text-anchor="start" x="1675" y="-1168.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClearExtraIterationSteps()</text>
<text text-anchor="start" x="1675" y="-1157.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="1675" y="-1146.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="1675" y="-1135.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetCalculateReactionsFlag()</text>
<text text-anchor="start" x="1675" y="-1124.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetCalculateReactionsFlag()</text>
<text text-anchor="start" x="1675" y="-1113.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="1675" y="-1102.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="1675" y="-1091.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="1675" y="-1080.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetTimeCoefficients()</text>
<text text-anchor="start" x="1675" y="-1069.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveStep()</text>
<text text-anchor="start" x="1675" y="-1058.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckFractionalStepConvergence()</text>
<text text-anchor="start" x="1675" y="-1047.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckPressureConvergence()</text>
<text text-anchor="start" x="1675" y="-1036.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeSplitOssProjections()</text>
<text text-anchor="start" x="1675" y="-1025.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateEndOfStepVelocity()</text>
<text text-anchor="start" x="1675" y="-1014.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EnforceSlipCondition()</text>
<text text-anchor="start" x="1675" y="-1003.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PeriodicConditionProjection</text>
<text text-anchor="start" x="1675" y="-992.5" font-family="Helvetica,sans-Serif" font-size="10.00">Correction()</text>
<text text-anchor="start" x="1675" y="-981.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PeriodicConditionVelocity</text>
<text text-anchor="start" x="1675" y="-970.5" font-family="Helvetica,sans-Serif" font-size="10.00">Correction()</text>
<text text-anchor="start" x="1675" y="-959.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeStrategy()</text>
<text text-anchor="start" x="1675" y="-948.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="1675" y="-937.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FractionalStepStrategy()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node17 -->
<g id="edge14" class="edge">
<title>Node10&#45;&gt;Node17</title>
<path fill="none" stroke="#63b8ff" d="M3164.15,-2537.51C2879.45,-2488.32 2050.97,-2330.45 1874.5,-2132 1871.6,-2128.74 1868.76,-2125.42 1865.99,-2122.06"/>
<polygon fill="none" stroke="#63b8ff" points="3163.32,-2540.92 3173.77,-2539.17 3164.51,-2534.02 3163.32,-2540.92"/>
</g>
<!-- Node19 -->
<g id="node17" class="node">
<title>Node19</title>
<g id="a_node17"><a xlink:href="../../de/d17/class_kratos_1_1_gauss_seidel_linear_strategy.html" target="_top" xlink:title="Short class definition.">
<polygon fill="white" stroke="#666666" points="1884,-1167 1884,-1895 2059,-1895 2059,-1167 1884,-1167"/>
<text text-anchor="start" x="1892" y="-1883" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::GaussSeidelLinear</text>
<text text-anchor="start" x="1892" y="-1872" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy&lt; TSparseSpace,</text>
<text text-anchor="middle" x="1971.5" y="-1861" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="#666666" points="1884,-1854 2059,-1854"/>
<text text-anchor="middle" x="1971.5" y="-1842" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="1884,-1835 2059,-1835"/>
<text text-anchor="start" x="1892" y="-1823" font-family="Helvetica,sans-Serif" font-size="10.00">+ GaussSeidelLinearStrategy()</text>
<text text-anchor="start" x="1892" y="-1812" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~GaussSeidelLinearStrategy()</text>
<text text-anchor="start" x="1892" y="-1801" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetScheme()</text>
<text text-anchor="start" x="1892" y="-1790" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetScheme()</text>
<text text-anchor="start" x="1892" y="-1779" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetBuilderAndSolver()</text>
<text text-anchor="start" x="1892" y="-1768" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetBuilderAndSolver()</text>
<text text-anchor="start" x="1892" y="-1757" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetReformDofSetAtEachStep</text>
<text text-anchor="start" x="1892" y="-1746" font-family="Helvetica,sans-Serif" font-size="10.00">Flag()</text>
<text text-anchor="start" x="1892" y="-1735" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetReformDofSetAtEachStep</text>
<text text-anchor="start" x="1892" y="-1724" font-family="Helvetica,sans-Serif" font-size="10.00">Flag()</text>
<text text-anchor="start" x="1892" y="-1713" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="1892" y="-1702" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="1892" y="-1691" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSystemMatrix()</text>
<text text-anchor="start" x="1892" y="-1680" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetResidualNorm()</text>
<text text-anchor="start" x="1892" y="-1669" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateOutputData()</text>
<text text-anchor="start" x="1892" y="-1658" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="1892" y="-1647" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="1892" y="-1636" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseSpaceType</text>
<text text-anchor="start" x="1892" y="-1625" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="1892" y="-1614" font-family="Helvetica,sans-Serif" font-size="10.00">* TBuilderAndSolverType</text>
<text text-anchor="start" x="1892" y="-1603" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="1892" y="-1592" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="1892" y="-1581" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="1892" y="-1570" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="1892" y="-1559" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="1892" y="-1548" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixPointerType</text>
<text text-anchor="start" x="1892" y="-1537" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorPointerType</text>
<text text-anchor="start" x="1892" y="-1526" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="1892" y="-1515" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="1892" y="-1504" font-family="Helvetica,sans-Serif" font-size="10.00">* mpLinearSolver</text>
<text text-anchor="start" x="1892" y="-1493" font-family="Helvetica,sans-Serif" font-size="10.00">* mpScheme</text>
<text text-anchor="start" x="1892" y="-1482" font-family="Helvetica,sans-Serif" font-size="10.00">* mpBuilderAndSolver</text>
<text text-anchor="start" x="1892" y="-1471" font-family="Helvetica,sans-Serif" font-size="10.00">* mpDx</text>
<text text-anchor="start" x="1892" y="-1460" font-family="Helvetica,sans-Serif" font-size="10.00">* mpb</text>
<text text-anchor="start" x="1892" y="-1449" font-family="Helvetica,sans-Serif" font-size="10.00">* mpA</text>
<text text-anchor="start" x="1892" y="-1438" font-family="Helvetica,sans-Serif" font-size="10.00">* mReformDofSetAtEachStep</text>
<text text-anchor="start" x="1892" y="-1427" font-family="Helvetica,sans-Serif" font-size="10.00">* mCalculateNormDxFlag</text>
<text text-anchor="start" x="1892" y="-1416" font-family="Helvetica,sans-Serif" font-size="10.00">* mInitializeWasPerformed</text>
<text text-anchor="start" x="1892" y="-1405" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxIterationNumber</text>
<text text-anchor="start" x="1892" y="-1394" font-family="Helvetica,sans-Serif" font-size="10.00">* GaussSeidelLinearStrategy()</text>
<text text-anchor="start" x="1892" y="-1383" font-family="Helvetica,sans-Serif" font-size="10.00">* ~GaussSeidelLinearStrategy()</text>
<text text-anchor="start" x="1892" y="-1372" font-family="Helvetica,sans-Serif" font-size="10.00">* SetScheme()</text>
<text text-anchor="start" x="1892" y="-1361" font-family="Helvetica,sans-Serif" font-size="10.00">* GetScheme()</text>
<text text-anchor="start" x="1892" y="-1350" font-family="Helvetica,sans-Serif" font-size="10.00">* SetBuilderAndSolver()</text>
<text text-anchor="start" x="1892" y="-1339" font-family="Helvetica,sans-Serif" font-size="10.00">* GetBuilderAndSolver()</text>
<text text-anchor="start" x="1892" y="-1328" font-family="Helvetica,sans-Serif" font-size="10.00">* SetReformDofSetAtEachStep</text>
<text text-anchor="start" x="1892" y="-1317" font-family="Helvetica,sans-Serif" font-size="10.00">Flag()</text>
<text text-anchor="start" x="1892" y="-1306" font-family="Helvetica,sans-Serif" font-size="10.00">* GetReformDofSetAtEachStep</text>
<text text-anchor="start" x="1892" y="-1295" font-family="Helvetica,sans-Serif" font-size="10.00">Flag()</text>
<text text-anchor="start" x="1892" y="-1284" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="1892" y="-1273" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="1892" y="-1262" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSystemMatrix()</text>
<text text-anchor="start" x="1892" y="-1251" font-family="Helvetica,sans-Serif" font-size="10.00">* GetResidualNorm()</text>
<text text-anchor="start" x="1892" y="-1240" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateOutputData()</text>
<text text-anchor="start" x="1892" y="-1229" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="1892" y="-1218" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="1892" y="-1207" font-family="Helvetica,sans-Serif" font-size="10.00">* MaxIterationsExceeded()</text>
<text text-anchor="start" x="1892" y="-1196" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="1892" y="-1185" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="1892" y="-1174" font-family="Helvetica,sans-Serif" font-size="10.00">* GaussSeidelLinearStrategy()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node19 -->
<g id="edge16" class="edge">
<title>Node10&#45;&gt;Node19</title>
<path fill="none" stroke="#63b8ff" d="M3163.98,-2550.77C2934.18,-2538.67 2352.61,-2474.01 2067.5,-2132 2012.11,-2065.56 1982.36,-1980.12 1967.5,-1894.67"/>
<polygon fill="none" stroke="#63b8ff" points="3163.64,-2554.26 3173.8,-2551.26 3163.99,-2547.27 3163.64,-2554.26"/>
</g>
<!-- Node20 -->
<g id="node18" class="node">
<title>Node20</title>
<g id="a_node18"><a xlink:href="../../d2/de3/class_kratos_1_1_harmonic_analysis_strategy.html" target="_top" xlink:title="Strategy for solving generalized eigenvalue problems.">
<polygon fill="white" stroke="#666666" points="2077,-1145 2077,-1917 2254,-1917 2254,-1145 2077,-1145"/>
<text text-anchor="start" x="2085" y="-1905" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::HarmonicAnalysis</text>
<text text-anchor="start" x="2085" y="-1894" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy&lt; TSparseSpace,</text>
<text text-anchor="middle" x="2165.5" y="-1883" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="#666666" points="2077,-1876 2254,-1876"/>
<text text-anchor="middle" x="2165.5" y="-1864" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="2077,-1857 2254,-1857"/>
<text text-anchor="start" x="2085" y="-1845" font-family="Helvetica,sans-Serif" font-size="10.00">+ HarmonicAnalysisStrategy()</text>
<text text-anchor="start" x="2085" y="-1834" font-family="Helvetica,sans-Serif" font-size="10.00">+ HarmonicAnalysisStrategy()</text>
<text text-anchor="start" x="2085" y="-1823" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~HarmonicAnalysisStrategy()</text>
<text text-anchor="start" x="2085" y="-1812" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetIsInitialized()</text>
<text text-anchor="start" x="2085" y="-1801" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetIsInitialized()</text>
<text text-anchor="start" x="2085" y="-1790" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetScheme()</text>
<text text-anchor="start" x="2085" y="-1779" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetScheme()</text>
<text text-anchor="start" x="2085" y="-1768" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetBuilderAndSolver()</text>
<text text-anchor="start" x="2085" y="-1757" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetBuilderAndSolver()</text>
<text text-anchor="start" x="2085" y="-1746" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetReformDofSetAtEachStep</text>
<text text-anchor="start" x="2085" y="-1735" font-family="Helvetica,sans-Serif" font-size="10.00">Flag()</text>
<text text-anchor="start" x="2085" y="-1724" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetReformDofSetAtEachStep</text>
<text text-anchor="start" x="2085" y="-1713" font-family="Helvetica,sans-Serif" font-size="10.00">Flag()</text>
<text text-anchor="start" x="2085" y="-1702" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetUseMaterialDampingFlag()</text>
<text text-anchor="start" x="2085" y="-1691" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetUseMaterialDampingFlag()</text>
<text text-anchor="start" x="2085" y="-1680" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="2085" y="-1669" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="2085" y="-1658" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="2085" y="-1647" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="2085" y="-1636" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="2085" y="-1625" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="2085" y="-1614" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemePointerType</text>
<text text-anchor="start" x="2085" y="-1603" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolverPointerType</text>
<text text-anchor="start" x="2085" y="-1592" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseSpaceType</text>
<text text-anchor="start" x="2085" y="-1581" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseVectorType</text>
<text text-anchor="start" x="2085" y="-1570" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseMatrixType</text>
<text text-anchor="start" x="2085" y="-1559" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseMatrixPointerType</text>
<text text-anchor="start" x="2085" y="-1548" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseSpaceType</text>
<text text-anchor="start" x="2085" y="-1537" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseVectorPointerType</text>
<text text-anchor="start" x="2085" y="-1526" font-family="Helvetica,sans-Serif" font-size="10.00">* ComplexType</text>
<text text-anchor="start" x="2085" y="-1515" font-family="Helvetica,sans-Serif" font-size="10.00">* ComplexVectorType</text>
<text text-anchor="start" x="2085" y="-1504" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="2085" y="-1493" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="2085" y="-1482" font-family="Helvetica,sans-Serif" font-size="10.00">* mpScheme</text>
<text text-anchor="start" x="2085" y="-1471" font-family="Helvetica,sans-Serif" font-size="10.00">* mpBuilderAndSolver</text>
<text text-anchor="start" x="2085" y="-1460" font-family="Helvetica,sans-Serif" font-size="10.00">* mInitializeWasPerformed</text>
<text text-anchor="start" x="2085" y="-1449" font-family="Helvetica,sans-Serif" font-size="10.00">* mpForceVector</text>
<text text-anchor="start" x="2085" y="-1438" font-family="Helvetica,sans-Serif" font-size="10.00">* mpModalMatrix</text>
<text text-anchor="start" x="2085" y="-1427" font-family="Helvetica,sans-Serif" font-size="10.00">* mRayleighAlpha</text>
<text text-anchor="start" x="2085" y="-1416" font-family="Helvetica,sans-Serif" font-size="10.00">* mRayleighBeta</text>
<text text-anchor="start" x="2085" y="-1405" font-family="Helvetica,sans-Serif" font-size="10.00">* mSystemDamping</text>
<text text-anchor="start" x="2085" y="-1394" font-family="Helvetica,sans-Serif" font-size="10.00">* mUseMaterialDamping</text>
<text text-anchor="start" x="2085" y="-1383" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaterialDampingRatios</text>
<text text-anchor="start" x="2085" y="-1372" font-family="Helvetica,sans-Serif" font-size="10.00">* HarmonicAnalysisStrategy()</text>
<text text-anchor="start" x="2085" y="-1361" font-family="Helvetica,sans-Serif" font-size="10.00">* HarmonicAnalysisStrategy()</text>
<text text-anchor="start" x="2085" y="-1350" font-family="Helvetica,sans-Serif" font-size="10.00">* ~HarmonicAnalysisStrategy()</text>
<text text-anchor="start" x="2085" y="-1339" font-family="Helvetica,sans-Serif" font-size="10.00">* SetIsInitialized()</text>
<text text-anchor="start" x="2085" y="-1328" font-family="Helvetica,sans-Serif" font-size="10.00">* GetIsInitialized()</text>
<text text-anchor="start" x="2085" y="-1317" font-family="Helvetica,sans-Serif" font-size="10.00">* SetScheme()</text>
<text text-anchor="start" x="2085" y="-1306" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetScheme()</text>
<text text-anchor="start" x="2085" y="-1295" font-family="Helvetica,sans-Serif" font-size="10.00">* SetBuilderAndSolver()</text>
<text text-anchor="start" x="2085" y="-1284" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetBuilderAndSolver()</text>
<text text-anchor="start" x="2085" y="-1273" font-family="Helvetica,sans-Serif" font-size="10.00">* SetReformDofSetAtEachStep</text>
<text text-anchor="start" x="2085" y="-1262" font-family="Helvetica,sans-Serif" font-size="10.00">Flag()</text>
<text text-anchor="start" x="2085" y="-1251" font-family="Helvetica,sans-Serif" font-size="10.00">* GetReformDofSetAtEachStep</text>
<text text-anchor="start" x="2085" y="-1240" font-family="Helvetica,sans-Serif" font-size="10.00">Flag()</text>
<text text-anchor="start" x="2085" y="-1229" font-family="Helvetica,sans-Serif" font-size="10.00">* SetUseMaterialDampingFlag()</text>
<text text-anchor="start" x="2085" y="-1218" font-family="Helvetica,sans-Serif" font-size="10.00">* GetUseMaterialDampingFlag()</text>
<text text-anchor="start" x="2085" y="-1207" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="2085" y="-1196" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="2085" y="-1185" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="2085" y="-1174" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="2085" y="-1163" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="2085" y="-1152" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignVariables()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node20 -->
<g id="edge17" class="edge">
<title>Node10&#45;&gt;Node20</title>
<path fill="none" stroke="#63b8ff" d="M3163.96,-2543.3C2961.43,-2516.41 2491.95,-2424.17 2262.5,-2132 2214.11,-2070.38 2185.63,-1994.03 2169.58,-1916.68"/>
<polygon fill="none" stroke="#63b8ff" points="3163.29,-2546.74 3173.66,-2544.56 3164.2,-2539.8 3163.29,-2546.74"/>
</g>
<!-- Node21 -->
<g id="node19" class="node">
<title>Node21</title>
<g id="a_node19"><a xlink:href="../../d8/d3e/class_kratos_1_1_helmholtz_strategy.html" target="_top" xlink:title="Short class definition.">
<polygon fill="white" stroke="#666666" points="2272,-1315.5 2272,-1746.5 2443,-1746.5 2443,-1315.5 2272,-1315.5"/>
<text text-anchor="start" x="2280" y="-1734.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::HelmholtzStrategy</text>
<text text-anchor="start" x="2280" y="-1723.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="2357.5" y="-1712.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="#666666" points="2272,-1705.5 2443,-1705.5"/>
<text text-anchor="middle" x="2357.5" y="-1693.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="2272,-1686.5 2443,-1686.5"/>
<text text-anchor="start" x="2280" y="-1674.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ HelmholtzStrategy()</text>
<text text-anchor="start" x="2280" y="-1663.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~HelmholtzStrategy()</text>
<text text-anchor="start" x="2280" y="-1652.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="2280" y="-1641.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="2280" y="-1630.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSystemMatrix()</text>
<text text-anchor="start" x="2280" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSystemVector()</text>
<text text-anchor="start" x="2280" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSolutionVector()</text>
<text text-anchor="start" x="2280" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ExportSystem()</text>
<text text-anchor="start" x="2280" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetStrategy()</text>
<text text-anchor="start" x="2280" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="2280" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TBuilderAndSolverType</text>
<text text-anchor="start" x="2280" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="2280" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="2280" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemeType</text>
<text text-anchor="start" x="2280" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="2280" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="2280" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpscheme</text>
<text text-anchor="start" x="2280" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpstrategy</text>
<text text-anchor="start" x="2280" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpbulider_and_solver</text>
<text text-anchor="start" x="2280" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mecho_level</text>
<text text-anchor="start" x="2280" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mreform_dof_set_at</text>
<text text-anchor="start" x="2280" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">_each_step</text>
<text text-anchor="start" x="2280" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mcompute_reactions</text>
<text text-anchor="start" x="2280" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">* HelmholtzStrategy()</text>
<text text-anchor="start" x="2280" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~HelmholtzStrategy()</text>
<text text-anchor="start" x="2280" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="2280" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="2280" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSystemMatrix()</text>
<text text-anchor="start" x="2280" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSystemVector()</text>
<text text-anchor="start" x="2280" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSolutionVector()</text>
<text text-anchor="start" x="2280" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ExportSystem()</text>
<text text-anchor="start" x="2280" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetStrategy()</text>
<text text-anchor="start" x="2280" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">* HelmholtzStrategy()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node21 -->
<g id="edge18" class="edge">
<title>Node10&#45;&gt;Node21</title>
<path fill="none" stroke="#63b8ff" d="M3163.96,-2533.02C2990.7,-2490.84 2628.66,-2376.93 2452.5,-2132 2372.91,-2021.34 2349.47,-1869.47 2345.77,-1746.22"/>
<polygon fill="none" stroke="#63b8ff" points="3163.08,-2536.41 3173.62,-2535.34 3164.72,-2529.6 3163.08,-2536.41"/>
</g>
<!-- Node22 -->
<g id="node20" class="node">
<title>Node22</title>
<g id="a_node20"><a xlink:href="../../d2/d9e/class_kratos_1_1_lap_modified_linear_strategy.html" target="_top" xlink:title="Short class definition.">
<polygon fill="white" stroke="#666666" points="2461.5,-1161.5 2461.5,-1900.5 2635.5,-1900.5 2635.5,-1161.5 2461.5,-1161.5"/>
<text text-anchor="start" x="2469.5" y="-1888.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::LapModifiedLinear</text>
<text text-anchor="start" x="2469.5" y="-1877.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy&lt; TDim, TSparseSpace,</text>
<text text-anchor="middle" x="2548.5" y="-1866.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="#666666" points="2461.5,-1859.5 2635.5,-1859.5"/>
<text text-anchor="middle" x="2548.5" y="-1847.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="2461.5,-1840.5 2635.5,-1840.5"/>
<text text-anchor="start" x="2469.5" y="-1828.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LapModifiedLinearStrategy()</text>
<text text-anchor="start" x="2469.5" y="-1817.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LapModifiedLinearStrategy()</text>
<text text-anchor="start" x="2469.5" y="-1806.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~LapModifiedLinearStrategy()</text>
<text text-anchor="start" x="2469.5" y="-1795.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetScheme()</text>
<text text-anchor="start" x="2469.5" y="-1784.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetScheme()</text>
<text text-anchor="start" x="2469.5" y="-1773.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetBuilderAndSolver()</text>
<text text-anchor="start" x="2469.5" y="-1762.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetBuilderAndSolver()</text>
<text text-anchor="start" x="2469.5" y="-1751.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetCalculateReactionsFlag()</text>
<text text-anchor="start" x="2469.5" y="-1740.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetCalculateReactionsFlag()</text>
<text text-anchor="start" x="2469.5" y="-1729.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetReformDofSetAtEachStep</text>
<text text-anchor="start" x="2469.5" y="-1718.5" font-family="Helvetica,sans-Serif" font-size="10.00">Flag()</text>
<text text-anchor="start" x="2469.5" y="-1707.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="2469.5" y="-1696.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="2469.5" y="-1685.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="2469.5" y="-1674.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseSpaceType</text>
<text text-anchor="start" x="2469.5" y="-1663.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="2469.5" y="-1652.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TBuilderAndSolverType</text>
<text text-anchor="start" x="2469.5" y="-1641.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="2469.5" y="-1630.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="2469.5" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="2469.5" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="2469.5" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="2469.5" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixPointerType</text>
<text text-anchor="start" x="2469.5" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorPointerType</text>
<text text-anchor="start" x="2469.5" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodesArrayType</text>
<text text-anchor="start" x="2469.5" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="2469.5" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="2469.5" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpLinearSolver</text>
<text text-anchor="start" x="2469.5" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpScheme</text>
<text text-anchor="start" x="2469.5" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpBuilderAndSolver</text>
<text text-anchor="start" x="2469.5" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpD</text>
<text text-anchor="start" x="2469.5" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpDx</text>
<text text-anchor="start" x="2469.5" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpb</text>
<text text-anchor="start" x="2469.5" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpA</text>
<text text-anchor="start" x="2469.5" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mReformDofSetAtEachStep</text>
<text text-anchor="start" x="2469.5" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mCalculateNormDxFlag</text>
<text text-anchor="start" x="2469.5" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mCalculateReactionsFlag</text>
<text text-anchor="start" x="2469.5" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mSolutionStepIsInitialized</text>
<text text-anchor="start" x="2469.5" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mInitializeWasPerformed</text>
<text text-anchor="start" x="2469.5" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxIterationNumber</text>
<text text-anchor="start" x="2469.5" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LapModifiedLinearStrategy()</text>
<text text-anchor="start" x="2469.5" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LapModifiedLinearStrategy()</text>
<text text-anchor="start" x="2469.5" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~LapModifiedLinearStrategy()</text>
<text text-anchor="start" x="2469.5" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetScheme()</text>
<text text-anchor="start" x="2469.5" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetScheme()</text>
<text text-anchor="start" x="2469.5" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetBuilderAndSolver()</text>
<text text-anchor="start" x="2469.5" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetBuilderAndSolver()</text>
<text text-anchor="start" x="2469.5" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetCalculateReactionsFlag()</text>
<text text-anchor="start" x="2469.5" y="-1300.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetCalculateReactionsFlag()</text>
<text text-anchor="start" x="2469.5" y="-1289.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetReformDofSetAtEachStep</text>
<text text-anchor="start" x="2469.5" y="-1278.5" font-family="Helvetica,sans-Serif" font-size="10.00">Flag()</text>
<text text-anchor="start" x="2469.5" y="-1267.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 7 more...</text>
<text text-anchor="start" x="2469.5" y="-1256.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="2469.5" y="-1245.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="2469.5" y="-1234.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MaxIterationsExceeded()</text>
<text text-anchor="start" x="2469.5" y="-1223.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="2469.5" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AddFSILaplacian()</text>
<text text-anchor="start" x="2469.5" y="-1201.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConstructMatrixStructure</text>
<text text-anchor="start" x="2469.5" y="-1190.5" font-family="Helvetica,sans-Serif" font-size="10.00">_FluidDivergenceMatrixD()</text>
<text text-anchor="start" x="2469.5" y="-1179.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BuildAuxiliariesFSI()</text>
<text text-anchor="start" x="2469.5" y="-1168.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LapModifiedLinearStrategy()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node22 -->
<g id="edge19" class="edge">
<title>Node10&#45;&gt;Node22</title>
<path fill="none" stroke="#63b8ff" d="M3164.84,-2517.04C3025.55,-2458.59 2769.91,-2329.97 2644.5,-2132 2600.89,-2063.16 2574.86,-1981.23 2559.76,-1900.38"/>
<polygon fill="none" stroke="#63b8ff" points="3163.1,-2520.1 3173.67,-2520.71 3165.78,-2513.64 3163.1,-2520.1"/>
</g>
<!-- Node23 -->
<g id="node21" class="node">
<title>Node23</title>
<g id="a_node21"><a xlink:href="../../d3/d6a/class_kratos_1_1_laplacian_mesh_moving_strategy.html" target="_top" xlink:title="Short class definition.">
<polygon fill="white" stroke="#666666" points="2653.5,-1337.5 2653.5,-1724.5 2847.5,-1724.5 2847.5,-1337.5 2653.5,-1337.5"/>
<text text-anchor="start" x="2661.5" y="-1712.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::LaplacianMeshMoving</text>
<text text-anchor="start" x="2661.5" y="-1701.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy&lt; TSparseSpace,</text>
<text text-anchor="middle" x="2750.5" y="-1690.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="#666666" points="2653.5,-1683.5 2847.5,-1683.5"/>
<text text-anchor="middle" x="2750.5" y="-1671.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="2653.5,-1664.5 2847.5,-1664.5"/>
<text text-anchor="start" x="2661.5" y="-1652.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ LaplacianMeshMovingStrategy()</text>
<text text-anchor="start" x="2661.5" y="-1641.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~LaplacianMeshMovingStrategy()</text>
<text text-anchor="start" x="2661.5" y="-1630.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="2661.5" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="2661.5" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="2661.5" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TBuilderAndSolverType</text>
<text text-anchor="start" x="2661.5" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemeType</text>
<text text-anchor="start" x="2661.5" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="2661.5" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="2661.5" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpmesh_model_part</text>
<text text-anchor="start" x="2661.5" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mstrategy_x</text>
<text text-anchor="start" x="2661.5" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mstrategy_y</text>
<text text-anchor="start" x="2661.5" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mstrategy_z</text>
<text text-anchor="start" x="2661.5" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpbuilder_and_solver_x</text>
<text text-anchor="start" x="2661.5" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpbuilder_and_solver_y</text>
<text text-anchor="start" x="2661.5" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpbuilder_and_solver_z</text>
<text text-anchor="start" x="2661.5" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mreform_dof_set_at</text>
<text text-anchor="start" x="2661.5" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">_each_step</text>
<text text-anchor="start" x="2661.5" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mcompute_reactions</text>
<text text-anchor="start" x="2661.5" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mtime_order</text>
<text text-anchor="start" x="2661.5" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mecho_level</text>
<text text-anchor="start" x="2661.5" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mcalculate_mesh_velocities</text>
<text text-anchor="start" x="2661.5" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mreinitialize_model</text>
<text text-anchor="start" x="2661.5" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">_part_at_each_step</text>
<text text-anchor="start" x="2661.5" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LaplacianMeshMovingStrategy()</text>
<text text-anchor="start" x="2661.5" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~LaplacianMeshMovingStrategy()</text>
<text text-anchor="start" x="2661.5" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="2661.5" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="2661.5" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LaplacianMeshMovingStrategy()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node23 -->
<g id="edge20" class="edge">
<title>Node10&#45;&gt;Node23</title>
<path fill="none" stroke="#63b8ff" d="M3166.34,-2483.33C3072.04,-2407.59 2930.59,-2278.02 2856.5,-2132 2792.3,-2005.48 2766.28,-1846.83 2756.05,-1724.46"/>
<polygon fill="none" stroke="#63b8ff" points="3164.13,-2486.05 3174.13,-2489.55 3168.5,-2480.57 3164.13,-2486.05"/>
</g>
<!-- Node24 -->
<g id="node22" class="node">
<title>Node24</title>
<g id="a_node22"><a xlink:href="../../d0/d83/class_kratos_1_1_m_p_m_explicit_strategy.html" target="_top" xlink:title="Short class definition.">
<polygon fill="white" stroke="#666666" points="2865.5,-1348.5 2865.5,-1713.5 3047.5,-1713.5 3047.5,-1348.5 2865.5,-1348.5"/>
<text text-anchor="start" x="2873.5" y="-1701.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::MPMExplicitStrategy</text>
<text text-anchor="start" x="2873.5" y="-1690.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="2956.5" y="-1679.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="#666666" points="2865.5,-1672.5 3047.5,-1672.5"/>
<text text-anchor="middle" x="2956.5" y="-1660.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="2865.5,-1653.5 3047.5,-1653.5"/>
<text text-anchor="start" x="2873.5" y="-1641.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="2873.5" y="-1630.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="2873.5" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ MPMExplicitStrategy()</text>
<text text-anchor="start" x="2873.5" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~MPMExplicitStrategy()</text>
<text text-anchor="start" x="2873.5" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetScheme()</text>
<text text-anchor="start" x="2873.5" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetScheme()</text>
<text text-anchor="start" x="2873.5" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="2873.5" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="2873.5" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="2873.5" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="2873.5" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetKeepSystemConstantDuring</text>
<text text-anchor="start" x="2873.5" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">Iterations()</text>
<text text-anchor="start" x="2873.5" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetKeepSystemConstantDuring</text>
<text text-anchor="start" x="2873.5" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">Iterations()</text>
<text text-anchor="start" x="2873.5" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpScheme</text>
<text text-anchor="start" x="2873.5" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mReformDofSetAtEachStep</text>
<text text-anchor="start" x="2873.5" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mCalculateReactionsFlag</text>
<text text-anchor="start" x="2873.5" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mSolutionStepIsInitialized</text>
<text text-anchor="start" x="2873.5" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mInitializeWasPerformed</text>
<text text-anchor="start" x="2873.5" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mKeepSystemConstantDuring</text>
<text text-anchor="start" x="2873.5" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">Iterations</text>
<text text-anchor="start" x="2873.5" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFinalizeSolutionStep</text>
<text text-anchor="start" x="2873.5" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="2873.5" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="2873.5" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateAndAddRHS()</text>
<text text-anchor="start" x="2873.5" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateReactions()</text>
<text text-anchor="start" x="2873.5" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MPMExplicitStrategy()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node24 -->
<g id="edge21" class="edge">
<title>Node10&#45;&gt;Node24</title>
<path fill="none" stroke="#63b8ff" d="M3169.88,-2393.91C3129.68,-2316.9 3085.09,-2221.9 3056.5,-2132 3012.93,-1995.01 2987.42,-1834.06 2973.08,-1713.36"/>
<polygon fill="none" stroke="#63b8ff" points="3166.57,-2395.12 3174.31,-2402.35 3172.76,-2391.86 3166.57,-2395.12"/>
</g>
<!-- Node25 -->
<g id="node23" class="node">
<title>Node25</title>
<g id="a_node23"><a xlink:href="../../d0/dfa/class_kratos_1_1_mechanical_explicit_strategy.html" target="_top" xlink:title="This strategy is used for the explicit time integration.">
<polygon fill="white" stroke="#666666" points="3065.5,-1150.5 3065.5,-1911.5 3241.5,-1911.5 3241.5,-1150.5 3065.5,-1150.5"/>
<text text-anchor="start" x="3073.5" y="-1899.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::MechanicalExplicit</text>
<text text-anchor="start" x="3073.5" y="-1888.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy&lt; TSparseSpace,</text>
<text text-anchor="middle" x="3153.5" y="-1877.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="#666666" points="3065.5,-1870.5 3241.5,-1870.5"/>
<text text-anchor="start" x="3073.5" y="-1858.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpScheme</text>
<text text-anchor="start" x="3073.5" y="-1847.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mReformDofSetAtEachStep</text>
<text text-anchor="start" x="3073.5" y="-1836.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mCalculateReactionsFlag</text>
<text text-anchor="start" x="3073.5" y="-1825.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mInitializeWasPerformed</text>
<polyline fill="none" stroke="#666666" points="3065.5,-1818.5 3241.5,-1818.5"/>
<text text-anchor="start" x="3073.5" y="-1806.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ MechanicalExplicitStrategy()</text>
<text text-anchor="start" x="3073.5" y="-1795.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~MechanicalExplicitStrategy()</text>
<text text-anchor="start" x="3073.5" y="-1784.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetScheme()</text>
<text text-anchor="start" x="3073.5" y="-1773.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetScheme()</text>
<text text-anchor="start" x="3073.5" y="-1762.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetInitializePerformedFlag()</text>
<text text-anchor="start" x="3073.5" y="-1751.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetInitializePerformedFlag()</text>
<text text-anchor="start" x="3073.5" y="-1740.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetCalculateReactionsFlag()</text>
<text text-anchor="start" x="3073.5" y="-1729.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetCalculateReactionsFlag()</text>
<text text-anchor="start" x="3073.5" y="-1718.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetReformDofSetAtEachStep</text>
<text text-anchor="start" x="3073.5" y="-1707.5" font-family="Helvetica,sans-Serif" font-size="10.00">Flag()</text>
<text text-anchor="start" x="3073.5" y="-1696.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetReformDofSetAtEachStep</text>
<text text-anchor="start" x="3073.5" y="-1685.5" font-family="Helvetica,sans-Serif" font-size="10.00">Flag()</text>
<text text-anchor="start" x="3073.5" y="-1674.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="3073.5" y="-1663.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="3073.5" y="-1652.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="3073.5" y="-1641.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="3073.5" y="-1630.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="3073.5" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="3073.5" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00"># MechanicalExplicitStrategy()</text>
<text text-anchor="start" x="3073.5" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="3073.5" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="3073.5" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="3073.5" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="3073.5" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="3073.5" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixPointerType</text>
<text text-anchor="start" x="3073.5" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorPointerType</text>
<text text-anchor="start" x="3073.5" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodesArrayType</text>
<text text-anchor="start" x="3073.5" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElementsArrayType</text>
<text text-anchor="start" x="3073.5" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ConditionsArrayType</text>
<text text-anchor="start" x="3073.5" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="3073.5" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofType</text>
<text text-anchor="start" x="3073.5" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofPointerType</text>
<text text-anchor="start" x="3073.5" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="3073.5" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="3073.5" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpScheme</text>
<text text-anchor="start" x="3073.5" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mReformDofSetAtEachStep</text>
<text text-anchor="start" x="3073.5" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mCalculateReactionsFlag</text>
<text text-anchor="start" x="3073.5" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mInitializeWasPerformed</text>
<text text-anchor="start" x="3073.5" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MechanicalExplicitStrategy()</text>
<text text-anchor="start" x="3073.5" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~MechanicalExplicitStrategy()</text>
<text text-anchor="start" x="3073.5" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetScheme()</text>
<text text-anchor="start" x="3073.5" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetScheme()</text>
<text text-anchor="start" x="3073.5" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetInitializePerformedFlag()</text>
<text text-anchor="start" x="3073.5" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetInitializePerformedFlag()</text>
<text text-anchor="start" x="3073.5" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetCalculateReactionsFlag()</text>
<text text-anchor="start" x="3073.5" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetCalculateReactionsFlag()</text>
<text text-anchor="start" x="3073.5" y="-1300.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetReformDofSetAtEachStep</text>
<text text-anchor="start" x="3073.5" y="-1289.5" font-family="Helvetica,sans-Serif" font-size="10.00">Flag()</text>
<text text-anchor="start" x="3073.5" y="-1278.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetReformDofSetAtEachStep</text>
<text text-anchor="start" x="3073.5" y="-1267.5" font-family="Helvetica,sans-Serif" font-size="10.00">Flag()</text>
<text text-anchor="start" x="3073.5" y="-1256.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="3073.5" y="-1245.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="3073.5" y="-1234.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="3073.5" y="-1223.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="3073.5" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="3073.5" y="-1201.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="3073.5" y="-1190.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeExplicitConstraint</text>
<text text-anchor="start" x="3073.5" y="-1179.5" font-family="Helvetica,sans-Serif" font-size="10.00">Constribution()</text>
<text text-anchor="start" x="3073.5" y="-1168.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateReactions()</text>
<text text-anchor="start" x="3073.5" y="-1157.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MechanicalExplicitStrategy()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node25 -->
<g id="edge22" class="edge">
<title>Node10&#45;&gt;Node25</title>
<path fill="none" stroke="#63b8ff" d="M3233.43,-2295.04C3221.24,-2178.66 3206.6,-2038.96 3193.21,-1911.07"/>
<polygon fill="none" stroke="#63b8ff" points="3229.92,-2295.14 3234.44,-2304.72 3236.88,-2294.41 3229.92,-2295.14"/>
</g>
<!-- Node28 -->
<g id="node25" class="node">
<title>Node28</title>
<g id="a_node25"><a xlink:href="../../de/d10/class_kratos_1_1_nodal_two_step_v_p_strategy.html" target="_top" xlink:title=" ">
<polygon fill="white" stroke="#666666" points="3260,-1024 3260,-2038 3475,-2038 3475,-1024 3260,-1024"/>
<text text-anchor="start" x="3268" y="-2026" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::NodalTwoStepVPStrategy</text>
<text text-anchor="start" x="3268" y="-2015" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="3367.5" y="-2004" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="#666666" points="3260,-1997 3475,-1997"/>
<text text-anchor="start" x="3268" y="-1985" font-family="Helvetica,sans-Serif" font-size="10.00"># mVelocityTolerance</text>
<text text-anchor="start" x="3268" y="-1974" font-family="Helvetica,sans-Serif" font-size="10.00"># mPressureTolerance</text>
<text text-anchor="start" x="3268" y="-1963" font-family="Helvetica,sans-Serif" font-size="10.00"># mMaxPressureIter</text>
<text text-anchor="start" x="3268" y="-1952" font-family="Helvetica,sans-Serif" font-size="10.00"># mDomainSize</text>
<text text-anchor="start" x="3268" y="-1941" font-family="Helvetica,sans-Serif" font-size="10.00"># mTimeOrder</text>
<text text-anchor="start" x="3268" y="-1930" font-family="Helvetica,sans-Serif" font-size="10.00"># mReformDofSet</text>
<text text-anchor="start" x="3268" y="-1919" font-family="Helvetica,sans-Serif" font-size="10.00"># mpMomentumStrategy</text>
<text text-anchor="start" x="3268" y="-1908" font-family="Helvetica,sans-Serif" font-size="10.00"># mpPressureStrategy</text>
<polyline fill="none" stroke="#666666" points="3260,-1901 3475,-1901"/>
<text text-anchor="start" x="3268" y="-1889" font-family="Helvetica,sans-Serif" font-size="10.00">+ NodalTwoStepVPStrategy()</text>
<text text-anchor="start" x="3268" y="-1878" font-family="Helvetica,sans-Serif" font-size="10.00">+ NodalTwoStepVPStrategy()</text>
<text text-anchor="start" x="3268" y="-1867" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~NodalTwoStepVPStrategy()</text>
<text text-anchor="start" x="3268" y="-1856" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="3268" y="-1845" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetTimeCoefficients()</text>
<text text-anchor="start" x="3268" y="-1834" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="3268" y="-1823" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="3268" y="-1812" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="3268" y="-1801" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitialAssignFluidMaterial</text>
<text text-anchor="start" x="3268" y="-1790" font-family="Helvetica,sans-Serif" font-size="10.00">ToEachNode()</text>
<text text-anchor="start" x="3268" y="-1779" font-family="Helvetica,sans-Serif" font-size="10.00">+ ComputeNodalVolume()</text>
<text text-anchor="start" x="3268" y="-1768" font-family="Helvetica,sans-Serif" font-size="10.00">and 20 more...</text>
<text text-anchor="start" x="3268" y="-1757" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="3268" y="-1746" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="3268" y="-1735" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="3268" y="-1724" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="3268" y="-1713" font-family="Helvetica,sans-Serif" font-size="10.00"># SolveMomentumIteration()</text>
<text text-anchor="start" x="3268" y="-1702" font-family="Helvetica,sans-Serif" font-size="10.00"># SolveContinuityIteration()</text>
<text text-anchor="start" x="3268" y="-1691" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckVelocityConvergence()</text>
<text text-anchor="start" x="3268" y="-1680" font-family="Helvetica,sans-Serif" font-size="10.00"># ComputeVelocityNorm()</text>
<text text-anchor="start" x="3268" y="-1669" font-family="Helvetica,sans-Serif" font-size="10.00"># ComputePressureNorm()</text>
<text text-anchor="start" x="3268" y="-1658" font-family="Helvetica,sans-Serif" font-size="10.00"># ComputeErrorL2NormCaseImposedG()</text>
<text text-anchor="start" x="3268" y="-1647" font-family="Helvetica,sans-Serif" font-size="10.00"># ComputeErrorL2NormCasePoiseuille()</text>
<text text-anchor="start" x="3268" y="-1636" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckPressureConvergence()</text>
<text text-anchor="start" x="3268" y="-1625" font-family="Helvetica,sans-Serif" font-size="10.00"># FixTimeStepMomentum()</text>
<text text-anchor="start" x="3268" y="-1614" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckMomentumConvergence()</text>
<text text-anchor="start" x="3268" y="-1603" font-family="Helvetica,sans-Serif" font-size="10.00"># FixTimeStepContinuity()</text>
<text text-anchor="start" x="3268" y="-1592" font-family="Helvetica,sans-Serif" font-size="10.00"># InitializeStrategy()</text>
<text text-anchor="start" x="3268" y="-1581" font-family="Helvetica,sans-Serif" font-size="10.00"># operator=()</text>
<text text-anchor="start" x="3268" y="-1570" font-family="Helvetica,sans-Serif" font-size="10.00"># NodalTwoStepVPStrategy()</text>
<text text-anchor="start" x="3268" y="-1559" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="3268" y="-1548" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="3268" y="-1537" font-family="Helvetica,sans-Serif" font-size="10.00">* NodeType</text>
<text text-anchor="start" x="3268" y="-1526" font-family="Helvetica,sans-Serif" font-size="10.00">* GeometryType</text>
<text text-anchor="start" x="3268" y="-1515" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="3268" y="-1504" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="3268" y="-1493" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="3268" y="-1482" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="3268" y="-1471" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="3268" y="-1460" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="3268" y="-1449" font-family="Helvetica,sans-Serif" font-size="10.00">and 6 more...</text>
<text text-anchor="start" x="3268" y="-1438" font-family="Helvetica,sans-Serif" font-size="10.00">* mVelocityTolerance</text>
<text text-anchor="start" x="3268" y="-1427" font-family="Helvetica,sans-Serif" font-size="10.00">* mPressureTolerance</text>
<text text-anchor="start" x="3268" y="-1416" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxPressureIter</text>
<text text-anchor="start" x="3268" y="-1405" font-family="Helvetica,sans-Serif" font-size="10.00">* mDomainSize</text>
<text text-anchor="start" x="3268" y="-1394" font-family="Helvetica,sans-Serif" font-size="10.00">* mTimeOrder</text>
<text text-anchor="start" x="3268" y="-1383" font-family="Helvetica,sans-Serif" font-size="10.00">* mReformDofSet</text>
<text text-anchor="start" x="3268" y="-1372" font-family="Helvetica,sans-Serif" font-size="10.00">* mpMomentumStrategy</text>
<text text-anchor="start" x="3268" y="-1361" font-family="Helvetica,sans-Serif" font-size="10.00">* mpPressureStrategy</text>
<text text-anchor="start" x="3268" y="-1350" font-family="Helvetica,sans-Serif" font-size="10.00">* NodalTwoStepVPStrategy()</text>
<text text-anchor="start" x="3268" y="-1339" font-family="Helvetica,sans-Serif" font-size="10.00">* NodalTwoStepVPStrategy()</text>
<text text-anchor="start" x="3268" y="-1328" font-family="Helvetica,sans-Serif" font-size="10.00">* ~NodalTwoStepVPStrategy()</text>
<text text-anchor="start" x="3268" y="-1317" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="3268" y="-1306" font-family="Helvetica,sans-Serif" font-size="10.00">* SetTimeCoefficients()</text>
<text text-anchor="start" x="3268" y="-1295" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="3268" y="-1284" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="3268" y="-1273" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="3268" y="-1262" font-family="Helvetica,sans-Serif" font-size="10.00">* InitialAssignFluidMaterial</text>
<text text-anchor="start" x="3268" y="-1251" font-family="Helvetica,sans-Serif" font-size="10.00">ToEachNode()</text>
<text text-anchor="start" x="3268" y="-1240" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeNodalVolume()</text>
<text text-anchor="start" x="3268" y="-1229" font-family="Helvetica,sans-Serif" font-size="10.00">and 20 more...</text>
<text text-anchor="start" x="3268" y="-1218" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="3268" y="-1207" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="3268" y="-1196" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="3268" y="-1185" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="3268" y="-1174" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveMomentumIteration()</text>
<text text-anchor="start" x="3268" y="-1163" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveContinuityIteration()</text>
<text text-anchor="start" x="3268" y="-1152" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckVelocityConvergence()</text>
<text text-anchor="start" x="3268" y="-1141" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeVelocityNorm()</text>
<text text-anchor="start" x="3268" y="-1130" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputePressureNorm()</text>
<text text-anchor="start" x="3268" y="-1119" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeErrorL2NormCaseImposedG()</text>
<text text-anchor="start" x="3268" y="-1108" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeErrorL2NormCasePoiseuille()</text>
<text text-anchor="start" x="3268" y="-1097" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckPressureConvergence()</text>
<text text-anchor="start" x="3268" y="-1086" font-family="Helvetica,sans-Serif" font-size="10.00">* FixTimeStepMomentum()</text>
<text text-anchor="start" x="3268" y="-1075" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckMomentumConvergence()</text>
<text text-anchor="start" x="3268" y="-1064" font-family="Helvetica,sans-Serif" font-size="10.00">* FixTimeStepContinuity()</text>
<text text-anchor="start" x="3268" y="-1053" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeStrategy()</text>
<text text-anchor="start" x="3268" y="-1042" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="3268" y="-1031" font-family="Helvetica,sans-Serif" font-size="10.00">* NodalTwoStepVPStrategy()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node28 -->
<g id="edge24" class="edge">
<title>Node10&#45;&gt;Node28</title>
<path fill="none" stroke="#63b8ff" d="M3287.56,-2295.19C3295.8,-2216.48 3305.17,-2127.08 3314.51,-2037.88"/>
<polygon fill="none" stroke="#63b8ff" points="3284.12,-2294.41 3286.56,-2304.72 3291.08,-2295.14 3284.12,-2294.41"/>
</g>
<!-- Node30 -->
<g id="node27" class="node">
<title>Node30</title>
<g id="a_node27"><a xlink:href="../../d6/d62/class_kratos_1_1_p_f_e_m2_monolithic_slip_strategy.html" target="_top" xlink:title=" ">
<polygon fill="white" stroke="#666666" points="3493.5,-1304.5 3493.5,-1757.5 3669.5,-1757.5 3669.5,-1304.5 3493.5,-1304.5"/>
<text text-anchor="start" x="3501.5" y="-1745.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::PFEM2MonolithicSlip</text>
<text text-anchor="start" x="3501.5" y="-1734.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy&lt; TSparseSpace,</text>
<text text-anchor="middle" x="3581.5" y="-1723.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="#666666" points="3493.5,-1716.5 3669.5,-1716.5"/>
<text text-anchor="start" x="3501.5" y="-1704.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ DomainSize</text>
<text text-anchor="start" x="3501.5" y="-1693.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ mPressureTolerance</text>
<text text-anchor="start" x="3501.5" y="-1682.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ mMaxVelocityIter</text>
<text text-anchor="start" x="3501.5" y="-1671.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ mMaxPressureIter</text>
<text text-anchor="start" x="3501.5" y="-1660.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ mDomainSize</text>
<text text-anchor="start" x="3501.5" y="-1649.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ mTimeOrder</text>
<text text-anchor="start" x="3501.5" y="-1638.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ mPredictorCorrector</text>
<text text-anchor="start" x="3501.5" y="-1627.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ mUseSlipConditions</text>
<text text-anchor="start" x="3501.5" y="-1616.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ mReformDofSet</text>
<text text-anchor="start" x="3501.5" y="-1605.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ mpMomentumStrategy</text>
<text text-anchor="start" x="3501.5" y="-1594.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ mpPressureStrategy</text>
<text text-anchor="start" x="3501.5" y="-1583.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ mExtraIterationSteps</text>
<text text-anchor="start" x="3501.5" y="-1572.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ mrPeriodicIdVar</text>
<polyline fill="none" stroke="#666666" points="3493.5,-1565.5 3669.5,-1565.5"/>
<text text-anchor="start" x="3501.5" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeStrategy()</text>
<text text-anchor="start" x="3501.5" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="3501.5" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FSStrategy()</text>
<text text-anchor="start" x="3501.5" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Pointer</text>
<text text-anchor="start" x="3501.5" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="3501.5" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="3501.5" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="3501.5" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="3501.5" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="3501.5" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="3501.5" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="3501.5" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StrategyPointerType</text>
<text text-anchor="start" x="3501.5" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolverSettingsType</text>
<text text-anchor="start" x="3501.5" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">* pLinearSolver</text>
<text text-anchor="start" x="3501.5" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ReformDofSet</text>
<text text-anchor="start" x="3501.5" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Tol</text>
<text text-anchor="start" x="3501.5" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MaxIterations</text>
<text text-anchor="start" x="3501.5" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PFEM2MonolithicSlipStrategy()</text>
<text text-anchor="start" x="3501.5" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PFEM2MonolithicSlipStrategy()</text>
<text text-anchor="start" x="3501.5" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvingStrategyPython()</text>
<text text-anchor="start" x="3501.5" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeStrategy()</text>
<text text-anchor="start" x="3501.5" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="3501.5" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FSStrategy()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node30 -->
<g id="edge26" class="edge">
<title>Node10&#45;&gt;Node30</title>
<path fill="none" stroke="#63b8ff" d="M3283.7,-2295.06C3298.28,-2248.12 3320.61,-2203.02 3354.5,-2168 3395.89,-2125.22 3443.79,-2176.34 3483.5,-2132 3573.45,-2031.55 3598.03,-1881.94 3600.08,-1757.25"/>
<polygon fill="none" stroke="#63b8ff" points="3280.35,-2294.03 3280.86,-2304.61 3287.06,-2296.02 3280.35,-2294.03"/>
</g>
<!-- Node31 -->
<g id="node28" class="node">
<title>Node31</title>
<g id="a_node28"><a xlink:href="../../df/dd0/class_kratos_1_1_p_f_e_m2___explicit___strategy.html" target="_top" xlink:title=" ">
<polygon fill="white" stroke="#666666" points="3688,-1414.5 3688,-1647.5 3873,-1647.5 3873,-1414.5 3688,-1414.5"/>
<text text-anchor="start" x="3696" y="-1635.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::PFEM2_Explicit</text>
<text text-anchor="start" x="3696" y="-1624.5" font-family="Helvetica,sans-Serif" font-size="10.00">_Strategy&lt; TSparseSpace,</text>
<text text-anchor="middle" x="3780.5" y="-1613.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="#666666" points="3688,-1606.5 3873,-1606.5"/>
<text text-anchor="middle" x="3780.5" y="-1594.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="3688,-1587.5 3873,-1587.5"/>
<text text-anchor="start" x="3696" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="3696" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="3696" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PFEM2_Explicit_Strategy()</text>
<text text-anchor="start" x="3696" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~PFEM2_Explicit_Strategy()</text>
<text text-anchor="start" x="3696" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CreatePartition()</text>
<text text-anchor="start" x="3696" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ AssembleLoop()</text>
<text text-anchor="start" x="3696" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="3696" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="3696" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetToZeroVariablesInViscous</text>
<text text-anchor="start" x="3696" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">Iterations()</text>
<text text-anchor="start" x="3696" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ UpdateLoopForViscousIterations</text>
<text text-anchor="start" x="3696" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">WithNormalization()</text>
<text text-anchor="start" x="3696" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetToZeroVariablesInPresure</text>
<text text-anchor="start" x="3696" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">Iterations()</text>
<text text-anchor="start" x="3696" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 11 more...</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node31 -->
<g id="edge27" class="edge">
<title>Node10&#45;&gt;Node31</title>
<path fill="none" stroke="#63b8ff" d="M3278.04,-2295.02C3292.87,-2246.79 3316.74,-2201.19 3354.5,-2168 3463.32,-2072.34 3573.14,-2231.45 3678.5,-2132 3809.32,-2008.52 3811.25,-1783.91 3797.87,-1647.3"/>
<polygon fill="none" stroke="#63b8ff" points="3274.7,-2293.97 3275.25,-2304.55 3281.42,-2295.94 3274.7,-2293.97"/>
</g>
<!-- Node32 -->
<g id="node29" class="node">
<title>Node32</title>
<g id="a_node29"><a xlink:href="../../d2/db4/class_kratos_1_1_prebuckling_strategy.html" target="_top" xlink:title="Strategy for linearized prebuckling analysis.">
<polygon fill="white" stroke="#666666" points="3891,-1189 3891,-1873 4062,-1873 4062,-1189 3891,-1189"/>
<text text-anchor="start" x="3899" y="-1861" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::PrebucklingStrategy</text>
<text text-anchor="start" x="3899" y="-1850" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="3976.5" y="-1839" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="#666666" points="3891,-1832 4062,-1832"/>
<text text-anchor="middle" x="3976.5" y="-1820" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="3891,-1813 4062,-1813"/>
<text text-anchor="start" x="3899" y="-1801" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrebucklingStrategy()</text>
<text text-anchor="start" x="3899" y="-1790" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrebucklingStrategy()</text>
<text text-anchor="start" x="3899" y="-1779" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~PrebucklingStrategy()</text>
<text text-anchor="start" x="3899" y="-1768" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetScheme()</text>
<text text-anchor="start" x="3899" y="-1757" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetEigenSolver()</text>
<text text-anchor="start" x="3899" y="-1746" font-family="Helvetica,sans-Serif" font-size="10.00">+ pGetBuilderAndSolver()</text>
<text text-anchor="start" x="3899" y="-1735" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetConvergenceCriteria()</text>
<text text-anchor="start" x="3899" y="-1724" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSolutionFoundFlag()</text>
<text text-anchor="start" x="3899" y="-1713" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="3899" y="-1702" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="3899" y="-1691" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="3899" y="-1680" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="3899" y="-1669" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="3899" y="-1658" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="3899" y="-1647" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="3899" y="-1636" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="3899" y="-1625" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemePointerType</text>
<text text-anchor="start" x="3899" y="-1614" font-family="Helvetica,sans-Serif" font-size="10.00">* BuilderAndSolverPointerType</text>
<text text-anchor="start" x="3899" y="-1603" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseVectorType</text>
<text text-anchor="start" x="3899" y="-1592" font-family="Helvetica,sans-Serif" font-size="10.00">* DenseMatrixType</text>
<text text-anchor="start" x="3899" y="-1581" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseSpaceType</text>
<text text-anchor="start" x="3899" y="-1570" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseVectorPointerType</text>
<text text-anchor="start" x="3899" y="-1559" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseMatrixPointerType</text>
<text text-anchor="start" x="3899" y="-1548" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseMatrixType</text>
<text text-anchor="start" x="3899" y="-1537" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseVectorType</text>
<text text-anchor="start" x="3899" y="-1526" font-family="Helvetica,sans-Serif" font-size="10.00">* ConvergenceCriteriaType</text>
<text text-anchor="start" x="3899" y="-1515" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="3899" y="-1504" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="3899" y="-1493" font-family="Helvetica,sans-Serif" font-size="10.00">* mpScheme</text>
<text text-anchor="start" x="3899" y="-1482" font-family="Helvetica,sans-Serif" font-size="10.00">* mpEigenSolver</text>
<text text-anchor="start" x="3899" y="-1471" font-family="Helvetica,sans-Serif" font-size="10.00">* mpBuilderAndSolver</text>
<text text-anchor="start" x="3899" y="-1460" font-family="Helvetica,sans-Serif" font-size="10.00">* mpStiffnessMatrix</text>
<text text-anchor="start" x="3899" y="-1449" font-family="Helvetica,sans-Serif" font-size="10.00">* mpStiffnessMatrixPrevious</text>
<text text-anchor="start" x="3899" y="-1438" font-family="Helvetica,sans-Serif" font-size="10.00">* mpRHS</text>
<text text-anchor="start" x="3899" y="-1427" font-family="Helvetica,sans-Serif" font-size="10.00">* mpDx</text>
<text text-anchor="start" x="3899" y="-1416" font-family="Helvetica,sans-Serif" font-size="10.00">* mpConvergenceCriteria</text>
<text text-anchor="start" x="3899" y="-1405" font-family="Helvetica,sans-Serif" font-size="10.00">* mInitializeWasPerformed</text>
<text text-anchor="start" x="3899" y="-1394" font-family="Helvetica,sans-Serif" font-size="10.00">* mSolutionStepIsInitialized</text>
<text text-anchor="start" x="3899" y="-1383" font-family="Helvetica,sans-Serif" font-size="10.00">and 11 more...</text>
<text text-anchor="start" x="3899" y="-1372" font-family="Helvetica,sans-Serif" font-size="10.00">* PrebucklingStrategy()</text>
<text text-anchor="start" x="3899" y="-1361" font-family="Helvetica,sans-Serif" font-size="10.00">* PrebucklingStrategy()</text>
<text text-anchor="start" x="3899" y="-1350" font-family="Helvetica,sans-Serif" font-size="10.00">* ~PrebucklingStrategy()</text>
<text text-anchor="start" x="3899" y="-1339" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetScheme()</text>
<text text-anchor="start" x="3899" y="-1328" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetEigenSolver()</text>
<text text-anchor="start" x="3899" y="-1317" font-family="Helvetica,sans-Serif" font-size="10.00">* pGetBuilderAndSolver()</text>
<text text-anchor="start" x="3899" y="-1306" font-family="Helvetica,sans-Serif" font-size="10.00">* GetConvergenceCriteria()</text>
<text text-anchor="start" x="3899" y="-1295" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSolutionFoundFlag()</text>
<text text-anchor="start" x="3899" y="-1284" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="3899" y="-1273" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="3899" y="-1262" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="3899" y="-1251" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="3899" y="-1240" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="3899" y="-1229" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="3899" y="-1218" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="3899" y="-1207" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateLoadConditions()</text>
<text text-anchor="start" x="3899" y="-1196" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignVariables()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node32 -->
<g id="edge28" class="edge">
<title>Node10&#45;&gt;Node32</title>
<path fill="none" stroke="#63b8ff" d="M3276.45,-2295.47C3291.31,-2246.69 3315.6,-2200.76 3354.5,-2168 3444.29,-2092.39 3794.89,-2211.24 3881.5,-2132 3953.57,-2066.06 3985.93,-1969.29 3997.87,-1872.63"/>
<polygon fill="none" stroke="#63b8ff" points="3273.17,-2294.22 3273.76,-2304.8 3279.9,-2296.16 3273.17,-2294.22"/>
</g>
<!-- Node33 -->
<g id="node30" class="node">
<title>Node33</title>
<g id="a_node30"><a xlink:href="../../de/da9/class_kratos_1_1_residual_based_convection_diffusion_strategy.html" target="_top" xlink:title="This strategy is used to solve convection&#45;diffusion problem.">
<polygon fill="white" stroke="#666666" points="4080.5,-1315.5 4080.5,-1746.5 4278.5,-1746.5 4278.5,-1315.5 4080.5,-1315.5"/>
<text text-anchor="start" x="4088.5" y="-1734.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ResidualBasedConvection</text>
<text text-anchor="start" x="4088.5" y="-1723.5" font-family="Helvetica,sans-Serif" font-size="10.00">DiffusionStrategy&lt; TSparseSpace,</text>
<text text-anchor="middle" x="4179.5" y="-1712.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="#666666" points="4080.5,-1705.5 4278.5,-1705.5"/>
<text text-anchor="middle" x="4179.5" y="-1693.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="4080.5,-1686.5 4278.5,-1686.5"/>
<text text-anchor="start" x="4088.5" y="-1674.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ResidualBasedConvectionDiffusion</text>
<text text-anchor="start" x="4088.5" y="-1663.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="4088.5" y="-1652.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~ResidualBasedConvection</text>
<text text-anchor="start" x="4088.5" y="-1641.5" font-family="Helvetica,sans-Serif" font-size="10.00">DiffusionStrategy()</text>
<text text-anchor="start" x="4088.5" y="-1630.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="4088.5" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateProjection()</text>
<text text-anchor="start" x="4088.5" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="4088.5" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="4088.5" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="4088.5" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="4088.5" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="4088.5" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="4088.5" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="4088.5" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="4088.5" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="4088.5" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="4088.5" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="4088.5" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="4088.5" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mstep1</text>
<text text-anchor="start" x="4088.5" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mOldDt</text>
<text text-anchor="start" x="4088.5" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mtime_order</text>
<text text-anchor="start" x="4088.5" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mprediction_order</text>
<text text-anchor="start" x="4088.5" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedConvectionDiffusion</text>
<text text-anchor="start" x="4088.5" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="4088.5" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ResidualBasedConvection</text>
<text text-anchor="start" x="4088.5" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">DiffusionStrategy()</text>
<text text-anchor="start" x="4088.5" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="4088.5" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateProjection()</text>
<text text-anchor="start" x="4088.5" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="4088.5" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="4088.5" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="4088.5" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedConvectionDiffusion</text>
<text text-anchor="start" x="4088.5" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node33 -->
<g id="edge29" class="edge">
<title>Node10&#45;&gt;Node33</title>
<path fill="none" stroke="#63b8ff" d="M3275.87,-2295.4C3290.74,-2246.48 3315.18,-2200.51 3354.5,-2168 3477.27,-2066.48 3950.8,-2237.13 4070.5,-2132 4177.29,-2038.21 4202.06,-1877.78 4201.45,-1746.4"/>
<polygon fill="none" stroke="#63b8ff" points="3272.58,-2294.18 3273.17,-2304.76 3279.3,-2296.12 3272.58,-2294.18"/>
</g>
<!-- Node34 -->
<g id="node31" class="node">
<title>Node34</title>
<g id="a_node31"><a xlink:href="../../d3/dd4/class_kratos_1_1_residual_based_convection_diffusion_strategy_non_linear.html" target="_top" xlink:title="This strategy is used to solve convection&#45;diffusion problem.">
<polygon fill="white" stroke="#666666" points="4296.5,-1293.5 4296.5,-1768.5 4494.5,-1768.5 4494.5,-1293.5 4296.5,-1293.5"/>
<text text-anchor="start" x="4304.5" y="-1756.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ResidualBasedConvection</text>
<text text-anchor="start" x="4304.5" y="-1745.5" font-family="Helvetica,sans-Serif" font-size="10.00">DiffusionStrategyNonLinear</text>
<text text-anchor="start" x="4304.5" y="-1734.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="4395.5" y="-1723.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="#666666" points="4296.5,-1716.5 4494.5,-1716.5"/>
<text text-anchor="middle" x="4395.5" y="-1704.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="4296.5,-1697.5 4494.5,-1697.5"/>
<text text-anchor="start" x="4304.5" y="-1685.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ResidualBasedConvectionDiffusion</text>
<text text-anchor="start" x="4304.5" y="-1674.5" font-family="Helvetica,sans-Serif" font-size="10.00">StrategyNonLinear()</text>
<text text-anchor="start" x="4304.5" y="-1663.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~ResidualBasedConvection</text>
<text text-anchor="start" x="4304.5" y="-1652.5" font-family="Helvetica,sans-Serif" font-size="10.00">DiffusionStrategyNonLinear()</text>
<text text-anchor="start" x="4304.5" y="-1641.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="4304.5" y="-1630.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateTemperatureNorm()</text>
<text text-anchor="start" x="4304.5" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateProjection()</text>
<text text-anchor="start" x="4304.5" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="4304.5" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="4304.5" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="4304.5" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="4304.5" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="4304.5" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="4304.5" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="4304.5" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="4304.5" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="4304.5" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="4304.5" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="4304.5" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="4304.5" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mstep1</text>
<text text-anchor="start" x="4304.5" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mOldDt</text>
<text text-anchor="start" x="4304.5" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mtime_order</text>
<text text-anchor="start" x="4304.5" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mmax_iter</text>
<text text-anchor="start" x="4304.5" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mtoll</text>
<text text-anchor="start" x="4304.5" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedConvectionDiffusion</text>
<text text-anchor="start" x="4304.5" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">StrategyNonLinear()</text>
<text text-anchor="start" x="4304.5" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ResidualBasedConvection</text>
<text text-anchor="start" x="4304.5" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">DiffusionStrategyNonLinear()</text>
<text text-anchor="start" x="4304.5" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="4304.5" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateTemperatureNorm()</text>
<text text-anchor="start" x="4304.5" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateProjection()</text>
<text text-anchor="start" x="4304.5" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="4304.5" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="4304.5" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="4304.5" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedConvectionDiffusion</text>
<text text-anchor="start" x="4304.5" y="-1300.5" font-family="Helvetica,sans-Serif" font-size="10.00">StrategyNonLinear()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node34 -->
<g id="edge30" class="edge">
<title>Node10&#45;&gt;Node34</title>
<path fill="none" stroke="#63b8ff" d="M3275.44,-2295.51C3290.32,-2246.44 3314.87,-2200.39 3354.5,-2168 3434.83,-2102.36 4209.21,-2200.07 4287.5,-2132 4388.94,-2043.81 4416.31,-1895.45 4418.14,-1768.33"/>
<polygon fill="none" stroke="#63b8ff" points="3272.14,-2294.32 3272.74,-2304.9 3278.87,-2296.26 3272.14,-2294.32"/>
</g>
<!-- Node35 -->
<g id="node32" class="node">
<title>Node35</title>
<g id="a_node32"><a xlink:href="../../d7/d8b/class_kratos_1_1_residual_based_eulerian_convection_diffusion_strategy.html" target="_top" xlink:title="This strategy is used to solve convection&#45;diffusion problem.">
<polygon fill="white" stroke="#666666" points="4513,-1304.5 4513,-1757.5 4716,-1757.5 4716,-1304.5 4513,-1304.5"/>
<text text-anchor="start" x="4521" y="-1745.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ResidualBasedEulerian</text>
<text text-anchor="start" x="4521" y="-1734.5" font-family="Helvetica,sans-Serif" font-size="10.00">ConvectionDiffusionStrategy</text>
<text text-anchor="start" x="4521" y="-1723.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="4614.5" y="-1712.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="#666666" points="4513,-1705.5 4716,-1705.5"/>
<text text-anchor="middle" x="4614.5" y="-1693.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="4513,-1686.5 4716,-1686.5"/>
<text text-anchor="start" x="4521" y="-1674.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ResidualBasedEulerianConvection</text>
<text text-anchor="start" x="4521" y="-1663.5" font-family="Helvetica,sans-Serif" font-size="10.00">DiffusionStrategy()</text>
<text text-anchor="start" x="4521" y="-1652.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~ResidualBasedEulerianConvection</text>
<text text-anchor="start" x="4521" y="-1641.5" font-family="Helvetica,sans-Serif" font-size="10.00">DiffusionStrategy()</text>
<text text-anchor="start" x="4521" y="-1630.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="4521" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="4521" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="4521" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="4521" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00"># GenerateMeshPart()</text>
<text text-anchor="start" x="4521" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="4521" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="4521" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="4521" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="4521" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="4521" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="4521" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="4521" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="4521" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="4521" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mrModelPart</text>
<text text-anchor="start" x="4521" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpConvectionModelPart</text>
<text text-anchor="start" x="4521" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mstep1</text>
<text text-anchor="start" x="4521" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mOldDt</text>
<text text-anchor="start" x="4521" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mdimension</text>
<text text-anchor="start" x="4521" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedEulerianConvection</text>
<text text-anchor="start" x="4521" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">DiffusionStrategy()</text>
<text text-anchor="start" x="4521" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ResidualBasedEulerianConvection</text>
<text text-anchor="start" x="4521" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">DiffusionStrategy()</text>
<text text-anchor="start" x="4521" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="4521" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="4521" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="4521" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="4521" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GenerateMeshPart()</text>
<text text-anchor="start" x="4521" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedEulerianConvection</text>
<text text-anchor="start" x="4521" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">DiffusionStrategy()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node35 -->
<g id="edge31" class="edge">
<title>Node10&#45;&gt;Node35</title>
<path fill="none" stroke="#63b8ff" d="M3275.27,-2295.29C3290.15,-2246.24 3314.75,-2200.24 3354.5,-2168 3453.7,-2087.54 4406.6,-2215.22 4503.5,-2132 4608.68,-2041.67 4635.33,-1886.89 4636.25,-1757.16"/>
<polygon fill="none" stroke="#63b8ff" points="3271.97,-2294.11 3272.56,-2304.68 3278.69,-2296.04 3271.97,-2294.11"/>
</g>
<!-- Node36 -->
<g id="node33" class="node">
<title>Node36</title>
<g id="a_node33"><a xlink:href="../../d1/dfa/class_kratos_1_1_residual_based_linear_strategy.html" target="_top" xlink:title="This is a very simple strategy to solve linearly the problem.">
<polygon fill="white" stroke="#666666" points="4734.5,-1238.5 4734.5,-1823.5 4918.5,-1823.5 4918.5,-1238.5 4734.5,-1238.5"/>
<text text-anchor="start" x="4742.5" y="-1811.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ResidualBasedLinear</text>
<text text-anchor="start" x="4742.5" y="-1800.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy&lt; TSparseSpace,</text>
<text text-anchor="middle" x="4826.5" y="-1789.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="#666666" points="4734.5,-1782.5 4918.5,-1782.5"/>
<text text-anchor="middle" x="4826.5" y="-1770.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="4734.5,-1763.5 4918.5,-1763.5"/>
<text text-anchor="start" x="4742.5" y="-1751.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="4742.5" y="-1740.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="4742.5" y="-1729.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="4742.5" y="-1718.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSettings()</text>
<text text-anchor="start" x="4742.5" y="-1707.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvingStrategyType</text>
<text text-anchor="start" x="4742.5" y="-1696.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="4742.5" y="-1685.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClassType</text>
<text text-anchor="start" x="4742.5" y="-1674.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="4742.5" y="-1663.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseSpaceType</text>
<text text-anchor="start" x="4742.5" y="-1652.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="4742.5" y="-1641.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TBuilderAndSolverType</text>
<text text-anchor="start" x="4742.5" y="-1630.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="4742.5" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="4742.5" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="4742.5" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="4742.5" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="4742.5" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixPointerType</text>
<text text-anchor="start" x="4742.5" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorPointerType</text>
<text text-anchor="start" x="4742.5" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="4742.5" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="4742.5" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpScheme</text>
<text text-anchor="start" x="4742.5" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpBuilderAndSolver</text>
<text text-anchor="start" x="4742.5" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpDx</text>
<text text-anchor="start" x="4742.5" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpb</text>
<text text-anchor="start" x="4742.5" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpA</text>
<text text-anchor="start" x="4742.5" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mReformDofSetAtEachStep</text>
<text text-anchor="start" x="4742.5" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mCalculateNormDxFlag</text>
<text text-anchor="start" x="4742.5" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mCalculateReactionsFlag</text>
<text text-anchor="start" x="4742.5" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mSolutionStepIsInitialized</text>
<text text-anchor="start" x="4742.5" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mInitializeWasPerformed</text>
<text text-anchor="start" x="4742.5" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedLinearStrategy()</text>
<text text-anchor="start" x="4742.5" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedLinearStrategy()</text>
<text text-anchor="start" x="4742.5" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedLinearStrategy()</text>
<text text-anchor="start" x="4742.5" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedLinearStrategy()</text>
<text text-anchor="start" x="4742.5" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ResidualBasedLinearStrategy()</text>
<text text-anchor="start" x="4742.5" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetScheme()</text>
<text text-anchor="start" x="4742.5" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetScheme()</text>
<text text-anchor="start" x="4742.5" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetBuilderAndSolver()</text>
<text text-anchor="start" x="4742.5" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetBuilderAndSolver()</text>
<text text-anchor="start" x="4742.5" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetCalculateReactionsFlag()</text>
<text text-anchor="start" x="4742.5" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 20 more...</text>
<text text-anchor="start" x="4742.5" y="-1300.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="4742.5" y="-1289.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="4742.5" y="-1278.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="4742.5" y="-1267.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="4742.5" y="-1256.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EchoInfo()</text>
<text text-anchor="start" x="4742.5" y="-1245.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedLinearStrategy()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node36 -->
<g id="edge32" class="edge">
<title>Node10&#45;&gt;Node36</title>
<path fill="none" stroke="#63b8ff" d="M3275,-2295.6C3289.88,-2246.39 3314.54,-2200.24 3354.5,-2168 3473.01,-2072.38 4609.45,-2231.76 4724.5,-2132 4811.61,-2056.46 4842.99,-1936.3 4850.33,-1823.28"/>
<polygon fill="none" stroke="#63b8ff" points="3271.69,-2294.45 3272.3,-2305.03 3278.42,-2296.38 3271.69,-2294.45"/>
</g>
<!-- Node38 -->
<g id="node35" class="node">
<title>Node38</title>
<g id="a_node35"><a xlink:href="../../d4/dcd/class_kratos_1_1_residual_based_newton_raphson_strategy.html" target="_top" xlink:title="This is the base Newton Raphson strategy.">
<polygon fill="#fff0f0" stroke="red" points="4936.5,-996.5 4936.5,-2065.5 5122.5,-2065.5 5122.5,-996.5 4936.5,-996.5"/>
<text text-anchor="start" x="4944.5" y="-2053.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ResidualBasedNewton</text>
<text text-anchor="start" x="4944.5" y="-2042.5" font-family="Helvetica,sans-Serif" font-size="10.00">RaphsonStrategy&lt; TSparseSpace,</text>
<text text-anchor="middle" x="5029.5" y="-2031.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="red" points="4936.5,-2024.5 5122.5,-2024.5"/>
<text text-anchor="start" x="4944.5" y="-2012.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpScheme</text>
<text text-anchor="start" x="4944.5" y="-2001.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpBuilderAndSolver</text>
<text text-anchor="start" x="4944.5" y="-1990.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpConvergenceCriteria</text>
<text text-anchor="start" x="4944.5" y="-1979.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpDx</text>
<text text-anchor="start" x="4944.5" y="-1968.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpb</text>
<text text-anchor="start" x="4944.5" y="-1957.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpA</text>
<text text-anchor="start" x="4944.5" y="-1946.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mReformDofSetAtEachStep</text>
<text text-anchor="start" x="4944.5" y="-1935.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mCalculateReactionsFlag</text>
<text text-anchor="start" x="4944.5" y="-1924.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mUseOldStiffnessInFirstIteration</text>
<text text-anchor="start" x="4944.5" y="-1913.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mMaxIterationNumber</text>
<text text-anchor="start" x="4944.5" y="-1902.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mInitializeWasPerformed</text>
<text text-anchor="start" x="4944.5" y="-1891.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mKeepSystemConstantDuring</text>
<text text-anchor="start" x="4944.5" y="-1880.5" font-family="Helvetica,sans-Serif" font-size="10.00">Iterations</text>
<polyline fill="none" stroke="red" points="4936.5,-1873.5 5122.5,-1873.5"/>
<text text-anchor="start" x="4944.5" y="-1861.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSystemMatrix()</text>
<text text-anchor="start" x="4944.5" y="-1850.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSystemVector()</text>
<text text-anchor="start" x="4944.5" y="-1839.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetSolutionVector()</text>
<text text-anchor="start" x="4944.5" y="-1828.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetKeepSystemConstantDuring</text>
<text text-anchor="start" x="4944.5" y="-1817.5" font-family="Helvetica,sans-Serif" font-size="10.00">Iterations()</text>
<text text-anchor="start" x="4944.5" y="-1806.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetKeepSystemConstantDuring</text>
<text text-anchor="start" x="4944.5" y="-1795.5" font-family="Helvetica,sans-Serif" font-size="10.00">Iterations()</text>
<text text-anchor="start" x="4944.5" y="-1784.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="4944.5" y="-1773.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="4944.5" y="-1762.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="4944.5" y="-1751.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateDatabase()</text>
<text text-anchor="start" x="4944.5" y="-1740.5" font-family="Helvetica,sans-Serif" font-size="10.00"># EchoInfo()</text>
<text text-anchor="start" x="4944.5" y="-1729.5" font-family="Helvetica,sans-Serif" font-size="10.00"># MaxIterationsExceeded()</text>
<text text-anchor="start" x="4944.5" y="-1718.5" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSettings()</text>
<text text-anchor="start" x="4944.5" y="-1707.5" font-family="Helvetica,sans-Serif" font-size="10.00"># WriteDofInfo()</text>
<text text-anchor="start" x="4944.5" y="-1696.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ResidualBasedNewtonRaphson</text>
<text text-anchor="start" x="4944.5" y="-1685.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="4944.5" y="-1674.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TConvergenceCriteriaType</text>
<text text-anchor="start" x="4944.5" y="-1663.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvingStrategyType</text>
<text text-anchor="start" x="4944.5" y="-1652.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="4944.5" y="-1641.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ClassType</text>
<text text-anchor="start" x="4944.5" y="-1630.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TBuilderAndSolverType</text>
<text text-anchor="start" x="4944.5" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="4944.5" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseSpaceType</text>
<text text-anchor="start" x="4944.5" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="4944.5" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="4944.5" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="4944.5" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 6 more...</text>
<text text-anchor="start" x="4944.5" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpScheme</text>
<text text-anchor="start" x="4944.5" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpBuilderAndSolver</text>
<text text-anchor="start" x="4944.5" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpConvergenceCriteria</text>
<text text-anchor="start" x="4944.5" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpDx</text>
<text text-anchor="start" x="4944.5" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpb</text>
<text text-anchor="start" x="4944.5" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpA</text>
<text text-anchor="start" x="4944.5" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mReformDofSetAtEachStep</text>
<text text-anchor="start" x="4944.5" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mCalculateReactionsFlag</text>
<text text-anchor="start" x="4944.5" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mUseOldStiffnessInFirstIteration</text>
<text text-anchor="start" x="4944.5" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxIterationNumber</text>
<text text-anchor="start" x="4944.5" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mInitializeWasPerformed</text>
<text text-anchor="start" x="4944.5" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mKeepSystemConstantDuring</text>
<text text-anchor="start" x="4944.5" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">Iterations</text>
<text text-anchor="start" x="4944.5" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedNewtonRaphson</text>
<text text-anchor="start" x="4944.5" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="4944.5" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedNewtonRaphson</text>
<text text-anchor="start" x="4944.5" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="4944.5" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedNewtonRaphson</text>
<text text-anchor="start" x="4944.5" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="4944.5" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedNewtonRaphson</text>
<text text-anchor="start" x="4944.5" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="4944.5" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedNewtonRaphson</text>
<text text-anchor="start" x="4944.5" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="4944.5" y="-1300.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedNewtonRaphson</text>
<text text-anchor="start" x="4944.5" y="-1289.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="4944.5" y="-1278.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedNewtonRaphson</text>
<text text-anchor="start" x="4944.5" y="-1267.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="4944.5" y="-1256.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedNewtonRaphson</text>
<text text-anchor="start" x="4944.5" y="-1245.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="4944.5" y="-1234.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedNewtonRaphson</text>
<text text-anchor="start" x="4944.5" y="-1223.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="4944.5" y="-1212.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ResidualBasedNewtonRaphson</text>
<text text-anchor="start" x="4944.5" y="-1201.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="4944.5" y="-1190.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 27 more...</text>
<text text-anchor="start" x="4944.5" y="-1179.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSystemMatrix()</text>
<text text-anchor="start" x="4944.5" y="-1168.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSystemVector()</text>
<text text-anchor="start" x="4944.5" y="-1157.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetSolutionVector()</text>
<text text-anchor="start" x="4944.5" y="-1146.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetKeepSystemConstantDuring</text>
<text text-anchor="start" x="4944.5" y="-1135.5" font-family="Helvetica,sans-Serif" font-size="10.00">Iterations()</text>
<text text-anchor="start" x="4944.5" y="-1124.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetKeepSystemConstantDuring</text>
<text text-anchor="start" x="4944.5" y="-1113.5" font-family="Helvetica,sans-Serif" font-size="10.00">Iterations()</text>
<text text-anchor="start" x="4944.5" y="-1102.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="4944.5" y="-1091.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="4944.5" y="-1080.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="4944.5" y="-1069.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateDatabase()</text>
<text text-anchor="start" x="4944.5" y="-1058.5" font-family="Helvetica,sans-Serif" font-size="10.00">* EchoInfo()</text>
<text text-anchor="start" x="4944.5" y="-1047.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MaxIterationsExceeded()</text>
<text text-anchor="start" x="4944.5" y="-1036.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="4944.5" y="-1025.5" font-family="Helvetica,sans-Serif" font-size="10.00">* WriteDofInfo()</text>
<text text-anchor="start" x="4944.5" y="-1014.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedNewtonRaphson</text>
<text text-anchor="start" x="4944.5" y="-1003.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node38 -->
<g id="edge34" class="edge">
<title>Node10&#45;&gt;Node38</title>
<path fill="none" stroke="#63b8ff" d="M3274.92,-2295.5C3289.81,-2246.29 3314.49,-2200.17 3354.5,-2168 3422.62,-2113.22 4861.36,-2189.15 4927.5,-2132 4950.09,-2112.48 4968.93,-2089.97 4984.58,-2065.35"/>
<polygon fill="none" stroke="#63b8ff" points="3271.61,-2294.35 3272.22,-2304.93 3278.34,-2296.28 3271.61,-2294.35"/>
</g>
<!-- Node56 -->
<g id="node41" class="node">
<title>Node56</title>
<g id="a_node41"><a xlink:href="../../d6/da1/class_kratos_1_1_residual_based_semi_eulerian_convection_diffusion_strategy.html" target="_top" xlink:title="This strategy is used to solve convection&#45;diffusion problem.">
<polygon fill="white" stroke="#666666" points="5140.5,-1315.5 5140.5,-1746.5 5392.5,-1746.5 5392.5,-1315.5 5140.5,-1315.5"/>
<text text-anchor="start" x="5148.5" y="-1734.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ResidualBasedSemi</text>
<text text-anchor="start" x="5148.5" y="-1723.5" font-family="Helvetica,sans-Serif" font-size="10.00">EulerianConvectionDiffusionStrategy</text>
<text text-anchor="middle" x="5266.5" y="-1712.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="#666666" points="5140.5,-1705.5 5392.5,-1705.5"/>
<text text-anchor="middle" x="5266.5" y="-1693.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="5140.5,-1686.5 5392.5,-1686.5"/>
<text text-anchor="start" x="5148.5" y="-1674.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ResidualBasedSemiEulerian</text>
<text text-anchor="start" x="5148.5" y="-1663.5" font-family="Helvetica,sans-Serif" font-size="10.00">ConvectionDiffusionStrategy()</text>
<text text-anchor="start" x="5148.5" y="-1652.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~ResidualBasedSemiEulerian</text>
<text text-anchor="start" x="5148.5" y="-1641.5" font-family="Helvetica,sans-Serif" font-size="10.00">ConvectionDiffusionStrategy()</text>
<text text-anchor="start" x="5148.5" y="-1630.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="5148.5" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="5148.5" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="5148.5" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="5148.5" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="5148.5" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="5148.5" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="5148.5" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="5148.5" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="5148.5" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="5148.5" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="5148.5" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="5148.5" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="5148.5" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mrReferenceModelPart</text>
<text text-anchor="start" x="5148.5" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpConvectionModelPart</text>
<text text-anchor="start" x="5148.5" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mstep1</text>
<text text-anchor="start" x="5148.5" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mOldDt</text>
<text text-anchor="start" x="5148.5" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mdimension</text>
<text text-anchor="start" x="5148.5" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedSemiEulerian</text>
<text text-anchor="start" x="5148.5" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">ConvectionDiffusionStrategy()</text>
<text text-anchor="start" x="5148.5" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ResidualBasedSemiEulerian</text>
<text text-anchor="start" x="5148.5" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">ConvectionDiffusionStrategy()</text>
<text text-anchor="start" x="5148.5" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="5148.5" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="5148.5" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="5148.5" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="5148.5" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GenerateMeshPart()</text>
<text text-anchor="start" x="5148.5" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedSemiEulerian</text>
<text text-anchor="start" x="5148.5" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">ConvectionDiffusionStrategy()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node56 -->
<g id="edge40" class="edge">
<title>Node10&#45;&gt;Node56</title>
<path fill="none" stroke="#63b8ff" d="M3274.86,-2295.42C3289.75,-2246.22 3314.45,-2200.12 3354.5,-2168 3431.53,-2106.22 5055.02,-2194.46 5131.5,-2132 5243.14,-2040.82 5274.57,-1878.95 5279.35,-1746.31"/>
<polygon fill="none" stroke="#63b8ff" points="3271.55,-2294.27 3272.15,-2304.85 3278.28,-2296.2 3271.55,-2294.27"/>
</g>
<!-- Node57 -->
<g id="node42" class="node">
<title>Node57</title>
<g id="a_node42"><a xlink:href="../../de/d93/class_kratos_1_1_runge_kutta_frac_step_strategy.html" target="_top" xlink:title="Short class definition.">
<polygon fill="white" stroke="#666666" points="5410.5,-1249.5 5410.5,-1812.5 5610.5,-1812.5 5610.5,-1249.5 5410.5,-1249.5"/>
<text text-anchor="start" x="5418.5" y="-1800.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::RungeKuttaFracStep</text>
<text text-anchor="start" x="5418.5" y="-1789.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy&lt; TDim, TSparseSpace,</text>
<text text-anchor="middle" x="5510.5" y="-1778.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="#666666" points="5410.5,-1771.5 5610.5,-1771.5"/>
<text text-anchor="start" x="5418.5" y="-1759.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpressurestep</text>
<text text-anchor="start" x="5418.5" y="-1748.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpressure_toll</text>
<text text-anchor="start" x="5418.5" y="-1737.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mReformDofAtEachIteration</text>
<polyline fill="none" stroke="#666666" points="5410.5,-1730.5 5610.5,-1730.5"/>
<text text-anchor="start" x="5418.5" y="-1718.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ RungeKuttaFracStepStrategy()</text>
<text text-anchor="start" x="5418.5" y="-1707.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~RungeKuttaFracStepStrategy()</text>
<text text-anchor="start" x="5418.5" y="-1696.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="5418.5" y="-1685.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ApplyVelocityBoundaryConditions()</text>
<text text-anchor="start" x="5418.5" y="-1674.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetToZero()</text>
<text text-anchor="start" x="5418.5" y="-1663.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetToZero()</text>
<text text-anchor="start" x="5418.5" y="-1652.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveStep1()</text>
<text text-anchor="start" x="5418.5" y="-1641.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveStep2()</text>
<text text-anchor="start" x="5418.5" y="-1630.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveStep3()</text>
<text text-anchor="start" x="5418.5" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SavePressureIt()</text>
<text text-anchor="start" x="5418.5" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 6 more...</text>
<text text-anchor="start" x="5418.5" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndicesVectorType</text>
<text text-anchor="start" x="5418.5" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="5418.5" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="5418.5" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="5418.5" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="5418.5" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="5418.5" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="5418.5" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="5418.5" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PointType</text>
<text text-anchor="start" x="5418.5" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PointPointerType</text>
<text text-anchor="start" x="5418.5" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PointVector</text>
<text text-anchor="start" x="5418.5" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PointIterator</text>
<text text-anchor="start" x="5418.5" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="5418.5" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="5418.5" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpressurestep</text>
<text text-anchor="start" x="5418.5" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpressure_toll</text>
<text text-anchor="start" x="5418.5" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mReformDofAtEachIteration</text>
<text text-anchor="start" x="5418.5" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFixedVelocityDofSet</text>
<text text-anchor="start" x="5418.5" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mFixedVelocityDofValues</text>
<text text-anchor="start" x="5418.5" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mSlipBoundaryList</text>
<text text-anchor="start" x="5418.5" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* RungeKuttaFracStepStrategy()</text>
<text text-anchor="start" x="5418.5" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~RungeKuttaFracStepStrategy()</text>
<text text-anchor="start" x="5418.5" y="-1355.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="5418.5" y="-1344.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ApplyVelocityBoundaryConditions()</text>
<text text-anchor="start" x="5418.5" y="-1333.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetToZero()</text>
<text text-anchor="start" x="5418.5" y="-1322.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetToZero()</text>
<text text-anchor="start" x="5418.5" y="-1311.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveStep1()</text>
<text text-anchor="start" x="5418.5" y="-1300.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveStep2()</text>
<text text-anchor="start" x="5418.5" y="-1289.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveStep3()</text>
<text text-anchor="start" x="5418.5" y="-1278.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SavePressureIt()</text>
<text text-anchor="start" x="5418.5" y="-1267.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 6 more...</text>
<text text-anchor="start" x="5418.5" y="-1256.5" font-family="Helvetica,sans-Serif" font-size="10.00">* RungeKuttaFracStepStrategy()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node57 -->
<g id="edge41" class="edge">
<title>Node10&#45;&gt;Node57</title>
<path fill="none" stroke="#63b8ff" d="M3274.79,-2295.34C3289.69,-2246.14 3314.4,-2200.07 3354.5,-2168 3443.33,-2096.96 5314.83,-2205.65 5401.5,-2132 5492.57,-2054.62 5524.52,-1928.83 5531.78,-1812.36"/>
<polygon fill="none" stroke="#63b8ff" points="3271.48,-2294.19 3272.09,-2304.76 3278.21,-2296.12 3271.48,-2294.19"/>
</g>
<!-- Node58 -->
<g id="node43" class="node">
<title>Node58</title>
<g id="a_node43"><a xlink:href="../../d2/d64/class_kratos_1_1_structural_mesh_moving_strategy.html" target="_top" xlink:title="Short class definition.">
<polygon fill="white" stroke="#666666" points="5628.5,-1359.5 5628.5,-1702.5 5822.5,-1702.5 5822.5,-1359.5 5628.5,-1359.5"/>
<text text-anchor="start" x="5636.5" y="-1690.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::StructuralMeshMoving</text>
<text text-anchor="start" x="5636.5" y="-1679.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy&lt; TSparseSpace,</text>
<text text-anchor="middle" x="5725.5" y="-1668.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="#666666" points="5628.5,-1661.5 5822.5,-1661.5"/>
<text text-anchor="middle" x="5725.5" y="-1649.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="5628.5,-1642.5 5822.5,-1642.5"/>
<text text-anchor="start" x="5636.5" y="-1630.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ StructuralMeshMovingStrategy()</text>
<text text-anchor="start" x="5636.5" y="-1619.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~StructuralMeshMovingStrategy()</text>
<text text-anchor="start" x="5636.5" y="-1608.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="5636.5" y="-1597.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="5636.5" y="-1586.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="5636.5" y="-1575.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TBuilderAndSolverType</text>
<text text-anchor="start" x="5636.5" y="-1564.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemeType</text>
<text text-anchor="start" x="5636.5" y="-1553.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="5636.5" y="-1542.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="5636.5" y="-1531.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpmesh_model_part</text>
<text text-anchor="start" x="5636.5" y="-1520.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mstrategy</text>
<text text-anchor="start" x="5636.5" y="-1509.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpbulider_and_solver</text>
<text text-anchor="start" x="5636.5" y="-1498.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mecho_level</text>
<text text-anchor="start" x="5636.5" y="-1487.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mtime_order</text>
<text text-anchor="start" x="5636.5" y="-1476.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mreform_dof_set_at</text>
<text text-anchor="start" x="5636.5" y="-1465.5" font-family="Helvetica,sans-Serif" font-size="10.00">_each_step</text>
<text text-anchor="start" x="5636.5" y="-1454.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mcompute_reactions</text>
<text text-anchor="start" x="5636.5" y="-1443.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mcalculate_mesh_velocities</text>
<text text-anchor="start" x="5636.5" y="-1432.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mreinitialize_model</text>
<text text-anchor="start" x="5636.5" y="-1421.5" font-family="Helvetica,sans-Serif" font-size="10.00">_part_at_each_step</text>
<text text-anchor="start" x="5636.5" y="-1410.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StructuralMeshMovingStrategy()</text>
<text text-anchor="start" x="5636.5" y="-1399.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~StructuralMeshMovingStrategy()</text>
<text text-anchor="start" x="5636.5" y="-1388.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="5636.5" y="-1377.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="5636.5" y="-1366.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StructuralMeshMovingStrategy()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node58 -->
<g id="edge42" class="edge">
<title>Node10&#45;&gt;Node58</title>
<path fill="none" stroke="#63b8ff" d="M3274.75,-2295.29C3289.65,-2246.09 3314.38,-2200.03 3354.5,-2168 3452.85,-2089.48 5523.73,-2213.64 5619.5,-2132 5740.25,-2029.07 5755.89,-1840.76 5748.14,-1702.47"/>
<polygon fill="none" stroke="#63b8ff" points="3271.44,-2294.13 3272.05,-2304.71 3278.17,-2296.07 3271.44,-2294.13"/>
</g>
<!-- Node59 -->
<g id="node44" class="node">
<title>Node59</title>
<g id="a_node44"><a xlink:href="../../d0/dbe/class_kratos_1_1_trilinos_laplacian_mesh_moving_strategy.html" target="_top" xlink:title="Short class definition.">
<polygon fill="white" stroke="#666666" points="5841,-1343 5841,-1719 6044,-1719 6044,-1343 5841,-1343"/>
<text text-anchor="start" x="5849" y="-1707" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::TrilinosLaplacian</text>
<text text-anchor="start" x="5849" y="-1696" font-family="Helvetica,sans-Serif" font-size="10.00">MeshMovingStrategy&lt; TSparseSpace,</text>
<text text-anchor="middle" x="5942.5" y="-1685" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="#666666" points="5841,-1678 6044,-1678"/>
<text text-anchor="middle" x="5942.5" y="-1666" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="5841,-1659 6044,-1659"/>
<text text-anchor="start" x="5849" y="-1647" font-family="Helvetica,sans-Serif" font-size="10.00">+ TrilinosLaplacianMeshMoving</text>
<text text-anchor="start" x="5849" y="-1636" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="5849" y="-1625" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~TrilinosLaplacianMeshMoving</text>
<text text-anchor="start" x="5849" y="-1614" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="5849" y="-1603" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="5849" y="-1592" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="5849" y="-1581" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="5849" y="-1570" font-family="Helvetica,sans-Serif" font-size="10.00">* VariableType</text>
<text text-anchor="start" x="5849" y="-1559" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="5849" y="-1548" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="5849" y="-1537" font-family="Helvetica,sans-Serif" font-size="10.00">* mrReferenceModelPart</text>
<text text-anchor="start" x="5849" y="-1526" font-family="Helvetica,sans-Serif" font-size="10.00">* mpmesh_model_part</text>
<text text-anchor="start" x="5849" y="-1515" font-family="Helvetica,sans-Serif" font-size="10.00">* mstrategy</text>
<text text-anchor="start" x="5849" y="-1504" font-family="Helvetica,sans-Serif" font-size="10.00">* m_reform_dof_set_at</text>
<text text-anchor="start" x="5849" y="-1493" font-family="Helvetica,sans-Serif" font-size="10.00">_each_step</text>
<text text-anchor="start" x="5849" y="-1482" font-family="Helvetica,sans-Serif" font-size="10.00">* m_compute_reactions</text>
<text text-anchor="start" x="5849" y="-1471" font-family="Helvetica,sans-Serif" font-size="10.00">* m_calculate_mesh_velocities</text>
<text text-anchor="start" x="5849" y="-1460" font-family="Helvetica,sans-Serif" font-size="10.00">* m_time_order</text>
<text text-anchor="start" x="5849" y="-1449" font-family="Helvetica,sans-Serif" font-size="10.00">* m_echo_level</text>
<text text-anchor="start" x="5849" y="-1438" font-family="Helvetica,sans-Serif" font-size="10.00">* TrilinosLaplacianMeshMoving</text>
<text text-anchor="start" x="5849" y="-1427" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="5849" y="-1416" font-family="Helvetica,sans-Serif" font-size="10.00">* ~TrilinosLaplacianMeshMoving</text>
<text text-anchor="start" x="5849" y="-1405" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="5849" y="-1394" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="5849" y="-1383" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="5849" y="-1372" font-family="Helvetica,sans-Serif" font-size="10.00">* GenerateMeshPart()</text>
<text text-anchor="start" x="5849" y="-1361" font-family="Helvetica,sans-Serif" font-size="10.00">* TrilinosLaplacianMeshMoving</text>
<text text-anchor="start" x="5849" y="-1350" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node59 -->
<g id="edge43" class="edge">
<title>Node10&#45;&gt;Node59</title>
<path fill="none" stroke="#63b8ff" d="M3274.72,-2295.25C3289.62,-2246.05 3314.35,-2200.01 3354.5,-2168 3462.11,-2082.2 5726.34,-2220.79 5831.5,-2132 5948.26,-2033.42 5968.68,-1855.43 5964.26,-1718.82"/>
<polygon fill="none" stroke="#63b8ff" points="3271.41,-2294.09 3272.01,-2304.67 3278.14,-2296.03 3271.41,-2294.09"/>
</g>
<!-- Node60 -->
<g id="node45" class="node">
<title>Node60</title>
<g id="a_node45"><a xlink:href="../../d6/d52/class_kratos_1_1_trilinos_structural_mesh_moving_strategy.html" target="_top" xlink:title="Short class definition.">
<polygon fill="white" stroke="#666666" points="6062,-1343 6062,-1719 6265,-1719 6265,-1343 6062,-1343"/>
<text text-anchor="start" x="6070" y="-1707" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::TrilinosStructural</text>
<text text-anchor="start" x="6070" y="-1696" font-family="Helvetica,sans-Serif" font-size="10.00">MeshMovingStrategy&lt; TSparseSpace,</text>
<text text-anchor="middle" x="6163.5" y="-1685" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="#666666" points="6062,-1678 6265,-1678"/>
<text text-anchor="middle" x="6163.5" y="-1666" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="6062,-1659 6265,-1659"/>
<text text-anchor="start" x="6070" y="-1647" font-family="Helvetica,sans-Serif" font-size="10.00">+ TrilinosStructuralMeshMoving</text>
<text text-anchor="start" x="6070" y="-1636" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="6070" y="-1625" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~TrilinosStructuralMeshMoving</text>
<text text-anchor="start" x="6070" y="-1614" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="6070" y="-1603" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="6070" y="-1592" font-family="Helvetica,sans-Serif" font-size="10.00">+ Solve()</text>
<text text-anchor="start" x="6070" y="-1581" font-family="Helvetica,sans-Serif" font-size="10.00">* SchemeType</text>
<text text-anchor="start" x="6070" y="-1570" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="6070" y="-1559" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="6070" y="-1548" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="6070" y="-1537" font-family="Helvetica,sans-Serif" font-size="10.00">* mrReferenceModelPart</text>
<text text-anchor="start" x="6070" y="-1526" font-family="Helvetica,sans-Serif" font-size="10.00">* mpmesh_model_part</text>
<text text-anchor="start" x="6070" y="-1515" font-family="Helvetica,sans-Serif" font-size="10.00">* mstrategy</text>
<text text-anchor="start" x="6070" y="-1504" font-family="Helvetica,sans-Serif" font-size="10.00">* m_echo_level</text>
<text text-anchor="start" x="6070" y="-1493" font-family="Helvetica,sans-Serif" font-size="10.00">* m_time_order</text>
<text text-anchor="start" x="6070" y="-1482" font-family="Helvetica,sans-Serif" font-size="10.00">* m_reform_dof_set_at</text>
<text text-anchor="start" x="6070" y="-1471" font-family="Helvetica,sans-Serif" font-size="10.00">_each_step</text>
<text text-anchor="start" x="6070" y="-1460" font-family="Helvetica,sans-Serif" font-size="10.00">* m_compute_reactions</text>
<text text-anchor="start" x="6070" y="-1449" font-family="Helvetica,sans-Serif" font-size="10.00">* m_calculate_mesh_velocities</text>
<text text-anchor="start" x="6070" y="-1438" font-family="Helvetica,sans-Serif" font-size="10.00">* TrilinosStructuralMeshMoving</text>
<text text-anchor="start" x="6070" y="-1427" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="6070" y="-1416" font-family="Helvetica,sans-Serif" font-size="10.00">* ~TrilinosStructuralMeshMoving</text>
<text text-anchor="start" x="6070" y="-1405" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="6070" y="-1394" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="6070" y="-1383" font-family="Helvetica,sans-Serif" font-size="10.00">* Solve()</text>
<text text-anchor="start" x="6070" y="-1372" font-family="Helvetica,sans-Serif" font-size="10.00">* GenerateMeshPart()</text>
<text text-anchor="start" x="6070" y="-1361" font-family="Helvetica,sans-Serif" font-size="10.00">* TrilinosStructuralMeshMoving</text>
<text text-anchor="start" x="6070" y="-1350" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
</a>
</g>
</g>
<!-- Node10&#45;&gt;Node60 -->
<g id="edge44" class="edge">
<title>Node10&#45;&gt;Node60</title>
<path fill="none" stroke="#63b8ff" d="M3274.69,-2295.21C3289.59,-2246.02 3314.34,-2199.98 3354.5,-2168 3471.77,-2074.62 5937.91,-2228.64 6052.5,-2132 6169.32,-2033.49 6189.73,-1855.49 6185.29,-1718.86"/>
<polygon fill="none" stroke="#63b8ff" points="3271.38,-2294.06 3271.99,-2304.63 3278.11,-2295.99 3271.38,-2294.06"/>
</g>
<!-- Node18 -->
<g id="node16" class="node">
<title>Node18</title>
<g id="a_node16"><a xlink:href="../../d6/d81/class_kratos_1_1_fractional_step_strategy_for_chimera.html" target="_top" xlink:title=" ">
<polygon fill="white" stroke="#666666" points="1678.5,-187.5 1678.5,-706.5 1854.5,-706.5 1854.5,-187.5 1678.5,-187.5"/>
<text text-anchor="start" x="1686.5" y="-694.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::FractionalStepStrategy</text>
<text text-anchor="start" x="1686.5" y="-683.5" font-family="Helvetica,sans-Serif" font-size="10.00">ForChimera&lt; TSparseSpace,</text>
<text text-anchor="middle" x="1766.5" y="-672.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="#666666" points="1678.5,-665.5 1854.5,-665.5"/>
<text text-anchor="middle" x="1766.5" y="-653.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="1678.5,-646.5 1854.5,-646.5"/>
<text text-anchor="start" x="1686.5" y="-634.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FractionalStepStrategyFor</text>
<text text-anchor="start" x="1686.5" y="-623.5" font-family="Helvetica,sans-Serif" font-size="10.00">Chimera()</text>
<text text-anchor="start" x="1686.5" y="-612.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FractionalStepStrategyFor</text>
<text text-anchor="start" x="1686.5" y="-601.5" font-family="Helvetica,sans-Serif" font-size="10.00">Chimera()</text>
<text text-anchor="start" x="1686.5" y="-590.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~FractionalStepStrategyFor</text>
<text text-anchor="start" x="1686.5" y="-579.5" font-family="Helvetica,sans-Serif" font-size="10.00">Chimera()</text>
<text text-anchor="start" x="1686.5" y="-568.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ operator=()</text>
<text text-anchor="start" x="1686.5" y="-557.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FractionalStepStrategyFor</text>
<text text-anchor="start" x="1686.5" y="-546.5" font-family="Helvetica,sans-Serif" font-size="10.00">Chimera()</text>
<text text-anchor="start" x="1686.5" y="-535.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="1686.5" y="-524.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="1686.5" y="-513.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="1686.5" y="-502.5" font-family="Helvetica,sans-Serif" font-size="10.00"># SolveStep()</text>
<text text-anchor="start" x="1686.5" y="-491.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ComputeSplitOssProjections()</text>
<text text-anchor="start" x="1686.5" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateEndOfStepVelocity()</text>
<text text-anchor="start" x="1686.5" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ChimeraProjectionCorrection()</text>
<text text-anchor="start" x="1686.5" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ChimeraVelocityCorrection()</text>
<text text-anchor="start" x="1686.5" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="1686.5" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolverSettingsType</text>
<text text-anchor="start" x="1686.5" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="1686.5" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="1686.5" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mAreaTolerance</text>
<text text-anchor="start" x="1686.5" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FractionalStepStrategyFor</text>
<text text-anchor="start" x="1686.5" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">Chimera()</text>
<text text-anchor="start" x="1686.5" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FractionalStepStrategyFor</text>
<text text-anchor="start" x="1686.5" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">Chimera()</text>
<text text-anchor="start" x="1686.5" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~FractionalStepStrategyFor</text>
<text text-anchor="start" x="1686.5" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">Chimera()</text>
<text text-anchor="start" x="1686.5" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="1686.5" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FractionalStepStrategyFor</text>
<text text-anchor="start" x="1686.5" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">Chimera()</text>
<text text-anchor="start" x="1686.5" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="1686.5" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="1686.5" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="1686.5" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveStep()</text>
<text text-anchor="start" x="1686.5" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeSplitOssProjections()</text>
<text text-anchor="start" x="1686.5" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateEndOfStepVelocity()</text>
<text text-anchor="start" x="1686.5" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ChimeraProjectionCorrection()</text>
<text text-anchor="start" x="1686.5" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ChimeraVelocityCorrection()</text>
<text text-anchor="start" x="1686.5" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InterpolateVelocity()</text>
<text text-anchor="start" x="1686.5" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeStrategy()</text>
</a>
</g>
</g>
<!-- Node17&#45;&gt;Node18 -->
<g id="edge15" class="edge">
<title>Node17&#45;&gt;Node18</title>
<path fill="none" stroke="#63b8ff" d="M1766.5,-919.78C1766.5,-844.85 1766.5,-771.72 1766.5,-706.26"/>
<polygon fill="none" stroke="#63b8ff" points="1763,-919.34 1766.5,-929.34 1770,-919.34 1763,-919.34"/>
</g>
<!-- Node26 -->
<g id="node24" class="node">
<title>Node26</title>
<g id="a_node24"><a xlink:href="../../d0/d53/class_kratos_1_1_poromechanics_explicit_strategy.html" target="_top" xlink:title=" ">
<polygon fill="#fff0f0" stroke="red" points="3042.5,-330.5 3042.5,-563.5 3254.5,-563.5 3254.5,-330.5 3042.5,-330.5"/>
<text text-anchor="start" x="3050.5" y="-551.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::PoromechanicsExplicit</text>
<text text-anchor="start" x="3050.5" y="-540.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="3148.5" y="-529.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="red" points="3042.5,-522.5 3254.5,-522.5"/>
<text text-anchor="start" x="3050.5" y="-510.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ mInitializeWasPerformed</text>
<text text-anchor="start" x="3050.5" y="-499.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ mCalculateReactionsFlag</text>
<text text-anchor="start" x="3050.5" y="-488.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ mpScheme</text>
<text text-anchor="start" x="3050.5" y="-477.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpParameters</text>
<text text-anchor="start" x="3050.5" y="-466.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mSubModelPartList</text>
<text text-anchor="start" x="3050.5" y="-455.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mVariableNames</text>
<polyline fill="none" stroke="red" points="3042.5,-448.5 3254.5,-448.5"/>
<text text-anchor="start" x="3050.5" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="3050.5" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="3050.5" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PoromechanicsExplicitStrategy()</text>
<text text-anchor="start" x="3050.5" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~PoromechanicsExplicitStrategy()</text>
<text text-anchor="start" x="3050.5" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="3050.5" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="3050.5" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="3050.5" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="3050.5" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateReactions()</text>
<text text-anchor="start" x="3050.5" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckConvergence()</text>
</a>
</g>
</g>
<!-- Node25&#45;&gt;Node26 -->
<g id="edge23" class="edge">
<title>Node25&#45;&gt;Node26</title>
<path fill="none" stroke="#63b8ff" d="M3151.7,-1139.58C3150.75,-935.46 3149.67,-700.28 3149.03,-563.46"/>
<polygon fill="none" stroke="#63b8ff" points="3148.19,-1139.31 3151.74,-1149.3 3155.19,-1139.28 3148.19,-1139.31"/>
</g>
<!-- Node29 -->
<g id="node26" class="node">
<title>Node29</title>
<g id="a_node26"><a xlink:href="../../d2/d29/class_kratos_1_1_nodal_two_step_v_p_strategy_for_f_s_i.html" target="_top" xlink:title=" ">
<polygon fill="white" stroke="#666666" points="3272.5,-143.5 3272.5,-750.5 3472.5,-750.5 3472.5,-143.5 3272.5,-143.5"/>
<text text-anchor="start" x="3280.5" y="-738.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::NodalTwoStepVPStrategy</text>
<text text-anchor="start" x="3280.5" y="-727.5" font-family="Helvetica,sans-Serif" font-size="10.00">ForFSI&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="3372.5" y="-716.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="#666666" points="3272.5,-709.5 3472.5,-709.5"/>
<text text-anchor="middle" x="3372.5" y="-697.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="3272.5,-690.5 3472.5,-690.5"/>
<text text-anchor="start" x="3280.5" y="-678.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NodalTwoStepVPStrategyFor</text>
<text text-anchor="start" x="3280.5" y="-667.5" font-family="Helvetica,sans-Serif" font-size="10.00">FSI()</text>
<text text-anchor="start" x="3280.5" y="-656.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NodalTwoStepVPStrategyFor</text>
<text text-anchor="start" x="3280.5" y="-645.5" font-family="Helvetica,sans-Serif" font-size="10.00">FSI()</text>
<text text-anchor="start" x="3280.5" y="-634.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~NodalTwoStepVPStrategyFor</text>
<text text-anchor="start" x="3280.5" y="-623.5" font-family="Helvetica,sans-Serif" font-size="10.00">FSI()</text>
<text text-anchor="start" x="3280.5" y="-612.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="3280.5" y="-601.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ UpdateElementalStressStrain()</text>
<text text-anchor="start" x="3280.5" y="-590.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Initialize()</text>
<text text-anchor="start" x="3280.5" y="-579.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitialAssignMaterialToEach</text>
<text text-anchor="start" x="3280.5" y="-568.5" font-family="Helvetica,sans-Serif" font-size="10.00">Node()</text>
<text text-anchor="start" x="3280.5" y="-557.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ComputeNodalVolume()</text>
<text text-anchor="start" x="3280.5" y="-546.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ComputeNodalVolumeAndAssign</text>
<text text-anchor="start" x="3280.5" y="-535.5" font-family="Helvetica,sans-Serif" font-size="10.00">FlagToElementType()</text>
<text text-anchor="start" x="3280.5" y="-524.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="3280.5" y="-513.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 17 more...</text>
<text text-anchor="start" x="3280.5" y="-502.5" font-family="Helvetica,sans-Serif" font-size="10.00"># operator=()</text>
<text text-anchor="start" x="3280.5" y="-491.5" font-family="Helvetica,sans-Serif" font-size="10.00"># NodalTwoStepVPStrategyFor</text>
<text text-anchor="start" x="3280.5" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00">FSI()</text>
<text text-anchor="start" x="3280.5" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="3280.5" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="3280.5" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodeType</text>
<text text-anchor="start" x="3280.5" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GeometryType</text>
<text text-anchor="start" x="3280.5" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="3280.5" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="3280.5" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="3280.5" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="3280.5" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="3280.5" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="3280.5" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 6 more...</text>
<text text-anchor="start" x="3280.5" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodalTwoStepVPStrategyFor</text>
<text text-anchor="start" x="3280.5" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">FSI()</text>
<text text-anchor="start" x="3280.5" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodalTwoStepVPStrategyFor</text>
<text text-anchor="start" x="3280.5" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">FSI()</text>
<text text-anchor="start" x="3280.5" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~NodalTwoStepVPStrategyFor</text>
<text text-anchor="start" x="3280.5" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">FSI()</text>
<text text-anchor="start" x="3280.5" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="3280.5" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateElementalStressStrain()</text>
<text text-anchor="start" x="3280.5" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="3280.5" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitialAssignMaterialToEach</text>
<text text-anchor="start" x="3280.5" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">Node()</text>
<text text-anchor="start" x="3280.5" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeNodalVolume()</text>
<text text-anchor="start" x="3280.5" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ComputeNodalVolumeAndAssign</text>
<text text-anchor="start" x="3280.5" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">FlagToElementType()</text>
<text text-anchor="start" x="3280.5" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="3280.5" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 17 more...</text>
<text text-anchor="start" x="3280.5" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="3280.5" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodalTwoStepVPStrategyFor</text>
<text text-anchor="start" x="3280.5" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">FSI()</text>
</a>
</g>
</g>
<!-- Node28&#45;&gt;Node29 -->
<g id="edge25" class="edge">
<title>Node28&#45;&gt;Node29</title>
<path fill="none" stroke="#63b8ff" d="M3369.89,-1012.98C3370.31,-922.97 3370.73,-832.06 3371.1,-750.26"/>
<polygon fill="none" stroke="#63b8ff" points="3366.39,-1012.71 3369.84,-1022.73 3373.39,-1012.75 3366.39,-1012.71"/>
</g>
<!-- Node37 -->
<g id="node34" class="node">
<title>Node37</title>
<g id="a_node34"><a xlink:href="../../db/da7/class_kratos_1_1_residual_based_derivative_recovery_strategy.html" target="_top" xlink:title="Short class definition.">
<polygon fill="white" stroke="#666666" points="4404,-259 4404,-635 4601,-635 4601,-259 4404,-259"/>
<text text-anchor="start" x="4412" y="-623" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ResidualBasedDerivative</text>
<text text-anchor="start" x="4412" y="-612" font-family="Helvetica,sans-Serif" font-size="10.00">RecoveryStrategy&lt; TSparseSpace,</text>
<text text-anchor="middle" x="4502.5" y="-601" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="#666666" points="4404,-594 4601,-594"/>
<text text-anchor="middle" x="4502.5" y="-582" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="4404,-575 4601,-575"/>
<text text-anchor="start" x="4412" y="-563" font-family="Helvetica,sans-Serif" font-size="10.00">+ ResidualBasedDerivativeRecovery</text>
<text text-anchor="start" x="4412" y="-552" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="4412" y="-541" font-family="Helvetica,sans-Serif" font-size="10.00">+ ResidualBasedDerivativeRecovery</text>
<text text-anchor="start" x="4412" y="-530" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="4412" y="-519" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~ResidualBasedDerivative</text>
<text text-anchor="start" x="4412" y="-508" font-family="Helvetica,sans-Serif" font-size="10.00">RecoveryStrategy()</text>
<text text-anchor="start" x="4412" y="-497" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="4412" y="-486" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="4412" y="-475" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseSpaceType</text>
<text text-anchor="start" x="4412" y="-464" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="4412" y="-453" font-family="Helvetica,sans-Serif" font-size="10.00">* TBuilderAndSolverType</text>
<text text-anchor="start" x="4412" y="-442" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="4412" y="-431" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="4412" y="-420" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="4412" y="-409" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="4412" y="-398" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="4412" y="-387" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixPointerType</text>
<text text-anchor="start" x="4412" y="-376" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorPointerType</text>
<text text-anchor="start" x="4412" y="-365" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="4412" y="-354" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="4412" y="-343" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedDerivativeRecovery</text>
<text text-anchor="start" x="4412" y="-332" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="4412" y="-321" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedDerivativeRecovery</text>
<text text-anchor="start" x="4412" y="-310" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="4412" y="-299" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ResidualBasedDerivative</text>
<text text-anchor="start" x="4412" y="-288" font-family="Helvetica,sans-Serif" font-size="10.00">RecoveryStrategy()</text>
<text text-anchor="start" x="4412" y="-277" font-family="Helvetica,sans-Serif" font-size="10.00">* ResidualBasedDerivativeRecovery</text>
<text text-anchor="start" x="4412" y="-266" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
</a>
</g>
</g>
<!-- Node36&#45;&gt;Node37 -->
<g id="edge33" class="edge">
<title>Node36&#45;&gt;Node37</title>
<path fill="none" stroke="#63b8ff" d="M4836.96,-1227.43C4825.74,-1122.56 4795.15,-1011.1 4724.5,-930 4689.6,-889.94 4646.77,-932.83 4610.5,-894 4545.79,-824.71 4517.9,-723.47 4506.59,-634.95"/>
<polygon fill="none" stroke="#63b8ff" points="4833.48,-1227.76 4837.96,-1237.36 4840.44,-1227.06 4833.48,-1227.76"/>
</g>
<!-- Node39 -->
<g id="node36" class="node">
<title>Node39</title>
<g id="a_node36"><a xlink:href="../../d8/de2/class_kratos_1_1_arc_length_strategy.html" target="_top" xlink:title="This is the base ArcLengthStrategy.">
<polygon fill="white" stroke="#666666" points="4619.5,-77.5 4619.5,-816.5 4819.5,-816.5 4819.5,-77.5 4619.5,-77.5"/>
<text text-anchor="start" x="4627.5" y="-804.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ArcLengthStrategy</text>
<text text-anchor="start" x="4627.5" y="-793.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="4719.5" y="-782.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="#666666" points="4619.5,-775.5 4819.5,-775.5"/>
<text text-anchor="start" x="4627.5" y="-763.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpf</text>
<text text-anchor="start" x="4627.5" y="-752.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpDxf</text>
<text text-anchor="start" x="4627.5" y="-741.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpDxb</text>
<text text-anchor="start" x="4627.5" y="-730.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpDxPred</text>
<text text-anchor="start" x="4627.5" y="-719.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpDxStep</text>
<text text-anchor="start" x="4627.5" y="-708.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mDesiredIterations</text>
<text text-anchor="start" x="4627.5" y="-697.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mInitializeArcLengthWasPerformed</text>
<text text-anchor="start" x="4627.5" y="-686.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mInsideIterationLoop</text>
<text text-anchor="start" x="4627.5" y="-675.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mMaxRadiusFactor</text>
<text text-anchor="start" x="4627.5" y="-664.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mMinRadiusFactor</text>
<text text-anchor="start" x="4627.5" y="-653.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 8 more...</text>
<polyline fill="none" stroke="#666666" points="4619.5,-646.5 4819.5,-646.5"/>
<text text-anchor="start" x="4627.5" y="-634.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="4627.5" y="-623.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="4627.5" y="-612.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="4627.5" y="-601.5" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateDatabase()</text>
<text text-anchor="start" x="4627.5" y="-590.5" font-family="Helvetica,sans-Serif" font-size="10.00"># MaxIterationsExceeded()</text>
<text text-anchor="start" x="4627.5" y="-579.5" font-family="Helvetica,sans-Serif" font-size="10.00"># ArcLengthStrategy()</text>
<text text-anchor="start" x="4627.5" y="-568.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="4627.5" y="-557.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TBuilderAndSolverType</text>
<text text-anchor="start" x="4627.5" y="-546.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="4627.5" y="-535.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseSpaceType</text>
<text text-anchor="start" x="4627.5" y="-524.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="4627.5" y="-513.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TConvergenceCriteriaType</text>
<text text-anchor="start" x="4627.5" y="-502.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="4627.5" y="-491.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="4627.5" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="4627.5" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="4627.5" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="4627.5" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixPointerType</text>
<text text-anchor="start" x="4627.5" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorPointerType</text>
<text text-anchor="start" x="4627.5" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="4627.5" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="4627.5" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpf</text>
<text text-anchor="start" x="4627.5" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpDxf</text>
<text text-anchor="start" x="4627.5" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpDxb</text>
<text text-anchor="start" x="4627.5" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpDxPred</text>
<text text-anchor="start" x="4627.5" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpDxStep</text>
<text text-anchor="start" x="4627.5" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mDesiredIterations</text>
<text text-anchor="start" x="4627.5" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mInitializeArcLengthWasPerformed</text>
<text text-anchor="start" x="4627.5" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mInsideIterationLoop</text>
<text text-anchor="start" x="4627.5" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxRadiusFactor</text>
<text text-anchor="start" x="4627.5" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMinRadiusFactor</text>
<text text-anchor="start" x="4627.5" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 8 more...</text>
<text text-anchor="start" x="4627.5" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ArcLengthStrategy()</text>
<text text-anchor="start" x="4627.5" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ArcLengthStrategy()</text>
<text text-anchor="start" x="4627.5" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="4627.5" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Initialize()</text>
<text text-anchor="start" x="4627.5" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="4627.5" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="4627.5" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="4627.5" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="4627.5" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateExternalLoads()</text>
<text text-anchor="start" x="4627.5" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefaultParameters()</text>
<text text-anchor="start" x="4627.5" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSystemVector()</text>
<text text-anchor="start" x="4627.5" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SaveInitializeSystemVector()</text>
<text text-anchor="start" x="4627.5" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Name()</text>
<text text-anchor="start" x="4627.5" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="4627.5" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="4627.5" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="4627.5" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateDatabase()</text>
<text text-anchor="start" x="4627.5" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* MaxIterationsExceeded()</text>
<text text-anchor="start" x="4627.5" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ArcLengthStrategy()</text>
</a>
</g>
</g>
<!-- Node38&#45;&gt;Node39 -->
<g id="edge35" class="edge">
<title>Node38&#45;&gt;Node39</title>
<path fill="none" stroke="#63b8ff" d="M4966.65,-986.74C4955.24,-966.73 4942.26,-947.69 4927.5,-930 4897.51,-894.05 4859.75,-928.86 4828.5,-894 4807.82,-870.93 4790.9,-844.58 4777.09,-816.48"/>
<polygon fill="none" stroke="#63b8ff" points="4963.49,-988.26 4971.39,-995.32 4969.62,-984.88 4963.49,-988.26"/>
</g>
<!-- Node40 -->
<g id="node37" class="node">
<title>Node40</title>
<g id="a_node37"><a xlink:href="../../d0/d57/class_kratos_1_1_formfinding_strategy.html" target="_top" xlink:title=" ">
<polygon fill="white" stroke="#666666" points="4838,-297.5 4838,-596.5 5019,-596.5 5019,-297.5 4838,-297.5"/>
<text text-anchor="start" x="4846" y="-584.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::FormfindingStrategy</text>
<text text-anchor="start" x="4846" y="-573.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="4928.5" y="-562.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="#666666" points="4838,-555.5 5019,-555.5"/>
<text text-anchor="middle" x="4928.5" y="-543.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="4838,-536.5 5019,-536.5"/>
<text text-anchor="start" x="4846" y="-524.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TConvergenceCriteriaType</text>
<text text-anchor="start" x="4846" y="-513.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="4846" y="-502.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TBuilderAndSolverType</text>
<text text-anchor="start" x="4846" y="-491.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="4846" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="4846" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="4846" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IterationIOType</text>
<text text-anchor="start" x="4846" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IterationIOPointerType</text>
<text text-anchor="start" x="4846" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="4846" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="4846" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mpIterationIO</text>
<text text-anchor="start" x="4846" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mProjectionSettings</text>
<text text-anchor="start" x="4846" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mrFormFindingModelPart</text>
<text text-anchor="start" x="4846" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mPrintingFormat</text>
<text text-anchor="start" x="4846" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mIterationNumber</text>
<text text-anchor="start" x="4846" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mWriteFormFoundGeometryFile</text>
<text text-anchor="start" x="4846" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FormfindingStrategy()</text>
<text text-anchor="start" x="4846" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~FormfindingStrategy()</text>
<text text-anchor="start" x="4846" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* WriteFormFoundMdpa()</text>
<text text-anchor="start" x="4846" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateDatabase()</text>
<text text-anchor="start" x="4846" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">and 6 more...</text>
</a>
</g>
</g>
<!-- Node38&#45;&gt;Node40 -->
<g id="edge36" class="edge">
<title>Node38&#45;&gt;Node40</title>
<path fill="none" stroke="#63b8ff" d="M4978.66,-985.32C4965.27,-841.89 4951.91,-698.8 4942.35,-596.39"/>
<polygon fill="none" stroke="#63b8ff" points="4975.15,-985.39 4979.56,-995.02 4982.12,-984.74 4975.15,-985.39"/>
</g>
<!-- Node41 -->
<g id="node38" class="node">
<title>Node41</title>
<g id="a_node38"><a xlink:href="../../d7/d24/class_kratos_1_1_geo_mechanics_newton_raphson_strategy.html" target="_top" xlink:title=" ">
<polygon fill="#fff0f0" stroke="red" points="5037,-319.5 5037,-574.5 5224,-574.5 5224,-319.5 5037,-319.5"/>
<text text-anchor="start" x="5045" y="-562.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::GeoMechanicsNewton</text>
<text text-anchor="start" x="5045" y="-551.5" font-family="Helvetica,sans-Serif" font-size="10.00">RaphsonStrategy&lt; TSparseSpace,</text>
<text text-anchor="middle" x="5130.5" y="-540.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TDenseSpace, TLinearSolver &gt;</text>
<polyline fill="none" stroke="red" points="5037,-533.5 5224,-533.5"/>
<text text-anchor="start" x="5045" y="-521.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ mpScheme</text>
<text text-anchor="start" x="5045" y="-510.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ mpBuilderAndSolver</text>
<text text-anchor="start" x="5045" y="-499.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ mpA</text>
<text text-anchor="start" x="5045" y="-488.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ mpb</text>
<text text-anchor="start" x="5045" y="-477.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ mpDx</text>
<text text-anchor="start" x="5045" y="-466.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ mMaxIterationNumber</text>
<text text-anchor="start" x="5045" y="-455.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ mInitializeWasPerformed</text>
<text text-anchor="start" x="5045" y="-444.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mpParameters</text>
<text text-anchor="start" x="5045" y="-433.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mSubModelPartList</text>
<text text-anchor="start" x="5045" y="-422.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mVariableNames</text>
<polyline fill="none" stroke="red" points="5037,-415.5 5224,-415.5"/>
<text text-anchor="start" x="5045" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="5045" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="5045" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GeoMechanicsNewtonRaphson</text>
<text text-anchor="start" x="5045" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="5045" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~GeoMechanicsNewtonRaphson</text>
<text text-anchor="start" x="5045" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy()</text>
<text text-anchor="start" x="5045" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00"># Check()</text>
<text text-anchor="start" x="5045" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateReferenceDofsNorm()</text>
</a>
</g>
</g>
<!-- Node38&#45;&gt;Node41 -->
<g id="edge37" class="edge">
<title>Node38&#45;&gt;Node41</title>
<path fill="none" stroke="#63b8ff" d="M5080.33,-985.43C5094.72,-831.3 5109.07,-677.55 5118.72,-574.24"/>
<polygon fill="none" stroke="#63b8ff" points="5076.88,-984.74 5079.44,-995.02 5083.85,-985.39 5076.88,-984.74"/>
</g>
<!-- Node44 -->
<g id="node39" class="node">
<title>Node44</title>
<g id="a_node39"><a xlink:href="../../d0/ddf/class_kratos_1_1_hexahedra_newton_raphson_strategy.html" target="_top" xlink:title="This is the base Newton Raphson strategy.">
<polygon fill="white" stroke="#666666" points="5242.5,-275.5 5242.5,-618.5 5460.5,-618.5 5460.5,-275.5 5242.5,-275.5"/>
<text text-anchor="start" x="5250.5" y="-606.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::HexahedraNewtonRaphson</text>
<text text-anchor="start" x="5250.5" y="-595.5" font-family="Helvetica,sans-Serif" font-size="10.00">Strategy&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="5351.5" y="-584.5" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="#666666" points="5242.5,-577.5 5460.5,-577.5"/>
<text text-anchor="middle" x="5351.5" y="-565.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="5242.5,-558.5 5460.5,-558.5"/>
<text text-anchor="start" x="5250.5" y="-546.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ HexahedraNewtonRaphsonStrategy()</text>
<text text-anchor="start" x="5250.5" y="-535.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ HexahedraNewtonRaphsonStrategy()</text>
<text text-anchor="start" x="5250.5" y="-524.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~HexahedraNewtonRaphsonStrategy()</text>
<text text-anchor="start" x="5250.5" y="-513.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="5250.5" y="-502.5" font-family="Helvetica,sans-Serif" font-size="10.00"># HexahedraNewtonRaphsonStrategy()</text>
<text text-anchor="start" x="5250.5" y="-491.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TConvergenceCriteriaType</text>
<text text-anchor="start" x="5250.5" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="5250.5" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TBuilderAndSolverType</text>
<text text-anchor="start" x="5250.5" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="5250.5" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseSpaceType</text>
<text text-anchor="start" x="5250.5" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="5250.5" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="5250.5" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="5250.5" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="5250.5" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="5250.5" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="5250.5" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixPointerType</text>
<text text-anchor="start" x="5250.5" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorPointerType</text>
<text text-anchor="start" x="5250.5" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="5250.5" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="5250.5" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* HexahedraNewtonRaphsonStrategy()</text>
<text text-anchor="start" x="5250.5" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">* HexahedraNewtonRaphsonStrategy()</text>
<text text-anchor="start" x="5250.5" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~HexahedraNewtonRaphsonStrategy()</text>
<text text-anchor="start" x="5250.5" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="5250.5" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* HexahedraNewtonRaphsonStrategy()</text>
</a>
</g>
</g>
<!-- Node38&#45;&gt;Node44 -->
<g id="edge38" class="edge">
<title>Node38&#45;&gt;Node44</title>
<path fill="none" stroke="#63b8ff" d="M5092.21,-986.62C5103.65,-966.64 5116.68,-947.65 5131.5,-930 5162.14,-893.5 5200.21,-929.04 5232.5,-894 5301.06,-819.6 5330.94,-710.11 5343.62,-618.23"/>
<polygon fill="none" stroke="#63b8ff" points="5089.25,-984.75 5087.45,-995.19 5095.37,-988.15 5089.25,-984.75"/>
</g>
<!-- Node45 -->
<g id="node40" class="node">
<title>Node45</title>
<g id="a_node40"><a xlink:href="../../de/d22/class_kratos_1_1_line_search_strategy.html" target="_top" xlink:title="Short class definition.">
<polygon fill="#fff0f0" stroke="red" points="5479,-127 5479,-767 5650,-767 5650,-127 5479,-127"/>
<text text-anchor="start" x="5487" y="-755" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::LineSearchStrategy</text>
<text text-anchor="start" x="5487" y="-744" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="5564.5" y="-733" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="red" points="5479,-726 5650,-726"/>
<text text-anchor="middle" x="5564.5" y="-714" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="red" points="5479,-707 5650,-707"/>
<text text-anchor="start" x="5487" y="-695" font-family="Helvetica,sans-Serif" font-size="10.00">+ LineSearchStrategy()</text>
<text text-anchor="start" x="5487" y="-684" font-family="Helvetica,sans-Serif" font-size="10.00">+ LineSearchStrategy()</text>
<text text-anchor="start" x="5487" y="-673" font-family="Helvetica,sans-Serif" font-size="10.00">+ LineSearchStrategy()</text>
<text text-anchor="start" x="5487" y="-662" font-family="Helvetica,sans-Serif" font-size="10.00">+ LineSearchStrategy()</text>
<text text-anchor="start" x="5487" y="-651" font-family="Helvetica,sans-Serif" font-size="10.00">+ LineSearchStrategy()</text>
<text text-anchor="start" x="5487" y="-640" font-family="Helvetica,sans-Serif" font-size="10.00">+ LineSearchStrategy()</text>
<text text-anchor="start" x="5487" y="-629" font-family="Helvetica,sans-Serif" font-size="10.00">+ LineSearchStrategy()</text>
<text text-anchor="start" x="5487" y="-618" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~LineSearchStrategy()</text>
<text text-anchor="start" x="5487" y="-607" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="5487" y="-596" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="5487" y="-585" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="5487" y="-574" font-family="Helvetica,sans-Serif" font-size="10.00"># UpdateDatabase()</text>
<text text-anchor="start" x="5487" y="-563" font-family="Helvetica,sans-Serif" font-size="10.00"># AssignSettings()</text>
<text text-anchor="start" x="5487" y="-552" font-family="Helvetica,sans-Serif" font-size="10.00"># OverrideDefaultSettingsWith</text>
<text text-anchor="start" x="5487" y="-541" font-family="Helvetica,sans-Serif" font-size="10.00">Parameters()</text>
<text text-anchor="start" x="5487" y="-530" font-family="Helvetica,sans-Serif" font-size="10.00"># LineSearchStrategy()</text>
<text text-anchor="start" x="5487" y="-519" font-family="Helvetica,sans-Serif" font-size="10.00">* TConvergenceCriteriaType</text>
<text text-anchor="start" x="5487" y="-508" font-family="Helvetica,sans-Serif" font-size="10.00">* SolvingStrategyType</text>
<text text-anchor="start" x="5487" y="-497" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="5487" y="-486" font-family="Helvetica,sans-Serif" font-size="10.00">* ClassType</text>
<text text-anchor="start" x="5487" y="-475" font-family="Helvetica,sans-Serif" font-size="10.00">* TBuilderAndSolverType</text>
<text text-anchor="start" x="5487" y="-464" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="5487" y="-453" font-family="Helvetica,sans-Serif" font-size="10.00">* SparseSpaceType</text>
<text text-anchor="start" x="5487" y="-442" font-family="Helvetica,sans-Serif" font-size="10.00">* TSchemeType</text>
<text text-anchor="start" x="5487" y="-431" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="5487" y="-420" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="5487" y="-409" font-family="Helvetica,sans-Serif" font-size="10.00">and 6 more...</text>
<text text-anchor="start" x="5487" y="-398" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxLineSearchIterations</text>
<text text-anchor="start" x="5487" y="-387" font-family="Helvetica,sans-Serif" font-size="10.00">* mFirstAlphaValue</text>
<text text-anchor="start" x="5487" y="-376" font-family="Helvetica,sans-Serif" font-size="10.00">* mSecondAlphaValue</text>
<text text-anchor="start" x="5487" y="-365" font-family="Helvetica,sans-Serif" font-size="10.00">* mMinAlpha</text>
<text text-anchor="start" x="5487" y="-354" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxAlpha</text>
<text text-anchor="start" x="5487" y="-343" font-family="Helvetica,sans-Serif" font-size="10.00">* mLineSearchTolerance</text>
<text text-anchor="start" x="5487" y="-332" font-family="Helvetica,sans-Serif" font-size="10.00">* LineSearchStrategy()</text>
<text text-anchor="start" x="5487" y="-321" font-family="Helvetica,sans-Serif" font-size="10.00">* LineSearchStrategy()</text>
<text text-anchor="start" x="5487" y="-310" font-family="Helvetica,sans-Serif" font-size="10.00">* LineSearchStrategy()</text>
<text text-anchor="start" x="5487" y="-299" font-family="Helvetica,sans-Serif" font-size="10.00">* LineSearchStrategy()</text>
<text text-anchor="start" x="5487" y="-288" font-family="Helvetica,sans-Serif" font-size="10.00">* LineSearchStrategy()</text>
<text text-anchor="start" x="5487" y="-277" font-family="Helvetica,sans-Serif" font-size="10.00">* LineSearchStrategy()</text>
<text text-anchor="start" x="5487" y="-266" font-family="Helvetica,sans-Serif" font-size="10.00">* LineSearchStrategy()</text>
<text text-anchor="start" x="5487" y="-255" font-family="Helvetica,sans-Serif" font-size="10.00">* ~LineSearchStrategy()</text>
<text text-anchor="start" x="5487" y="-244" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="5487" y="-233" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefaultParameters()</text>
<text text-anchor="start" x="5487" y="-222" font-family="Helvetica,sans-Serif" font-size="10.00">* Name()</text>
<text text-anchor="start" x="5487" y="-211" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="5487" y="-200" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="5487" y="-189" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="5487" y="-178" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateDatabase()</text>
<text text-anchor="start" x="5487" y="-167" font-family="Helvetica,sans-Serif" font-size="10.00">* AssignSettings()</text>
<text text-anchor="start" x="5487" y="-156" font-family="Helvetica,sans-Serif" font-size="10.00">* OverrideDefaultSettingsWith</text>
<text text-anchor="start" x="5487" y="-145" font-family="Helvetica,sans-Serif" font-size="10.00">Parameters()</text>
<text text-anchor="start" x="5487" y="-134" font-family="Helvetica,sans-Serif" font-size="10.00">* LineSearchStrategy()</text>
</a>
</g>
</g>
<!-- Node38&#45;&gt;Node45 -->
<g id="edge39" class="edge">
<title>Node38&#45;&gt;Node45</title>
<path fill="none" stroke="#63b8ff" d="M5083.89,-986.94C5097.45,-966.33 5113.22,-947.18 5131.5,-930 5241.6,-826.55 5357.28,-995.14 5469.5,-894 5507.21,-860.01 5531.99,-815.07 5547.95,-766.79"/>
<polygon fill="none" stroke="#63b8ff" points="5081.03,-984.91 5078.62,-995.23 5086.94,-988.66 5081.03,-984.91"/>
</g>
<!-- Node63 -->
<g id="node48" class="node">
<title>Node63</title>
<g id="a_node48"><a xlink:href="../../d6/df4/class_kratos_1_1_three_step_v_p_strategy.html" target="_top" xlink:title=" ">
<polygon fill="white" stroke="#666666" points="6283,-1068 6283,-1994 6504,-1994 6504,-1068 6283,-1068"/>
<text text-anchor="start" x="6291" y="-1982" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::ThreeStepVPStrategy</text>
<text text-anchor="start" x="6291" y="-1971" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="6393.5" y="-1960" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="#666666" points="6283,-1953 6504,-1953"/>
<text text-anchor="start" x="6291" y="-1941" font-family="Helvetica,sans-Serif" font-size="10.00"># mVelocityTolerance</text>
<text text-anchor="start" x="6291" y="-1930" font-family="Helvetica,sans-Serif" font-size="10.00"># mPressureTolerance</text>
<text text-anchor="start" x="6291" y="-1919" font-family="Helvetica,sans-Serif" font-size="10.00"># mMaxPressureIter</text>
<text text-anchor="start" x="6291" y="-1908" font-family="Helvetica,sans-Serif" font-size="10.00"># mDomainSize</text>
<text text-anchor="start" x="6291" y="-1897" font-family="Helvetica,sans-Serif" font-size="10.00"># mTimeOrder</text>
<text text-anchor="start" x="6291" y="-1886" font-family="Helvetica,sans-Serif" font-size="10.00"># mReformDofSet</text>
<text text-anchor="start" x="6291" y="-1875" font-family="Helvetica,sans-Serif" font-size="10.00"># mpMomentumStrategy</text>
<text text-anchor="start" x="6291" y="-1864" font-family="Helvetica,sans-Serif" font-size="10.00"># mpPressureStrategy</text>
<polyline fill="none" stroke="#666666" points="6283,-1857 6504,-1857"/>
<text text-anchor="start" x="6291" y="-1845" font-family="Helvetica,sans-Serif" font-size="10.00">+ ThreeStepVPStrategy()</text>
<text text-anchor="start" x="6291" y="-1834" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~ThreeStepVPStrategy()</text>
<text text-anchor="start" x="6291" y="-1823" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="6291" y="-1812" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetTimeCoefficients()</text>
<text text-anchor="start" x="6291" y="-1801" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="6291" y="-1790" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="6291" y="-1779" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="6291" y="-1768" font-family="Helvetica,sans-Serif" font-size="10.00">+ UpdateStressStrain()</text>
<text text-anchor="start" x="6291" y="-1757" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateTemporalVariables()</text>
<text text-anchor="start" x="6291" y="-1746" font-family="Helvetica,sans-Serif" font-size="10.00">+ UpdateAccelerations()</text>
<text text-anchor="start" x="6291" y="-1735" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="6291" y="-1724" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="6291" y="-1713" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="6291" y="-1702" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="6291" y="-1691" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="6291" y="-1680" font-family="Helvetica,sans-Serif" font-size="10.00"># SolveFirstVelocitySystem()</text>
<text text-anchor="start" x="6291" y="-1669" font-family="Helvetica,sans-Serif" font-size="10.00"># SolveContinuityIteration()</text>
<text text-anchor="start" x="6291" y="-1658" font-family="Helvetica,sans-Serif" font-size="10.00"># CalculateEndOfStepVelocity()</text>
<text text-anchor="start" x="6291" y="-1647" font-family="Helvetica,sans-Serif" font-size="10.00"># RecoverFractionalVelocity()</text>
<text text-anchor="start" x="6291" y="-1636" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckVelocityIncrementConvergence()</text>
<text text-anchor="start" x="6291" y="-1625" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckVelocityConvergence()</text>
<text text-anchor="start" x="6291" y="-1614" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckPressureIncrementConvergence()</text>
<text text-anchor="start" x="6291" y="-1603" font-family="Helvetica,sans-Serif" font-size="10.00"># FixPressure()</text>
<text text-anchor="start" x="6291" y="-1592" font-family="Helvetica,sans-Serif" font-size="10.00"># FreePressure()</text>
<text text-anchor="start" x="6291" y="-1581" font-family="Helvetica,sans-Serif" font-size="10.00"># operator=()</text>
<text text-anchor="start" x="6291" y="-1570" font-family="Helvetica,sans-Serif" font-size="10.00"># ThreeStepVPStrategy()</text>
<text text-anchor="start" x="6291" y="-1559" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="6291" y="-1548" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="6291" y="-1537" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="6291" y="-1526" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="6291" y="-1515" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="6291" y="-1504" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="6291" y="-1493" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="6291" y="-1482" font-family="Helvetica,sans-Serif" font-size="10.00">* StrategyPointerType</text>
<text text-anchor="start" x="6291" y="-1471" font-family="Helvetica,sans-Serif" font-size="10.00">* SolverSettingsType</text>
<text text-anchor="start" x="6291" y="-1460" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="6291" y="-1449" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="6291" y="-1438" font-family="Helvetica,sans-Serif" font-size="10.00">* mVelocityTolerance</text>
<text text-anchor="start" x="6291" y="-1427" font-family="Helvetica,sans-Serif" font-size="10.00">* mPressureTolerance</text>
<text text-anchor="start" x="6291" y="-1416" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxPressureIter</text>
<text text-anchor="start" x="6291" y="-1405" font-family="Helvetica,sans-Serif" font-size="10.00">* mDomainSize</text>
<text text-anchor="start" x="6291" y="-1394" font-family="Helvetica,sans-Serif" font-size="10.00">* mTimeOrder</text>
<text text-anchor="start" x="6291" y="-1383" font-family="Helvetica,sans-Serif" font-size="10.00">* mReformDofSet</text>
<text text-anchor="start" x="6291" y="-1372" font-family="Helvetica,sans-Serif" font-size="10.00">* mpMomentumStrategy</text>
<text text-anchor="start" x="6291" y="-1361" font-family="Helvetica,sans-Serif" font-size="10.00">* mpPressureStrategy</text>
<text text-anchor="start" x="6291" y="-1350" font-family="Helvetica,sans-Serif" font-size="10.00">* ThreeStepVPStrategy()</text>
<text text-anchor="start" x="6291" y="-1339" font-family="Helvetica,sans-Serif" font-size="10.00">* ~ThreeStepVPStrategy()</text>
<text text-anchor="start" x="6291" y="-1328" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="6291" y="-1317" font-family="Helvetica,sans-Serif" font-size="10.00">* SetTimeCoefficients()</text>
<text text-anchor="start" x="6291" y="-1306" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="6291" y="-1295" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="6291" y="-1284" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="6291" y="-1273" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateStressStrain()</text>
<text text-anchor="start" x="6291" y="-1262" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateTemporalVariables()</text>
<text text-anchor="start" x="6291" y="-1251" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateAccelerations()</text>
<text text-anchor="start" x="6291" y="-1240" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="6291" y="-1229" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="6291" y="-1218" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="6291" y="-1207" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="6291" y="-1196" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="6291" y="-1185" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveFirstVelocitySystem()</text>
<text text-anchor="start" x="6291" y="-1174" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveContinuityIteration()</text>
<text text-anchor="start" x="6291" y="-1163" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateEndOfStepVelocity()</text>
<text text-anchor="start" x="6291" y="-1152" font-family="Helvetica,sans-Serif" font-size="10.00">* RecoverFractionalVelocity()</text>
<text text-anchor="start" x="6291" y="-1141" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckVelocityIncrementConvergence()</text>
<text text-anchor="start" x="6291" y="-1130" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckVelocityConvergence()</text>
<text text-anchor="start" x="6291" y="-1119" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckPressureIncrementConvergence()</text>
<text text-anchor="start" x="6291" y="-1108" font-family="Helvetica,sans-Serif" font-size="10.00">* FixPressure()</text>
<text text-anchor="start" x="6291" y="-1097" font-family="Helvetica,sans-Serif" font-size="10.00">* FreePressure()</text>
<text text-anchor="start" x="6291" y="-1086" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="6291" y="-1075" font-family="Helvetica,sans-Serif" font-size="10.00">* ThreeStepVPStrategy()</text>
</a>
</g>
</g>
<!-- Node62&#45;&gt;Node63 -->
<g id="edge47" class="edge">
<title>Node62&#45;&gt;Node63</title>
<path fill="none" stroke="#63b8ff" d="M6393.5,-2157.36C6393.5,-2103.77 6393.5,-2048.4 6393.5,-1993.79"/>
<polygon fill="none" stroke="#63b8ff" points="6390,-2157.26 6393.5,-2167.26 6397,-2157.26 6390,-2157.26"/>
</g>
<!-- Node64 -->
<g id="node49" class="node">
<title>Node64</title>
<g id="a_node49"><a xlink:href="../../dd/de3/class_kratos_1_1_two_step_v_p_strategy.html" target="_top" xlink:title=" ">
<polygon fill="#fff0f0" stroke="red" points="6522,-1101 6522,-1961 6707,-1961 6707,-1101 6522,-1101"/>
<text text-anchor="start" x="6530" y="-1949" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::TwoStepVPStrategy</text>
<text text-anchor="start" x="6530" y="-1938" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; TSparseSpace, TDenseSpace,</text>
<text text-anchor="middle" x="6614.5" y="-1927" font-family="Helvetica,sans-Serif" font-size="10.00"> TLinearSolver &gt;</text>
<polyline fill="none" stroke="red" points="6522,-1920 6707,-1920"/>
<text text-anchor="start" x="6530" y="-1908" font-family="Helvetica,sans-Serif" font-size="10.00"># mVelocityTolerance</text>
<text text-anchor="start" x="6530" y="-1897" font-family="Helvetica,sans-Serif" font-size="10.00"># mPressureTolerance</text>
<text text-anchor="start" x="6530" y="-1886" font-family="Helvetica,sans-Serif" font-size="10.00"># mMaxPressureIter</text>
<text text-anchor="start" x="6530" y="-1875" font-family="Helvetica,sans-Serif" font-size="10.00"># mDomainSize</text>
<text text-anchor="start" x="6530" y="-1864" font-family="Helvetica,sans-Serif" font-size="10.00"># mTimeOrder</text>
<text text-anchor="start" x="6530" y="-1853" font-family="Helvetica,sans-Serif" font-size="10.00"># mReformDofSet</text>
<text text-anchor="start" x="6530" y="-1842" font-family="Helvetica,sans-Serif" font-size="10.00"># mpMomentumStrategy</text>
<text text-anchor="start" x="6530" y="-1831" font-family="Helvetica,sans-Serif" font-size="10.00"># mpPressureStrategy</text>
<polyline fill="none" stroke="red" points="6522,-1824 6707,-1824"/>
<text text-anchor="start" x="6530" y="-1812" font-family="Helvetica,sans-Serif" font-size="10.00">+ TwoStepVPStrategy()</text>
<text text-anchor="start" x="6530" y="-1801" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~TwoStepVPStrategy()</text>
<text text-anchor="start" x="6530" y="-1790" font-family="Helvetica,sans-Serif" font-size="10.00">+ Check()</text>
<text text-anchor="start" x="6530" y="-1779" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetTimeCoefficients()</text>
<text text-anchor="start" x="6530" y="-1768" font-family="Helvetica,sans-Serif" font-size="10.00">+ SolveSolutionStep()</text>
<text text-anchor="start" x="6530" y="-1757" font-family="Helvetica,sans-Serif" font-size="10.00">+ FinalizeSolutionStep()</text>
<text text-anchor="start" x="6530" y="-1746" font-family="Helvetica,sans-Serif" font-size="10.00">+ InitializeSolutionStep()</text>
<text text-anchor="start" x="6530" y="-1735" font-family="Helvetica,sans-Serif" font-size="10.00">+ UpdateStressStrain()</text>
<text text-anchor="start" x="6530" y="-1724" font-family="Helvetica,sans-Serif" font-size="10.00">+ Clear()</text>
<text text-anchor="start" x="6530" y="-1713" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetEchoLevel()</text>
<text text-anchor="start" x="6530" y="-1702" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="6530" y="-1691" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="6530" y="-1680" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="6530" y="-1669" font-family="Helvetica,sans-Serif" font-size="10.00"># SolveMomentumIteration()</text>
<text text-anchor="start" x="6530" y="-1658" font-family="Helvetica,sans-Serif" font-size="10.00"># SolveContinuityIteration()</text>
<text text-anchor="start" x="6530" y="-1647" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckVelocityConvergence()</text>
<text text-anchor="start" x="6530" y="-1636" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckPressureConvergence()</text>
<text text-anchor="start" x="6530" y="-1625" font-family="Helvetica,sans-Serif" font-size="10.00"># FixTimeStepMomentum()</text>
<text text-anchor="start" x="6530" y="-1614" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckMomentumConvergence()</text>
<text text-anchor="start" x="6530" y="-1603" font-family="Helvetica,sans-Serif" font-size="10.00"># FixTimeStepContinuity()</text>
<text text-anchor="start" x="6530" y="-1592" font-family="Helvetica,sans-Serif" font-size="10.00"># CheckContinuityConvergence()</text>
<text text-anchor="start" x="6530" y="-1581" font-family="Helvetica,sans-Serif" font-size="10.00"># operator=()</text>
<text text-anchor="start" x="6530" y="-1570" font-family="Helvetica,sans-Serif" font-size="10.00"># TwoStepVPStrategy()</text>
<text text-anchor="start" x="6530" y="-1559" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="6530" y="-1548" font-family="Helvetica,sans-Serif" font-size="10.00">* TDataType</text>
<text text-anchor="start" x="6530" y="-1537" font-family="Helvetica,sans-Serif" font-size="10.00">* DofsArrayType</text>
<text text-anchor="start" x="6530" y="-1526" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemMatrixType</text>
<text text-anchor="start" x="6530" y="-1515" font-family="Helvetica,sans-Serif" font-size="10.00">* TSystemVectorType</text>
<text text-anchor="start" x="6530" y="-1504" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemVectorType</text>
<text text-anchor="start" x="6530" y="-1493" font-family="Helvetica,sans-Serif" font-size="10.00">* LocalSystemMatrixType</text>
<text text-anchor="start" x="6530" y="-1482" font-family="Helvetica,sans-Serif" font-size="10.00">* StrategyPointerType</text>
<text text-anchor="start" x="6530" y="-1471" font-family="Helvetica,sans-Serif" font-size="10.00">* SolverSettingsType</text>
<text text-anchor="start" x="6530" y="-1460" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="6530" y="-1449" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="6530" y="-1438" font-family="Helvetica,sans-Serif" font-size="10.00">* mVelocityTolerance</text>
<text text-anchor="start" x="6530" y="-1427" font-family="Helvetica,sans-Serif" font-size="10.00">* mPressureTolerance</text>
<text text-anchor="start" x="6530" y="-1416" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxPressureIter</text>
<text text-anchor="start" x="6530" y="-1405" font-family="Helvetica,sans-Serif" font-size="10.00">* mDomainSize</text>
<text text-anchor="start" x="6530" y="-1394" font-family="Helvetica,sans-Serif" font-size="10.00">* mTimeOrder</text>
<text text-anchor="start" x="6530" y="-1383" font-family="Helvetica,sans-Serif" font-size="10.00">* mReformDofSet</text>
<text text-anchor="start" x="6530" y="-1372" font-family="Helvetica,sans-Serif" font-size="10.00">* mpMomentumStrategy</text>
<text text-anchor="start" x="6530" y="-1361" font-family="Helvetica,sans-Serif" font-size="10.00">* mpPressureStrategy</text>
<text text-anchor="start" x="6530" y="-1350" font-family="Helvetica,sans-Serif" font-size="10.00">* TwoStepVPStrategy()</text>
<text text-anchor="start" x="6530" y="-1339" font-family="Helvetica,sans-Serif" font-size="10.00">* ~TwoStepVPStrategy()</text>
<text text-anchor="start" x="6530" y="-1328" font-family="Helvetica,sans-Serif" font-size="10.00">* Check()</text>
<text text-anchor="start" x="6530" y="-1317" font-family="Helvetica,sans-Serif" font-size="10.00">* SetTimeCoefficients()</text>
<text text-anchor="start" x="6530" y="-1306" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveSolutionStep()</text>
<text text-anchor="start" x="6530" y="-1295" font-family="Helvetica,sans-Serif" font-size="10.00">* FinalizeSolutionStep()</text>
<text text-anchor="start" x="6530" y="-1284" font-family="Helvetica,sans-Serif" font-size="10.00">* InitializeSolutionStep()</text>
<text text-anchor="start" x="6530" y="-1273" font-family="Helvetica,sans-Serif" font-size="10.00">* UpdateStressStrain()</text>
<text text-anchor="start" x="6530" y="-1262" font-family="Helvetica,sans-Serif" font-size="10.00">* Clear()</text>
<text text-anchor="start" x="6530" y="-1251" font-family="Helvetica,sans-Serif" font-size="10.00">* SetEchoLevel()</text>
<text text-anchor="start" x="6530" y="-1240" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="6530" y="-1229" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="6530" y="-1218" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="6530" y="-1207" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveMomentumIteration()</text>
<text text-anchor="start" x="6530" y="-1196" font-family="Helvetica,sans-Serif" font-size="10.00">* SolveContinuityIteration()</text>
<text text-anchor="start" x="6530" y="-1185" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckVelocityConvergence()</text>
<text text-anchor="start" x="6530" y="-1174" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckPressureConvergence()</text>
<text text-anchor="start" x="6530" y="-1163" font-family="Helvetica,sans-Serif" font-size="10.00">* FixTimeStepMomentum()</text>
<text text-anchor="start" x="6530" y="-1152" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckMomentumConvergence()</text>
<text text-anchor="start" x="6530" y="-1141" font-family="Helvetica,sans-Serif" font-size="10.00">* FixTimeStepContinuity()</text>
<text text-anchor="start" x="6530" y="-1130" font-family="Helvetica,sans-Serif" font-size="10.00">* CheckContinuityConvergence()</text>
<text text-anchor="start" x="6530" y="-1119" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="6530" y="-1108" font-family="Helvetica,sans-Serif" font-size="10.00">* TwoStepVPStrategy()</text>
</a>
</g>
</g>
<!-- Node62&#45;&gt;Node64 -->
<g id="edge48" class="edge">
<title>Node62&#45;&gt;Node64</title>
<path fill="none" stroke="#63b8ff" d="M6502.24,-2179.73C6506.19,-2163.64 6509.96,-2147.68 6513.5,-2132 6525.95,-2076.87 6537.6,-2018.59 6548.25,-1960.86"/>
<polygon fill="none" stroke="#63b8ff" points="6498.85,-2178.87 6499.85,-2189.42 6505.65,-2180.55 6498.85,-2178.87"/>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="class_kratos_1_1_solving_strategy__inherit__graph_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
