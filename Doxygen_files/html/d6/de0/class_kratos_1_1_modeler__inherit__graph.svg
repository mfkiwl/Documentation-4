<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 7.1.0 (0)
 -->
<!-- Title: Kratos::Modeler Pages: 1 -->
<!--zoomable 1084 -->
<svg id="main" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" onload="init(evt)">
<style type="text/css"><![CDATA[
.edge:hover path { stroke: red; }
.edge:hover polygon { stroke: red; fill: red; }
]]></style>
<script type="text/javascript"><![CDATA[
var edges = document.getElementsByTagName('g');
if (edges && edges.length) {
  for (var i=0;i<edges.length;i++) {
    if (edges[i].id.substr(0,4)=='edge') {
      edges[i].setAttribute('class','edge');
    }
  }
}
]]></script>
        <defs>
                <circle id="rim" cx="0" cy="0" r="7"/>
                <circle id="rim2" cx="0" cy="0" r="3.5"/>
                <g id="zoomPlus">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomplus.mouseover" end="zoomplus.mouseout"/>
                        </use>
                        <path d="M-4,0h8M0,-4v8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="zoomMin">
                        <use xlink:href="#rim" fill="#404040">
                                <set attributeName="fill" to="#808080" begin="zoomminus.mouseover" end="zoomminus.mouseout"/>
                        </use>
                        <path d="M-4,0h8" fill="none" stroke="white" stroke-width="1.5" pointer-events="none"/>
                </g>
                <g id="dirArrow">
                        <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
               <g id="resetDef">
                       <use xlink:href="#rim2" fill="#404040">
                               <set attributeName="fill" to="#808080" begin="reset.mouseover" end="reset.mouseout"/>
                       </use>
               </g>
        </defs>

<script type="text/javascript">
var viewWidth = 615;
var viewHeight = 1084;
var sectionId = 'dynsection-0';
</script>
<script xlink:href="../../svgpan.js"/>
<svg id="graph" class="graph">
<g id="viewport">
<title>Kratos::Modeler</title>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="Modeler to interact with ModelParts.">
<polygon fill="#999999" stroke="#666666" points="236.5,-644.5 236.5,-1075.5 388.5,-1075.5 388.5,-644.5 236.5,-644.5"/>
<text text-anchor="middle" x="312.5" y="-1063.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::Modeler</text>
<polyline fill="none" stroke="#666666" points="236.5,-1056.5 388.5,-1056.5"/>
<text text-anchor="start" x="244.5" y="-1044.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mParameters</text>
<text text-anchor="start" x="244.5" y="-1033.5" font-family="Helvetica,sans-Serif" font-size="10.00"># mEchoLevel</text>
<polyline fill="none" stroke="#666666" points="236.5,-1026.5 388.5,-1026.5"/>
<text text-anchor="start" x="244.5" y="-1014.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Modeler()</text>
<text text-anchor="start" x="244.5" y="-1003.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Modeler()</text>
<text text-anchor="start" x="244.5" y="-992.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~Modeler()</text>
<text text-anchor="start" x="244.5" y="-981.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Create()</text>
<text text-anchor="start" x="244.5" y="-970.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetupGeometryModel()</text>
<text text-anchor="start" x="244.5" y="-959.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrepareGeometryModel()</text>
<text text-anchor="start" x="244.5" y="-948.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ SetupModelPart()</text>
<text text-anchor="start" x="244.5" y="-937.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GetDefaultParameters()</text>
<text text-anchor="start" x="244.5" y="-926.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GenerateModelPart()</text>
<text text-anchor="start" x="244.5" y="-915.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GenerateMesh()</text>
<text text-anchor="start" x="244.5" y="-904.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GenerateNodes()</text>
<text text-anchor="start" x="244.5" y="-893.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="244.5" y="-882.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="244.5" y="-871.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="244.5" y="-860.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="244.5" y="-849.5" font-family="Helvetica,sans-Serif" font-size="10.00">* IndexType</text>
<text text-anchor="start" x="244.5" y="-838.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="244.5" y="-827.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="244.5" y="-816.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mParameters</text>
<text text-anchor="start" x="244.5" y="-805.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mEchoLevel</text>
<text text-anchor="start" x="244.5" y="-794.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Modeler()</text>
<text text-anchor="start" x="244.5" y="-783.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Modeler()</text>
<text text-anchor="start" x="244.5" y="-772.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~Modeler()</text>
<text text-anchor="start" x="244.5" y="-761.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Create()</text>
<text text-anchor="start" x="244.5" y="-750.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetupGeometryModel()</text>
<text text-anchor="start" x="244.5" y="-739.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrepareGeometryModel()</text>
<text text-anchor="start" x="244.5" y="-728.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SetupModelPart()</text>
<text text-anchor="start" x="244.5" y="-717.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GetDefaultParameters()</text>
<text text-anchor="start" x="244.5" y="-706.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GenerateModelPart()</text>
<text text-anchor="start" x="244.5" y="-695.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GenerateMesh()</text>
<text text-anchor="start" x="244.5" y="-684.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GenerateNodes()</text>
<text text-anchor="start" x="244.5" y="-673.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="244.5" y="-662.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="244.5" y="-651.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="../../da/de3/class_kratos_1_1_cartesian_mesh_generator_modeler.html" target="_top" xlink:title="Short class definition.">
<polygon fill="white" stroke="#666666" points="0,-0.5 0,-607.5 205,-607.5 205,-0.5 0,-0.5"/>
<text text-anchor="start" x="8" y="-595.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::CartesianMeshGenerator</text>
<text text-anchor="middle" x="102.5" y="-584.5" font-family="Helvetica,sans-Serif" font-size="10.00">Modeler</text>
<polyline fill="none" stroke="#666666" points="0,-577.5 205,-577.5"/>
<text text-anchor="middle" x="102.5" y="-565.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="0,-558.5 205,-558.5"/>
<text text-anchor="start" x="8" y="-546.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CartesianMeshGeneratorModeler()</text>
<text text-anchor="start" x="8" y="-535.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~CartesianMeshGeneratorModeler()</text>
<text text-anchor="start" x="8" y="-524.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GenerateMesh()</text>
<text text-anchor="start" x="8" y="-513.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateNormals()</text>
<text text-anchor="start" x="8" y="-502.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ FindNearestNodeIndex()</text>
<text text-anchor="start" x="8" y="-491.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateIsInside()</text>
<text text-anchor="start" x="8" y="-480.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateBoundaryIntersections()</text>
<text text-anchor="start" x="8" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateBoundingBox()</text>
<text text-anchor="start" x="8" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ CalculateDivisionNumbers()</text>
<text text-anchor="start" x="8" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GenerateNodes()</text>
<text text-anchor="start" x="8" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ElementIndex()</text>
<text text-anchor="start" x="8" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ NodeIndex()</text>
<text text-anchor="start" x="8" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="8" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="8" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="8" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="8" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PointType</text>
<text text-anchor="start" x="8" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodeType</text>
<text text-anchor="start" x="8" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GeometryType</text>
<text text-anchor="start" x="8" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodesVectorType</text>
<text text-anchor="start" x="8" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="8" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="8" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="8" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mrModelPart</text>
<text text-anchor="start" x="8" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mElementSize</text>
<text text-anchor="start" x="8" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMinPoint</text>
<text text-anchor="start" x="8" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mMaxPoint</text>
<text text-anchor="start" x="8" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mSegmentsNumber</text>
<text text-anchor="start" x="8" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mDivisionsNumber</text>
<text text-anchor="start" x="8" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mIntersections</text>
<text text-anchor="start" x="8" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mIsInside</text>
<text text-anchor="start" x="8" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* mNormals</text>
<text text-anchor="start" x="8" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CartesianMeshGeneratorModeler()</text>
<text text-anchor="start" x="8" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~CartesianMeshGeneratorModeler()</text>
<text text-anchor="start" x="8" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GenerateMesh()</text>
<text text-anchor="start" x="8" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateNormals()</text>
<text text-anchor="start" x="8" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* FindNearestNodeIndex()</text>
<text text-anchor="start" x="8" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateIsInside()</text>
<text text-anchor="start" x="8" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateBoundaryIntersections()</text>
<text text-anchor="start" x="8" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateBoundingBox()</text>
<text text-anchor="start" x="8" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CalculateDivisionNumbers()</text>
<text text-anchor="start" x="8" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GenerateNodes()</text>
<text text-anchor="start" x="8" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ElementIndex()</text>
<text text-anchor="start" x="8" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodeIndex()</text>
<text text-anchor="start" x="8" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="8" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="8" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="8" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GenerateNodes()</text>
<text text-anchor="start" x="8" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="8" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">* CartesianMeshGeneratorModeler()</text>
</a>
</g>
</g>
<!-- Node1&#45;&gt;Node2 -->
<g id="edge1" class="edge">
<title>Node1&#45;&gt;Node2</title>
<path fill="none" stroke="#63b8ff" d="M232.55,-657.58C226.06,-640.83 219.64,-624.14 213.5,-608 210.66,-600.54 207.8,-592.97 204.91,-585.33"/>
<polygon fill="none" stroke="#63b8ff" points="229.18,-658.55 236.06,-666.6 235.7,-656.01 229.18,-658.55"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<g id="a_node3"><a xlink:href="../../d0/d7d/class_kratos_1_1_edge_swapping2_d_modeler.html" target="_top" xlink:title="Optimizes a 2D mesh by swapping the edges between elements.">
<polygon fill="white" stroke="#666666" points="223,-61 223,-547 402,-547 402,-61 223,-61"/>
<text text-anchor="middle" x="312.5" y="-535" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::EdgeSwapping2DModeler</text>
<polyline fill="none" stroke="#666666" points="223,-528 402,-528"/>
<text text-anchor="middle" x="312.5" y="-516" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="223,-509 402,-509"/>
<text text-anchor="start" x="231" y="-497" font-family="Helvetica,sans-Serif" font-size="10.00">+ EdgeSwapping2DModeler()</text>
<text text-anchor="start" x="231" y="-486" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~EdgeSwapping2DModeler()</text>
<text text-anchor="start" x="231" y="-475" font-family="Helvetica,sans-Serif" font-size="10.00">+ Remesh()</text>
<text text-anchor="start" x="231" y="-464" font-family="Helvetica,sans-Serif" font-size="10.00">+ WriteMesh()</text>
<text text-anchor="start" x="231" y="-453" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="231" y="-442" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="231" y="-431" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="231" y="-420" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="231" y="-409" font-family="Helvetica,sans-Serif" font-size="10.00">* PointType</text>
<text text-anchor="start" x="231" y="-398" font-family="Helvetica,sans-Serif" font-size="10.00">* NodeType</text>
<text text-anchor="start" x="231" y="-387" font-family="Helvetica,sans-Serif" font-size="10.00">* GeometryType</text>
<text text-anchor="start" x="231" y="-376" font-family="Helvetica,sans-Serif" font-size="10.00">* NodesVectorType</text>
<text text-anchor="start" x="231" y="-365" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="231" y="-354" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="231" y="-343" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="231" y="-332" font-family="Helvetica,sans-Serif" font-size="10.00">* mBadQuality</text>
<text text-anchor="start" x="231" y="-321" font-family="Helvetica,sans-Serif" font-size="10.00">* mNodalNeighbourElements</text>
<text text-anchor="start" x="231" y="-310" font-family="Helvetica,sans-Serif" font-size="10.00">* mCollapsingData</text>
<text text-anchor="start" x="231" y="-299" font-family="Helvetica,sans-Serif" font-size="10.00">* mSwappingData</text>
<text text-anchor="start" x="231" y="-288" font-family="Helvetica,sans-Serif" font-size="10.00">* EdgeSwapping2DModeler()</text>
<text text-anchor="start" x="231" y="-277" font-family="Helvetica,sans-Serif" font-size="10.00">* ~EdgeSwapping2DModeler()</text>
<text text-anchor="start" x="231" y="-266" font-family="Helvetica,sans-Serif" font-size="10.00">* Remesh()</text>
<text text-anchor="start" x="231" y="-255" font-family="Helvetica,sans-Serif" font-size="10.00">* WriteMesh()</text>
<text text-anchor="start" x="231" y="-244" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="231" y="-233" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="231" y="-222" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="231" y="-211" font-family="Helvetica,sans-Serif" font-size="10.00">* CollapseNodes()</text>
<text text-anchor="start" x="231" y="-200" font-family="Helvetica,sans-Serif" font-size="10.00">* SetCollapsingData()</text>
<text text-anchor="start" x="231" y="-189" font-family="Helvetica,sans-Serif" font-size="10.00">* SetNodalCollapsingData()</text>
<text text-anchor="start" x="231" y="-178" font-family="Helvetica,sans-Serif" font-size="10.00">* Distance2()</text>
<text text-anchor="start" x="231" y="-167" font-family="Helvetica,sans-Serif" font-size="10.00">* Swap()</text>
<text text-anchor="start" x="231" y="-156" font-family="Helvetica,sans-Serif" font-size="10.00">* MarkBadQualityElements()</text>
<text text-anchor="start" x="231" y="-145" font-family="Helvetica,sans-Serif" font-size="10.00">* ElementQuality()</text>
<text text-anchor="start" x="231" y="-134" font-family="Helvetica,sans-Serif" font-size="10.00">* FindNodalNeighbours()</text>
<text text-anchor="start" x="231" y="-123" font-family="Helvetica,sans-Serif" font-size="10.00">* SetSwappingData()</text>
<text text-anchor="start" x="231" y="-112" font-family="Helvetica,sans-Serif" font-size="10.00">* FindNeighbourElement()</text>
<text text-anchor="start" x="231" y="-101" font-family="Helvetica,sans-Serif" font-size="10.00">* PrepareForSwapping()</text>
<text text-anchor="start" x="231" y="-90" font-family="Helvetica,sans-Serif" font-size="10.00">* IsInElementSphere()</text>
<text text-anchor="start" x="231" y="-79" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="231" y="-68" font-family="Helvetica,sans-Serif" font-size="10.00">* EdgeSwapping2DModeler()</text>
</a>
</g>
</g>
<!-- Node1&#45;&gt;Node3 -->
<g id="edge2" class="edge">
<title>Node1&#45;&gt;Node3</title>
<path fill="none" stroke="#63b8ff" d="M312.5,-633.47C312.5,-604.89 312.5,-575.55 312.5,-546.73"/>
<polygon fill="none" stroke="#63b8ff" points="309,-633.3 312.5,-643.3 316,-633.3 309,-633.3"/>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="../../d1/d35/class_kratos_1_1_structured_mesh_refinement_modeler.html" target="_top" xlink:title="Short class definition.">
<polygon fill="white" stroke="#666666" points="420,-77.5 420,-530.5 607,-530.5 607,-77.5 420,-77.5"/>
<text text-anchor="start" x="428" y="-518.5" font-family="Helvetica,sans-Serif" font-size="10.00">Kratos::StructuredMeshRefinement</text>
<text text-anchor="middle" x="513.5" y="-507.5" font-family="Helvetica,sans-Serif" font-size="10.00">Modeler</text>
<polyline fill="none" stroke="#666666" points="420,-500.5 607,-500.5"/>
<text text-anchor="middle" x="513.5" y="-488.5" font-family="Helvetica,sans-Serif" font-size="10.00"> </text>
<polyline fill="none" stroke="#666666" points="420,-481.5 607,-481.5"/>
<text text-anchor="start" x="428" y="-469.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ StructuredMeshRefinement</text>
<text text-anchor="start" x="428" y="-458.5" font-family="Helvetica,sans-Serif" font-size="10.00">Modeler()</text>
<text text-anchor="start" x="428" y="-447.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ ~StructuredMeshRefinement</text>
<text text-anchor="start" x="428" y="-436.5" font-family="Helvetica,sans-Serif" font-size="10.00">Modeler()</text>
<text text-anchor="start" x="428" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GenerateMesh()</text>
<text text-anchor="start" x="428" y="-414.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GenerateNodes()</text>
<text text-anchor="start" x="428" y="-403.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GenerateNode()</text>
<text text-anchor="start" x="428" y="-392.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GenerateElements()</text>
<text text-anchor="start" x="428" y="-381.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GenerateConditions()</text>
<text text-anchor="start" x="428" y="-370.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ GenerateNodes()</text>
<text text-anchor="start" x="428" y="-359.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ Info()</text>
<text text-anchor="start" x="428" y="-348.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintInfo()</text>
<text text-anchor="start" x="428" y="-337.5" font-family="Helvetica,sans-Serif" font-size="10.00">+ PrintData()</text>
<text text-anchor="start" x="428" y="-326.5" font-family="Helvetica,sans-Serif" font-size="10.00">* BaseType</text>
<text text-anchor="start" x="428" y="-315.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodeType</text>
<text text-anchor="start" x="428" y="-304.5" font-family="Helvetica,sans-Serif" font-size="10.00">* NodesVectorType</text>
<text text-anchor="start" x="428" y="-293.5" font-family="Helvetica,sans-Serif" font-size="10.00">* SizeType</text>
<text text-anchor="start" x="428" y="-282.5" font-family="Helvetica,sans-Serif" font-size="10.00">* KRATOS_CLASS_POINTER</text>
<text text-anchor="start" x="428" y="-271.5" font-family="Helvetica,sans-Serif" font-size="10.00">_DEFINITION()</text>
<text text-anchor="start" x="428" y="-260.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StructuredMeshRefinement</text>
<text text-anchor="start" x="428" y="-249.5" font-family="Helvetica,sans-Serif" font-size="10.00">Modeler()</text>
<text text-anchor="start" x="428" y="-238.5" font-family="Helvetica,sans-Serif" font-size="10.00">* ~StructuredMeshRefinement</text>
<text text-anchor="start" x="428" y="-227.5" font-family="Helvetica,sans-Serif" font-size="10.00">Modeler()</text>
<text text-anchor="start" x="428" y="-216.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GenerateMesh()</text>
<text text-anchor="start" x="428" y="-205.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GenerateNodes()</text>
<text text-anchor="start" x="428" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GenerateNode()</text>
<text text-anchor="start" x="428" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GenerateElements()</text>
<text text-anchor="start" x="428" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GenerateConditions()</text>
<text text-anchor="start" x="428" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GenerateNodes()</text>
<text text-anchor="start" x="428" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">* Info()</text>
<text text-anchor="start" x="428" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintInfo()</text>
<text text-anchor="start" x="428" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">* PrintData()</text>
<text text-anchor="start" x="428" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">* GenerateNodes()</text>
<text text-anchor="start" x="428" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">* operator=()</text>
<text text-anchor="start" x="428" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">* StructuredMeshRefinement</text>
<text text-anchor="start" x="428" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">Modeler()</text>
</a>
</g>
</g>
<!-- Node1&#45;&gt;Node4 -->
<g id="edge3" class="edge">
<title>Node1&#45;&gt;Node4</title>
<path fill="none" stroke="#63b8ff" d="M392.48,-658.89C399.03,-641.72 405.44,-624.58 411.5,-608 420.64,-582.97 429.94,-556.68 439.02,-530.48"/>
<polygon fill="none" stroke="#63b8ff" points="389.24,-657.57 388.94,-668.16 395.78,-660.07 389.24,-657.57"/>
</g>
</g>
</svg>
        <g id="navigator" transform="translate(0 0)" fill="#404254">
                <rect fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width=".5" x="0" y="0" width="60" height="60"/>
                <use id="zoomplus" xlink:href="#zoomPlus" x="17" y="9" onmousedown="handleZoom(evt,'in')"/>
                <use id="zoomminus" xlink:href="#zoomMin" x="42" y="9" onmousedown="handleZoom(evt,'out')"/>
                <use id="reset" xlink:href="#resetDef" x="30" y="36" onmousedown="handleReset()"/>
                <g id="arrowUp" xlink:href="#dirArrow" transform="translate(30 24)" onmousedown="handlePan(0,-1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowUp.mouseover" end="arrowUp.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowRight" xlink:href="#dirArrow" transform="rotate(90) translate(36 -43)" onmousedown="handlePan(1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowRight.mouseover" end="arrowRight.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowDown" xlink:href="#dirArrow" transform="rotate(180) translate(-30 -48)" onmousedown="handlePan(0,1)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowDown.mouseover" end="arrowDown.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
                <g id="arrowLeft" xlink:href="#dirArrow" transform="rotate(270) translate(-36 17)" onmousedown="handlePan(-1,0)">
                  <use xlink:href="#rim" fill="#404040">
                        <set attributeName="fill" to="#808080" begin="arrowLeft.mouseover" end="arrowLeft.mouseout"/>
                  </use>
                  <path fill="none" stroke="white" stroke-width="1.5" d="M0,-3.0v7 M-2.5,-0.5L0,-3.0L2.5,-0.5"/>
                </g>
        </g>
        <svg viewBox="0 0 15 15" width="100%" height="30px" preserveAspectRatio="xMaxYMin meet">
         <g id="arrow_out" transform="scale(0.3 0.3)">
          <a xlink:href="class_kratos_1_1_modeler__inherit__graph_org.svg" target="_base">
           <rect id="button" ry="5" rx="5" y="6" x="6" height="38" width="38"
                fill="#f2f5e9" fill-opacity="0.5" stroke="#606060" stroke-width="1.0"/>
           <path id="arrow"
             d="M 11.500037,31.436501 C 11.940474,20.09759 22.043105,11.32322 32.158766,21.979434 L 37.068811,17.246167 C 37.068811,17.246167 37.088388,32 37.088388,32 L 22.160133,31.978069 C 22.160133,31.978069 26.997745,27.140456 26.997745,27.140456 C 18.528582,18.264221 13.291696,25.230495 11.500037,31.436501 z"
             style="fill:#404040;"/>
          </a>
         </g>
        </svg>
</svg>
